ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_ADC_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_ADC_MspInit:
  25              	.LVL0:
  26              	.LFB970:
  27              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c"
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @file    stm32wlxx_hal_adc.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          "stm32wlxx_hal_adc_ex.c".
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   @verbatim
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   [..]
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 2


  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Programmable sampling time (common to group of channels)
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC calibration
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC conversion of regular group.
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       Vdda or to an external voltage reference).
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      ##### How to use this driver #####
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ==============================================================================
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ============================================================
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Enable the ADC interface
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              Caution: On STM32WL, ADC clock frequency max is 35MHz (refer
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       to device datasheet).
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       Therefore, ADC clock source from RCC and ADC clock
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       prescaler must be configured to remain below
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       this maximum frequency.
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) Two clock settings are mandatory:
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    Four possible clock sources: synchronous clock from APB clock (same as ADC core 
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    or asynchronous clock from RCC level: SYSCLK, HSI16, PLLPCLK.
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) Example:
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    other device clock parameters configuration:
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory: core clock)
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) ADC pins configuration
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 3


  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_GPIO_Init()
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure the NVIC for ADC
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               into the function of corresponding ADC interruption vector
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADCx_IRQHandler().
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_DMA_Init().
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure the NVIC for DMA
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ================================================================
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADC_Init().
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         monitored, thresholds, ...)
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Execution of ADC conversions ***
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ====================================
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         conversion accuracy
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         transfer by DMA.
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC conversion by polling:
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Start()
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Retrieve conversion results
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Stop()
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC conversion by interruption:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 4


 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 (this function must be implemented in user program)
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Retrieve conversion results
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 (these functions must be implemented in user program)
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 destination variable address.
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Deinitialization of ADC ***
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ============================================================
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Disable the ADC interface
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC clock disable
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) Example:
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    other device clock parameters configuration:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) ADC pins configuration
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Disable the NVIC for ADC
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Deinitialize the DMA
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_DMA_Init().
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 5


 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Disable the NVIC for DMA
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     *** Callback registration ***
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     =============================================
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      to register an interrupt callback.
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      and a pointer to the user callback function.
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      weak function.
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      and the Callback ID.
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      This function allows to reset following callbacks:
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/HAL_ADC_DeInit() only when
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/HAL_ADC_DeInit()
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 6


 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      or HAL_ADC_Init() function.
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      are set to the corresponding weak functions.
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   @endverbatim
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ******************************************************************************
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @attention
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * All rights reserved.</center></h2>
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ******************************************************************************
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #include "stm32wlxx_hal.h"
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @addtogroup STM32WLxx_HAL_Driver
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC ADC
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief ADC HAL module driver
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* settling time.                                                           */
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Values defined to be higher than worst cases: low clock frequency,       */
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* maximum prescaler.                                                       */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 7


 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Unit: ms                                                                 */
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_STOP_CONVERSION_TIMEOUT     (2UL)
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_CHANNEL_CONF_RDY_TIMEOUT    (1UL)
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | \
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ADC_CHSELR_SQ5 | ADC_CHSELR_SQ6 | ADC_CHSELR_SQ7 | ADC_CHS
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]  This section provides functions allowing to:
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Initialize and configure the ADC.
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) De-initialize the ADC.
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         in header of this file).
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 8


 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         before HAL_ADC_Init().
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         "ADC_InitTypeDef".
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check ADC handle */
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc == NULL)
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     return HAL_ERROR;
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 9


 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ADC group regular discontinuous mode can be enabled only if              */
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* continuous mode is disabled.                                             */
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Init the ADC Callback settings */
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Init the low level hardware */
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Init the low level hardware */
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC error code to none */
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Initialize Lock */
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Delay for ADC stabilization time */
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Wait loop initialization and execution */
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       wait_loop_index--;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 10


 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC state machine to error */
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Clock configuration                                                 */
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - ADC resolution                                                      */
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Oversampling                                                        */
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Trigger frequency mode                                              */
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* parameters):                                                         */
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*   - internal measurement paths (VrefInt, ...)                        */
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configuration of ADC resolution                                      */
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_RES,
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 11


 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  hadc->Init.Resolution);
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmpCFGR2 |= ((hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                   );
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmpCFGR2 |= (ADC_CFGR2_OVSE |
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                     );
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_LFTRIG |
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_OVSE   |
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_OVSR   |
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_OVSS   |
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_TOVS,
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  tmpCFGR2);
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* with selectable prescaler.                                           */
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         MODIFY_REG(ADC_COMMON->CCR,
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CCR_PRESC,
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC);
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - overrun                                                             */
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - external trigger polarity                                           */
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - data alignment                                                      */
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - resolution                                                          */
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - scan direction                                                      */
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - DMA continuous request                                              */
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  hadc->Init.DataAlign                                           |
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 12


 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update setting of discontinuous mode only if continuous mode is disabled */
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Enable the selected ADC group regular discontinuous mode */
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmpCFGR1 |= ADC_CFGR1_DISCEN;
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* cannot be enabled simultaneously.                                  */
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update ADC state machine to error */
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* start.                                                                 */
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       software start.                                                  */
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmpCFGR1 |= ((hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ExternalTrigConvEdge);
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC configuration register with previous settings */
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR1,
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_DISCEN  |
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_AUTOFF  |
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_WAIT    |
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_CONT    |
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_OVRMOD  |
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_EXTSEL  |
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_EXTEN   |
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_ALIGN   |
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_SCANDIR |
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_DMACFG,
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                tmpCFGR1);
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR2,
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR2_LFTRIG |
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR2_OVSE   |
 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR2_OVSR   |
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR2_OVSS   |
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR2_TOVS,
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                tmpCFGR2);
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Channel sampling time configuration */
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 13


 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Count number of ranks available in HAL ADC handle variable */
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       uint32_t ADCGroupRegularSequencerRanksCount;
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Parse all ranks from 1 to 8 */
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       for (ADCGroupRegularSequencerRanksCount = 0UL; ADCGroupRegularSequencerRanksCount < (8UL); AD
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Check each sequencer rank until value of end of sequence */
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (((hadc->ADCGroupRegularSequencerRanks >> (ADCGroupRegularSequencerRanksCount * 4UL)) & 
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (ADCGroupRegularSequencerRanksCount == 1UL)
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC group regular sequencer:                                   */
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set sequencer scan length by clearing ranks above rank 1           */
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* and do not modify rank 1 value.                                    */
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->Instance->CHSELR,
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC group regular sequencer:                                   */
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*  - Set ADC group regular sequencer to value memorized              */
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*    in HAL ADC handle                                               */
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*    Note: This value maybe be initialized at a unknown value,       */
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*          therefore after the first call of "HAL_ADC_Init()",       */
 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*          each rank corresponding to parameter "NbrOfConversion"    */
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*          must be set using "HAL_ADC_ConfigChannel()".              */
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*    and do not modify other ranks value.                            */
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CHSELR,
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RAN
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 14


 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                   );
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check through register CFGR1 (excluding analog watchdog configuration: */
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* set into separate dedicated function, and bits of ADC resolution set   */
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* out of temporary variable 'tmpCFGR1').                                 */
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CF
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         == tmpCFGR1)
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to none */
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the ADC state */
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC state machine to error */
 753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the core clock reset all ADC instances).
 769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         common group is still running.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 15


 773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
 775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check ADC handle */
 781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc == NULL)
 782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     return HAL_ERROR;
 784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC state */
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable the ADC peripheral */
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Change ADC state */
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC internal voltage regulator */
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register IER */
 820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register ISR */
 826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 16


 830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CR */
 832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CFGR1 */
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH   | ADC_CFGR1_AWD1EN  | ADC_CFGR1_AWD1SGL | ADC_CFGR1
 837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_RE
 839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN);
 840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CFGR2 */
 842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       already done above.                                              */
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register SMPR */
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
 848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register TR1 */
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->TR1 &= ~(ADC_TR1_HT1 | ADC_TR1_LT1);
 851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CHSELR */
 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
 854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register DR */
 856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
 857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CCR */
 859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_COMMON->CCR &= ~(ADC_CCR_VBATEN | ADC_CCR_TSEN | ADC_CCR_VREFEN | ADC_CCR_PRESC);
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Hard reset ADC peripheral ========== */
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* forced to a similar state after device power-on.                       */
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: A possible implementation is to add RCC bus reset of ADC         */
 865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* (for example, using macro                                              */
 866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* DeInit the low level hardware */
 875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* DeInit the low level hardware */
 878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset HAL ADC handle variable */
 882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
 883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC error code to none */
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 17


 887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC state */
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
 899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
  28              		.loc 1 901 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
  33              		.loc 1 903 3 view .LVU1
 904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****    */
 908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
  34              		.loc 1 908 1 is_stmt 0 view .LVU2
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE970:
  39              		.section	.text.HAL_ADC_Init,"ax",%progbits
  40              		.align	1
  41              		.global	HAL_ADC_Init
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HAL_ADC_Init:
  47              	.LVL1:
  48              	.LFB968:
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  49              		.loc 1 389 1 is_stmt 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 8
  52              		@ frame_needed = 0, uses_anonymous_args = 0
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  53              		.loc 1 389 1 is_stmt 0 view .LVU4
  54 0000 70B5     		push	{r4, r5, r6, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 16
  57              		.cfi_offset 4, -16
  58              		.cfi_offset 5, -12
  59              		.cfi_offset 6, -8
  60              		.cfi_offset 14, -4
  61 0002 82B0     		sub	sp, sp, #8
  62              	.LCFI1:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 18


  63              		.cfi_def_cfa_offset 24
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
  64              		.loc 1 390 3 is_stmt 1 view .LVU5
  65              	.LVL2:
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
  66              		.loc 1 391 3 view .LVU6
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
  67              		.loc 1 392 3 view .LVU7
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
  68              		.loc 1 393 3 view .LVU8
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  69              		.loc 1 394 3 view .LVU9
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  70              		.loc 1 394 17 is_stmt 0 view .LVU10
  71 0004 0023     		movs	r3, #0
  72 0006 0193     		str	r3, [sp, #4]
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
  73              		.loc 1 397 3 is_stmt 1 view .LVU11
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
  74              		.loc 1 397 6 is_stmt 0 view .LVU12
  75 0008 0028     		cmp	r0, #0
  76 000a 00F02881 		beq	.L25
  77 000e 0446     		mov	r4, r0
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
  78              		.loc 1 403 3 is_stmt 1 view .LVU13
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
  79              		.loc 1 404 3 view .LVU14
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
  80              		.loc 1 405 3 view .LVU15
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
  81              		.loc 1 406 3 view .LVU16
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  82              		.loc 1 407 3 view .LVU17
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  83              		.loc 1 408 3 view .LVU18
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
  84              		.loc 1 409 3 view .LVU19
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
  85              		.loc 1 410 3 view .LVU20
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
  86              		.loc 1 411 3 view .LVU21
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
  87              		.loc 1 412 3 view .LVU22
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
  88              		.loc 1 413 3 view .LVU23
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
  89              		.loc 1 414 3 view .LVU24
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
  90              		.loc 1 415 3 view .LVU25
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
  91              		.loc 1 416 3 view .LVU26
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
  92              		.loc 1 417 3 view .LVU27
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
  93              		.loc 1 418 3 view .LVU28
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
  94              		.loc 1 419 3 view .LVU29
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 19


 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
  95              		.loc 1 421 5 view .LVU30
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
  96              		.loc 1 422 5 view .LVU31
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
  97              		.loc 1 423 5 view .LVU32
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  98              		.loc 1 425 3 view .LVU33
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
  99              		.loc 1 427 3 view .LVU34
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 100              		.loc 1 433 7 view .LVU35
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 101              		.loc 1 439 3 view .LVU36
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 102              		.loc 1 443 3 view .LVU37
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 103              		.loc 1 443 11 is_stmt 0 view .LVU38
 104 0010 836D     		ldr	r3, [r0, #88]
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 105              		.loc 1 443 6 view .LVU39
 106 0012 BBB1     		cbz	r3, .L30
 107              	.LVL3:
 108              	.L4:
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 109              		.loc 1 474 3 is_stmt 1 view .LVU40
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 110              		.loc 1 474 7 is_stmt 0 view .LVU41
 111 0014 2268     		ldr	r2, [r4]
 112              	.LVL4:
 113              	.LBB147:
 114              	.LBI147:
 115              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @file    stm32wlxx_ll_adc.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifndef STM32WLxx_LL_ADC_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define STM32WLxx_LL_ADC_H
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifdef __cplusplus
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 20


  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** extern "C" {
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #include "stm32wlxx.h"
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @addtogroup STM32WLxx_LL_Driver
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined (ADC)
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger source                                                   */
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger edge                                                     */
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 21


  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by number                                     */
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Equivalent to bitfield "ADC_CHANNEL_ID_NUMBER_
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 22


 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* the relevant bits for:                                                     */
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   common sampling time available.                                          */
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection on groups.                                                     */
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 23


 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits positions */
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits groups */
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC internal channels related definitions */
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3300UL)                    /* Analog voltage reference
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Temperature sensor */
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75C8UL)) /* Internal temperature sen
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Internal temperature sen
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Internal temperature sen
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 24


 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3300UL)                    /* Analog voltage reference
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a register from a register basis from which an offset
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is applied.
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Pointer to register address
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and multimode
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sharing the same ADC common instance):
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         disabled.
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 25


 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note On this STM32 series, this parameter has some cl
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              For more details, refer to description of this functio
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (functions with prefix "REG").
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 26


 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (depending on the sequencer mode: scan length of
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              data preserved or overwritten.
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 27


 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* DMA transfer.                                                              */
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 28


 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 29


 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 30


 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_DACCH1              (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN)  /*!< ADC conversio
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 31


 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to not 
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to full
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 series, parame
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 series, parame
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 32


 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                         | ADC
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_DACCH1_REG           ((LL_ADC_CHANNEL_DACCH1     & ADC_CHANNEL_ID_MASK) | ADC
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 33


 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 34


 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR     ((int16_t)0x7FFF) /* Temperature calculation error using 
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         not timeout values.
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         above each literal definition.
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       not timeout values.                                                  */
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       STM32 series:                                                        */
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         cycles                                                             */
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         configuration.                                                     */
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tSTART").                                                       */
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 35


 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)  /*!< Delay required between ADC end of cali
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Write a value in ADC register
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be written
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Read a value in ADC register
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be read
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Register value
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return decimal number "4".
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 36


 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number is returned, either defined with number
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(CORE_CM0PLUS)
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                               
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                               
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                               
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      (0UL))))))))))))))))))))
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 37


 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #else
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                       \
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* CORE_CM0PLUS */
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from number in decimal format.
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 38


1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC internal channel:
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 39


1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a value defined from parameter definition of
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC registers.
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 40


1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT))
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 41


1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (< ADCx param >,
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 42


1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC common register instance
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (ADC_COMMON)
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC common instance are disabled.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 43


1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are disabled.
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   LL_ADC_IsEnabled(ADC)
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to reference manual).
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a resolution to another resolution.
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((__DATA__)                                                                 \
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 44


1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                       (unit: digital value).
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_DATA__,\
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         reference VrefInt.
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         connected to pin Vref+.
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal voltage reference VrefInt.
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 45


1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  parameters are correct (address and data).
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  less accurate than calibrated values),
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor.
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 sensor voltage has been measured.
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?        \
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 46


1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )                                                                                \
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   :                                                                                \
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to device datasheet).
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: digital value)
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  of the current device has characteristics in line with
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values.
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to device datasheet parameter "Avg_Slop
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to device datasheet parameter "V30" (co
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 47


1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     -                                                                       \
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                        \
1572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These ADC registers are data registers:
1602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC register address
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 48


1621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (void)(Register);
1626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve address of register DR */
1628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 49


1678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
1708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The values not selected are removed from configuration.
1712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
1733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 50


1735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Add paths to the current configuration.
1751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
1773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
1774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
1775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
1787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 51


1792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Remove paths to the current configuration.
1793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
1803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
1804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
1805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
1817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
1828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
1839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 52


1849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without having to perform a new calibration using
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 53


1906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on going on group regular.
1911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              CalibrationFactor);
1921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC resolution.
1939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
1945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC resolution.
1961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 54


1963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
1984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 55


2020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 56


2077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 57


2134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           is discarded.
2137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
2161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
2173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
2176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
2178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
2187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
2188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 58


2191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
2211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
2226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
2243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 59


2248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
2250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
2254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         also set trigger polarity to rising edge
2262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function
2269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or external, without detail
2300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (equivalent to
2302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 60


2305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((trigger_source
2329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
2332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or external.
2337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 61


2362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 62


2419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
2445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 63


2476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           To set scan direction differently, refer to function
2477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 64


2533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          To set scan direction differently, refer to function
2549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_index;
2580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   for (rank_index = 0UL; rank_index < (32U - 4U); rank_index += 4U)
2583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
2584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if ((channels_ranks & (ADC_CHSELR_SQ2 << rank_index)) == (ADC_CHSELR_SQ2 << rank_index))
2585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
2586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       sequencer_length = (ADC_CHSELR_SQ2 << rank_index);
2587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       break;
2588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
2589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 65


2590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return sequencer_length;
2592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 66


2647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs configuration of:
2684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 67


2704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
2709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
2710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
2711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
2712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
2713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
2714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
2715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
2716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 68


2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
2762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
2764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
2776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
2783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
2784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
2785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
2787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
2788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
2789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
2790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
2791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
2792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
2793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
2794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 69


2818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
2824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
2825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
2826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
2827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
2831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
2832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
2838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    );
2842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 70


2875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
2879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 71


2932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
2971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
2975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 72


2989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
3037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 73


3046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
3052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
3063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 74


3103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be retrieved.
3145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 75


3160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
3195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 76


3217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 77


3274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 78


3331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         other devices without this feature have a behavior
3336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         equivalent to data overwritten.
3337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         overrun should be set to data overwritten.
3340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
3385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 79


3388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
3390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
3396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
3397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 80


3445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             );
3461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 81


3502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
3523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       0x1FUL));
3531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
3551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 82


3559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
3613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 83


3616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg;
3622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
3624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
3626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   else
3628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX
3630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDChannelGroup & AWDy);
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
3647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
3649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           one channel.
3652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 84


3673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
3688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             by bitfield.
3692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
3715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> A
3717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
3718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
3720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
3722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
3723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
3724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* or a single channel.                                                     */
3725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
3726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
3728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 85


3730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
3733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
3734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     )
3735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
3736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
3743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     else
3747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
3749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
3752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
3753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
3761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
3762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return analog_wd_monit_channels;
3768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high and low.
3773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 86


3787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
3817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
3818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
3819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
3820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
3821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
3822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
3833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
3835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
3836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDy".                                                                  */
3837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
3838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)) >> (
3840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
3843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 87


3844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high or low.
3849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
3889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
3891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
3893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
3894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
3895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
3896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
3897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
3898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 88


3901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
3910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
3911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
3918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)) >> (ADC_AWD_TRX
3919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy) >> (ADC_AWD_CRX_REGO
3920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdsHighLow,
3923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
3924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         concatenated.
3930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using helper macro:
3933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
3938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
3939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
3940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
3941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
3942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
3943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
3955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 89


3958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
3962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)) >> (ADC_A
3963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy) >> (ADC_AWD_CR
3964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
3966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
3967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
3968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
3969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
3987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
3992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
3994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
3998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
4005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 90


4015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
4021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
4048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling
4054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ratio
4056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - shift
4057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 91


4072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
4104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
4124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 92


4129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the voltage regulator:
4140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling it manually
4141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by launching a calibration
4143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling the ADC
4145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADVREGEN);
4166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 93


4186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
 116              		.loc 2 4188 26 is_stmt 1 view .LVU42
 117              	.LBB148:
4189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 118              		.loc 2 4190 3 view .LVU43
 119              		.loc 2 4190 12 is_stmt 0 view .LVU44
 120 0016 9368     		ldr	r3, [r2, #8]
 121              		.loc 2 4190 76 view .LVU45
 122 0018 13F0805F 		tst	r3, #268435456
 123 001c 1FD1     		bne	.L5
 124              	.LVL5:
 125              		.loc 2 4190 76 view .LVU46
 126              	.LBE148:
 127              	.LBE147:
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 128              		.loc 1 477 5 is_stmt 1 view .LVU47
 129              	.LBB149:
 130              	.LBI149:
4158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 131              		.loc 2 4158 22 view .LVU48
 132              	.LBB150:
4163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 133              		.loc 2 4163 3 view .LVU49
 134 001e 9368     		ldr	r3, [r2, #8]
 135 0020 23F01043 		bic	r3, r3, #-1879048192
 136 0024 23F01703 		bic	r3, r3, #23
 137 0028 43F08053 		orr	r3, r3, #268435456
 138 002c 9360     		str	r3, [r2, #8]
 139              	.LVL6:
4163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 140              		.loc 2 4163 3 is_stmt 0 view .LVU50
 141              	.LBE150:
 142              	.LBE149:
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 143              		.loc 1 484 5 is_stmt 1 view .LVU51
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 144              		.loc 1 484 89 is_stmt 0 view .LVU52
 145 002e 8D4B     		ldr	r3, .L36
 146 0030 1B68     		ldr	r3, [r3]
 147 0032 9B09     		lsrs	r3, r3, #6
 148 0034 8C4A     		ldr	r2, .L36+4
 149 0036 A2FB0323 		umull	r2, r3, r2, r3
 150 003a 9B09     		lsrs	r3, r3, #6
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 151              		.loc 1 484 109 view .LVU53
 152 003c 0133     		adds	r3, r3, #1
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 153              		.loc 1 484 69 view .LVU54
 154 003e 5B00     		lsls	r3, r3, #1
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 155              		.loc 1 484 21 view .LVU55
 156 0040 0193     		str	r3, [sp, #4]
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 157              		.loc 1 485 5 is_stmt 1 view .LVU56
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 94


 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 158              		.loc 1 485 11 is_stmt 0 view .LVU57
 159 0042 09E0     		b	.L6
 160              	.LVL7:
 161              	.L30:
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 162              		.loc 1 464 5 is_stmt 1 view .LVU58
 163 0044 FFF7FEFF 		bl	HAL_ADC_MspInit
 164              	.LVL8:
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 165              		.loc 1 468 5 view .LVU59
 166 0048 0023     		movs	r3, #0
 167 004a E365     		str	r3, [r4, #92]
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 168              		.loc 1 471 5 view .LVU60
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 169              		.loc 1 471 16 is_stmt 0 view .LVU61
 170 004c 84F85430 		strb	r3, [r4, #84]
 171 0050 E0E7     		b	.L4
 172              	.L7:
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 173              		.loc 1 487 7 is_stmt 1 view .LVU62
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 174              		.loc 1 487 22 is_stmt 0 view .LVU63
 175 0052 019B     		ldr	r3, [sp, #4]
 176 0054 013B     		subs	r3, r3, #1
 177 0056 0193     		str	r3, [sp, #4]
 178              	.L6:
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 179              		.loc 1 485 11 is_stmt 1 view .LVU64
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 180              		.loc 1 485 28 is_stmt 0 view .LVU65
 181 0058 019B     		ldr	r3, [sp, #4]
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 182              		.loc 1 485 11 view .LVU66
 183 005a 002B     		cmp	r3, #0
 184 005c F9D1     		bne	.L7
 185              	.L5:
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 186              		.loc 1 494 3 is_stmt 1 view .LVU67
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 187              		.loc 1 494 7 is_stmt 0 view .LVU68
 188 005e 2268     		ldr	r2, [r4]
 189              	.LVL9:
 190              	.LBB151:
 191              	.LBI151:
4188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 192              		.loc 2 4188 26 is_stmt 1 view .LVU69
 193              	.LBB152:
 194              		.loc 2 4190 3 view .LVU70
 195              		.loc 2 4190 12 is_stmt 0 view .LVU71
 196 0060 9368     		ldr	r3, [r2, #8]
 197              		.loc 2 4190 76 view .LVU72
 198 0062 13F0805F 		tst	r3, #268435456
 199 0066 4BD1     		bne	.L26
 200              	.LVL10:
 201              		.loc 2 4190 76 view .LVU73
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 95


 202              	.LBE152:
 203              	.LBE151:
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 204              		.loc 1 497 5 is_stmt 1 view .LVU74
 205 0068 A36D     		ldr	r3, [r4, #88]
 206 006a 43F01003 		orr	r3, r3, #16
 207 006e A365     		str	r3, [r4, #88]
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 208              		.loc 1 500 5 view .LVU75
 209 0070 E36D     		ldr	r3, [r4, #92]
 210 0072 43F00103 		orr	r3, r3, #1
 211 0076 E365     		str	r3, [r4, #92]
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 212              		.loc 1 502 5 view .LVU76
 213              	.LVL11:
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 214              		.loc 1 502 20 is_stmt 0 view .LVU77
 215 0078 0120     		movs	r0, #1
 216              	.LVL12:
 217              	.L8:
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 218              		.loc 1 509 3 is_stmt 1 view .LVU78
 219              	.LBB153:
 220              	.LBI153:
4191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start.
4198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADEN);
4217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 96


4224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
4225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADDIS);
4237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
4249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
4251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
4260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         during calibration:
4273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Calibration factor is available in data register
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and also transferred by DMA.
4275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         calibration.
4278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 97


4281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
4290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADCAL);
4297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration state.
4301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
4306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           starts immediately.
4324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           following the ADC start conversion command.
4327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 98


4338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTART);
4344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTP);
4364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 221              		.loc 2 4372 26 view .LVU79
 222              	.LBB154:
4373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 223              		.loc 2 4374 3 view .LVU80
 224              		.loc 2 4374 12 is_stmt 0 view .LVU81
 225 007a 9368     		ldr	r3, [r2, #8]
 226              		.loc 2 4374 74 view .LVU82
 227 007c 13F00403 		ands	r3, r3, #4
 228 0080 00D0     		beq	.L9
 229 0082 0123     		movs	r3, #1
 230              	.L9:
 231              	.LVL13:
 232              		.loc 2 4374 74 view .LVU83
 233              	.LBE154:
 234              	.LBE153:
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 235              		.loc 1 511 3 is_stmt 1 view .LVU84
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 236              		.loc 1 511 13 is_stmt 0 view .LVU85
 237 0084 A16D     		ldr	r1, [r4, #88]
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 99


 238              		.loc 1 511 6 view .LVU86
 239 0086 11F0100F 		tst	r1, #16
 240 008a 40F0E180 		bne	.L10
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
 241              		.loc 1 512 7 view .LVU87
 242 008e 002B     		cmp	r3, #0
 243 0090 40F0DE80 		bne	.L10
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 244              		.loc 1 516 5 is_stmt 1 view .LVU88
 245 0094 A16D     		ldr	r1, [r4, #88]
 246 0096 21F48171 		bic	r1, r1, #258
 247 009a 41F00201 		orr	r1, r1, #2
 248 009e A165     		str	r1, [r4, #88]
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 249              		.loc 1 532 5 view .LVU89
 250              	.LVL14:
 251              	.LBB155:
 252              	.LBI155:
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 253              		.loc 2 4248 26 view .LVU90
 254              	.LBB156:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 255              		.loc 2 4250 3 view .LVU91
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 256              		.loc 2 4250 12 is_stmt 0 view .LVU92
 257 00a0 9168     		ldr	r1, [r2, #8]
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 258              		.loc 2 4250 68 view .LVU93
 259 00a2 11F0010F 		tst	r1, #1
 260 00a6 38D1     		bne	.L27
 261              	.LVL15:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 262              		.loc 2 4250 68 view .LVU94
 263              	.LBE156:
 264              	.LBE155:
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_RES,
 265              		.loc 1 543 7 is_stmt 1 view .LVU95
 266 00a8 D168     		ldr	r1, [r2, #12]
 267 00aa 21F01801 		bic	r1, r1, #24
 268 00ae A568     		ldr	r5, [r4, #8]
 269 00b0 2943     		orrs	r1, r1, r5
 270 00b2 D160     		str	r1, [r2, #12]
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 271              		.loc 1 547 7 view .LVU96
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 272              		.loc 1 547 31 is_stmt 0 view .LVU97
 273 00b4 6268     		ldr	r2, [r4, #4]
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 274              		.loc 1 547 47 view .LVU98
 275 00b6 02F04042 		and	r2, r2, #-1073741824
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                   );
 276              		.loc 1 548 30 view .LVU99
 277 00ba E16C     		ldr	r1, [r4, #76]
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 278              		.loc 1 547 67 view .LVU100
 279 00bc 42EA010C 		orr	ip, r2, r1
 280              	.LVL16:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 100


 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 281              		.loc 1 551 7 is_stmt 1 view .LVU101
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 282              		.loc 1 551 21 is_stmt 0 view .LVU102
 283 00c0 94F83C10 		ldrb	r1, [r4, #60]	@ zero_extendqisi2
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 284              		.loc 1 551 10 view .LVU103
 285 00c4 0129     		cmp	r1, #1
 286 00c6 1DD0     		beq	.L31
 287              	.L12:
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 288              		.loc 1 561 7 is_stmt 1 view .LVU104
 289 00c8 2168     		ldr	r1, [r4]
 290 00ca 0D69     		ldr	r5, [r1, #16]
 291 00cc 674A     		ldr	r2, .L36+8
 292 00ce 2A40     		ands	r2, r2, r5
 293 00d0 42EA0C02 		orr	r2, r2, ip
 294 00d4 0A61     		str	r2, [r1, #16]
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 295              		.loc 1 572 7 view .LVU105
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 296              		.loc 1 572 23 is_stmt 0 view .LVU106
 297 00d6 6268     		ldr	r2, [r4, #4]
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 298              		.loc 1 572 10 view .LVU107
 299 00d8 B2F1404F 		cmp	r2, #-1073741824
 300 00dc 1ED0     		beq	.L11
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 301              		.loc 1 572 69 discriminator 1 view .LVU108
 302 00de B2F1804F 		cmp	r2, #1073741824
 303 00e2 1BD0     		beq	.L11
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 304              		.loc 1 573 69 view .LVU109
 305 00e4 B2F1004F 		cmp	r2, #-2147483648
 306 00e8 18D0     		beq	.L11
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CCR_PRESC,
 307              		.loc 1 576 9 is_stmt 1 view .LVU110
 308 00ea 614D     		ldr	r5, .L36+12
 309 00ec D5F80817 		ldr	r1, [r5, #1800]
 310 00f0 21F47011 		bic	r1, r1, #3932160
 311 00f4 02F47012 		and	r2, r2, #3932160
 312 00f8 0A43     		orrs	r2, r2, r1
 313 00fa C5F80827 		str	r2, [r5, #1800]
 314 00fe 0DE0     		b	.L11
 315              	.LVL17:
 316              	.L26:
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 317              		.loc 1 390 21 is_stmt 0 view .LVU111
 318 0100 0020     		movs	r0, #0
 319 0102 BAE7     		b	.L8
 320              	.LVL18:
 321              	.L31:
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 322              		.loc 1 553 9 is_stmt 1 view .LVU112
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 323              		.loc 1 555 45 is_stmt 0 view .LVU113
 324 0104 216C     		ldr	r1, [r4, #64]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 101


 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 325              		.loc 1 554 69 view .LVU114
 326 0106 0A43     		orrs	r2, r2, r1
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 327              		.loc 1 556 45 view .LVU115
 328 0108 616C     		ldr	r1, [r4, #68]
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 329              		.loc 1 555 60 view .LVU116
 330 010a 0A43     		orrs	r2, r2, r1
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                     );
 331              		.loc 1 557 45 view .LVU117
 332 010c A16C     		ldr	r1, [r4, #72]
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 333              		.loc 1 556 60 view .LVU118
 334 010e 0A43     		orrs	r2, r2, r1
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 335              		.loc 1 553 18 view .LVU119
 336 0110 4CEA020C 		orr	ip, ip, r2
 337              	.LVL19:
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 338              		.loc 1 553 18 view .LVU120
 339 0114 4CF0010C 		orr	ip, ip, #1
 340              	.LVL20:
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 341              		.loc 1 553 18 view .LVU121
 342 0118 D6E7     		b	.L12
 343              	.LVL21:
 344              	.L27:
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 345              		.loc 1 392 12 view .LVU122
 346 011a 9C46     		mov	ip, r3
 347              	.LVL22:
 348              	.L11:
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 349              		.loc 1 594 5 is_stmt 1 view .LVU123
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 350              		.loc 1 594 18 is_stmt 0 view .LVU124
 351 011c 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 352              		.loc 1 595 18 view .LVU125
 353 011e 627E     		ldrb	r2, [r4, #25]	@ zero_extendqisi2
 354 0120 D203     		lsls	r2, r2, #15
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 355              		.loc 1 594 81 view .LVU126
 356 0122 42EA8132 		orr	r2, r2, r1, lsl #14
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 357              		.loc 1 596 18 view .LVU127
 358 0126 A57E     		ldrb	r5, [r4, #26]	@ zero_extendqisi2
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 359              		.loc 1 595 81 view .LVU128
 360 0128 42EA4532 		orr	r2, r2, r5, lsl #13
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  hadc->Init.DataAlign                                           |
 361              		.loc 1 597 18 view .LVU129
 362 012c 216B     		ldr	r1, [r4, #48]
 363 012e 09B1     		cbz	r1, .L13
 364 0130 4FF48051 		mov	r1, #4096
 365              	.L13:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 102


 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 366              		.loc 1 596 81 view .LVU130
 367 0134 0A43     		orrs	r2, r2, r1
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 368              		.loc 1 598 28 view .LVU131
 369 0136 E168     		ldr	r1, [r4, #12]
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  hadc->Init.DataAlign                                           |
 370              		.loc 1 597 81 view .LVU132
 371 0138 0A43     		orrs	r2, r2, r1
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 372              		.loc 1 599 18 view .LVU133
 373 013a 2169     		ldr	r1, [r4, #16]
 374 013c 0029     		cmp	r1, #0
 375 013e 49DB     		blt	.L32
 376 0140 4FF40011 		mov	r1, #2097152
 377              	.L14:
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 378              		.loc 1 598 81 view .LVU134
 379 0144 0A43     		orrs	r2, r2, r1
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 380              		.loc 1 600 18 view .LVU135
 381 0146 94F82C10 		ldrb	r1, [r4, #44]	@ zero_extendqisi2
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 382              		.loc 1 599 81 view .LVU136
 383 014a 42EA4102 		orr	r2, r2, r1, lsl #1
 384              	.LVL23:
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 385              		.loc 1 603 5 is_stmt 1 view .LVU137
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 386              		.loc 1 603 19 is_stmt 0 view .LVU138
 387 014e 94F82010 		ldrb	r1, [r4, #32]	@ zero_extendqisi2
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 388              		.loc 1 603 8 view .LVU139
 389 0152 0129     		cmp	r1, #1
 390 0154 41D0     		beq	.L33
 391              	.L15:
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 392              		.loc 1 629 5 is_stmt 1 view .LVU140
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 393              		.loc 1 629 19 is_stmt 0 view .LVU141
 394 0156 616A     		ldr	r1, [r4, #36]
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 395              		.loc 1 629 8 view .LVU142
 396 0158 21B1     		cbz	r1, .L17
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ExternalTrigConvEdge);
 397              		.loc 1 631 7 is_stmt 1 view .LVU143
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ExternalTrigConvEdge);
 398              		.loc 1 631 49 is_stmt 0 view .LVU144
 399 015a 01F4E071 		and	r1, r1, #448
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 400              		.loc 1 632 30 view .LVU145
 401 015e A56A     		ldr	r5, [r4, #40]
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ExternalTrigConvEdge);
 402              		.loc 1 631 69 view .LVU146
 403 0160 2943     		orrs	r1, r1, r5
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ExternalTrigConvEdge);
 404              		.loc 1 631 16 view .LVU147
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 103


 405 0162 0A43     		orrs	r2, r2, r1
 406              	.LVL24:
 407              	.L17:
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR1_DISCEN  |
 408              		.loc 1 636 5 is_stmt 1 view .LVU148
 409 0164 2568     		ldr	r5, [r4]
 410 0166 E968     		ldr	r1, [r5, #12]
 411 0168 21F4FE31 		bic	r1, r1, #130048
 412 016c 21F4F371 		bic	r1, r1, #486
 413 0170 1143     		orrs	r1, r1, r2
 414 0172 E960     		str	r1, [r5, #12]
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                ADC_CFGR2_LFTRIG |
 415              		.loc 1 649 5 view .LVU149
 416 0174 2568     		ldr	r5, [r4]
 417 0176 2E69     		ldr	r6, [r5, #16]
 418 0178 3E49     		ldr	r1, .L36+16
 419 017a 3140     		ands	r1, r1, r6
 420 017c 41EA0C01 		orr	r1, r1, ip
 421 0180 2961     		str	r1, [r5, #16]
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 422              		.loc 1 658 5 view .LVU150
 423 0182 2668     		ldr	r6, [r4]
 424 0184 616B     		ldr	r1, [r4, #52]
 425              	.LVL25:
 426              	.LBB157:
 427              	.LBI157:
2209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
 428              		.loc 2 2209 22 view .LVU151
 429              	.LBB158:
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 430              		.loc 2 2212 3 view .LVU152
 431 0186 7569     		ldr	r5, [r6, #20]
 432 0188 25F0070C 		bic	ip, r5, #7
 433              	.LVL26:
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 434              		.loc 2 2212 3 is_stmt 0 view .LVU153
 435 018c 41EA0C01 		orr	r1, r1, ip
 436              	.LVL27:
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 437              		.loc 2 2212 3 view .LVU154
 438 0190 7161     		str	r1, [r6, #20]
 439              	.LVL28:
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 440              		.loc 2 2212 3 view .LVU155
 441              	.LBE158:
 442              	.LBE157:
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 443              		.loc 1 659 5 is_stmt 1 view .LVU156
 444 0192 2568     		ldr	r5, [r4]
 445 0194 A66B     		ldr	r6, [r4, #56]
 446              	.LVL29:
 447              	.LBB159:
 448              	.LBI159:
2209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
 449              		.loc 2 2209 22 view .LVU157
 450              	.LBB160:
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 104


 451              		.loc 2 2212 3 view .LVU158
 452 0196 6969     		ldr	r1, [r5, #20]
 453 0198 21F07001 		bic	r1, r1, #112
 454 019c 41EA0611 		orr	r1, r1, r6, lsl #4
 455 01a0 6961     		str	r1, [r5, #20]
 456              	.LVL30:
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 457              		.loc 2 2212 3 is_stmt 0 view .LVU159
 458              	.LBE160:
 459              	.LBE159:
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 460              		.loc 1 671 5 is_stmt 1 view .LVU160
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 461              		.loc 1 671 19 is_stmt 0 view .LVU161
 462 01a2 2169     		ldr	r1, [r4, #16]
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 463              		.loc 1 671 8 view .LVU162
 464 01a4 31BB     		cbnz	r1, .L18
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 465              		.loc 1 675 7 is_stmt 1 view .LVU163
 466 01a6 2168     		ldr	r1, [r4]
 467 01a8 8B6A     		ldr	r3, [r1, #40]
 468              	.LVL31:
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 469              		.loc 1 675 7 is_stmt 0 view .LVU164
 470 01aa 63F00F03 		orn	r3, r3, #15
 471 01ae 8B62     		str	r3, [r1, #40]
 472              	.L19:
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         == tmpCFGR1)
 473              		.loc 1 725 5 is_stmt 1 view .LVU165
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         == tmpCFGR1)
 474              		.loc 1 725 14 is_stmt 0 view .LVU166
 475 01b0 2368     		ldr	r3, [r4]
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         == tmpCFGR1)
 476              		.loc 1 725 24 view .LVU167
 477 01b2 D968     		ldr	r1, [r3, #12]
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         == tmpCFGR1)
 478              		.loc 1 725 32 view .LVU168
 479 01b4 304B     		ldr	r3, .L36+20
 480 01b6 0B40     		ands	r3, r3, r1
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         == tmpCFGR1)
 481              		.loc 1 725 8 view .LVU169
 482 01b8 9342     		cmp	r3, r2
 483 01ba 40D0     		beq	.L34
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 484              		.loc 1 739 7 is_stmt 1 view .LVU170
 485 01bc A36D     		ldr	r3, [r4, #88]
 486 01be 23F01203 		bic	r3, r3, #18
 487 01c2 43F01003 		orr	r3, r3, #16
 488 01c6 A365     		str	r3, [r4, #88]
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 489              		.loc 1 744 7 view .LVU171
 490 01c8 E36D     		ldr	r3, [r4, #92]
 491 01ca 43F00103 		orr	r3, r3, #1
 492 01ce E365     		str	r3, [r4, #92]
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 493              		.loc 1 746 7 view .LVU172
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 105


 494              	.LVL32:
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 495              		.loc 1 746 22 is_stmt 0 view .LVU173
 496 01d0 0120     		movs	r0, #1
 497 01d2 42E0     		b	.L3
 498              	.LVL33:
 499              	.L32:
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 500              		.loc 1 599 18 discriminator 1 view .LVU174
 501 01d4 21F00041 		bic	r1, r1, #-2147483648
 502 01d8 B4E7     		b	.L14
 503              	.LVL34:
 504              	.L33:
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 505              		.loc 1 605 7 is_stmt 1 view .LVU175
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 506              		.loc 1 605 10 is_stmt 0 view .LVU176
 507 01da 15B9     		cbnz	r5, .L16
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 508              		.loc 1 608 9 is_stmt 1 view .LVU177
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 509              		.loc 1 608 18 is_stmt 0 view .LVU178
 510 01dc 42F48032 		orr	r2, r2, #65536
 511              	.LVL35:
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 512              		.loc 1 608 18 view .LVU179
 513 01e0 B9E7     		b	.L15
 514              	.L16:
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 515              		.loc 1 617 9 is_stmt 1 view .LVU180
 516 01e2 A16D     		ldr	r1, [r4, #88]
 517 01e4 41F02001 		orr	r1, r1, #32
 518 01e8 A165     		str	r1, [r4, #88]
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 519              		.loc 1 620 9 view .LVU181
 520 01ea E16D     		ldr	r1, [r4, #92]
 521 01ec 41F00101 		orr	r1, r1, #1
 522 01f0 E165     		str	r1, [r4, #92]
 523 01f2 B0E7     		b	.L15
 524              	.LVL36:
 525              	.L18:
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 526              		.loc 1 678 10 view .LVU182
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 527              		.loc 1 678 13 is_stmt 0 view .LVU183
 528 01f4 B1F5001F 		cmp	r1, #2097152
 529 01f8 DAD1     		bne	.L19
 530              	.LVL37:
 531              	.L20:
 532              	.LBB161:
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 533              		.loc 1 684 54 is_stmt 1 discriminator 1 view .LVU184
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 534              		.loc 1 684 7 is_stmt 0 discriminator 1 view .LVU185
 535 01fa 072B     		cmp	r3, #7
 536 01fc 08D8     		bhi	.L21
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 106


 537              		.loc 1 687 9 is_stmt 1 view .LVU186
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
 538              		.loc 1 687 19 is_stmt 0 view .LVU187
 539 01fe 216E     		ldr	r1, [r4, #96]
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
 540              		.loc 1 687 90 view .LVU188
 541 0200 9D00     		lsls	r5, r3, #2
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
 542              		.loc 1 687 51 view .LVU189
 543 0202 E940     		lsrs	r1, r1, r5
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
 544              		.loc 1 687 98 view .LVU190
 545 0204 01F00F01 		and	r1, r1, #15
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ADC_CHSELR_SQ1)
 546              		.loc 1 687 12 view .LVU191
 547 0208 0F29     		cmp	r1, #15
 548 020a 01D0     		beq	.L21
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 549              		.loc 1 684 98 is_stmt 1 discriminator 2 view .LVU192
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 550              		.loc 1 684 132 is_stmt 0 discriminator 2 view .LVU193
 551 020c 0133     		adds	r3, r3, #1
 552              	.LVL38:
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 553              		.loc 1 684 132 discriminator 2 view .LVU194
 554 020e F4E7     		b	.L20
 555              	.L21:
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 556              		.loc 1 694 7 is_stmt 1 view .LVU195
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 557              		.loc 1 694 10 is_stmt 0 view .LVU196
 558 0210 012B     		cmp	r3, #1
 559 0212 0ED0     		beq	.L35
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 560              		.loc 1 713 9 is_stmt 1 view .LVU197
 561 0214 2568     		ldr	r5, [r4]
 562 0216 AB6A     		ldr	r3, [r5, #40]
 563              	.LVL39:
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 564              		.loc 1 713 9 is_stmt 0 view .LVU198
 565 0218 E369     		ldr	r3, [r4, #28]
 566 021a 013B     		subs	r3, r3, #1
 567 021c 9B00     		lsls	r3, r3, #2
 568 021e 03F01C03 		and	r3, r3, #28
 569 0222 6FF00F01 		mvn	r1, #15
 570 0226 01FA03F3 		lsl	r3, r1, r3
 571 022a 216E     		ldr	r1, [r4, #96]
 572 022c 0B43     		orrs	r3, r3, r1
 573 022e AB62     		str	r3, [r5, #40]
 574 0230 BEE7     		b	.L19
 575              	.LVL40:
 576              	.L35:
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 577              		.loc 1 699 9 is_stmt 1 view .LVU199
 578 0232 2168     		ldr	r1, [r4]
 579 0234 8B6A     		ldr	r3, [r1, #40]
 580              	.LVL41:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 107


 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 581              		.loc 1 699 9 is_stmt 0 view .LVU200
 582 0236 63F00F03 		orn	r3, r3, #15
 583 023a 8B62     		str	r3, [r1, #40]
 584 023c B8E7     		b	.L19
 585              	.L34:
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 586              		.loc 1 699 9 view .LVU201
 587              	.LBE161:
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 588              		.loc 1 729 7 is_stmt 1 view .LVU202
 589 023e 0023     		movs	r3, #0
 590 0240 E365     		str	r3, [r4, #92]
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 591              		.loc 1 732 7 view .LVU203
 592 0242 A36D     		ldr	r3, [r4, #88]
 593 0244 23F00303 		bic	r3, r3, #3
 594 0248 43F00103 		orr	r3, r3, #1
 595 024c A365     		str	r3, [r4, #88]
 596 024e 04E0     		b	.L3
 597              	.LVL42:
 598              	.L10:
 753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 599              		.loc 1 753 5 view .LVU204
 600 0250 A36D     		ldr	r3, [r4, #88]
 601              	.LVL43:
 753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 602              		.loc 1 753 5 is_stmt 0 view .LVU205
 603 0252 43F01003 		orr	r3, r3, #16
 604 0256 A365     		str	r3, [r4, #88]
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 605              		.loc 1 755 5 is_stmt 1 view .LVU206
 606              	.LVL44:
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 607              		.loc 1 755 20 is_stmt 0 view .LVU207
 608 0258 0120     		movs	r0, #1
 609              	.LVL45:
 610              	.L3:
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 611              		.loc 1 759 1 view .LVU208
 612 025a 02B0     		add	sp, sp, #8
 613              	.LCFI2:
 614              		.cfi_remember_state
 615              		.cfi_def_cfa_offset 16
 616              		@ sp needed
 617 025c 70BD     		pop	{r4, r5, r6, pc}
 618              	.LVL46:
 619              	.L25:
 620              	.LCFI3:
 621              		.cfi_restore_state
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 622              		.loc 1 399 12 view .LVU209
 623 025e 0120     		movs	r0, #1
 624              	.LVL47:
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 625              		.loc 1 399 12 view .LVU210
 626 0260 FBE7     		b	.L3
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 108


 627              	.L37:
 628 0262 00BF     		.align	2
 629              	.L36:
 630 0264 00000000 		.word	SystemCoreClock
 631 0268 632D3E05 		.word	87960931
 632 026c 02FCFF1F 		.word	536869890
 633 0270 00200140 		.word	1073815552
 634 0274 02FCFFDF 		.word	-536871934
 635 0278 E7FF3F83 		.word	-2092957721
 636              		.cfi_endproc
 637              	.LFE968:
 639              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 640              		.align	1
 641              		.weak	HAL_ADC_MspDeInit
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 646              	HAL_ADC_MspDeInit:
 647              	.LVL48:
 648              	.LFB971:
 909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the core clock reset all ADC instances).
 915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
 916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 649              		.loc 1 918 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653              		@ link register save eliminated.
 919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 654              		.loc 1 920 3 view .LVU212
 921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****    */
 925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 655              		.loc 1 925 1 is_stmt 0 view .LVU213
 656 0000 7047     		bx	lr
 657              		.cfi_endproc
 658              	.LFE971:
 660              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 661              		.align	1
 662              		.global	HAL_ADC_PollForConversion
 663              		.syntax unified
 664              		.thumb
 665              		.thumb_func
 667              	HAL_ADC_PollForConversion:
 668              	.LVL49:
 669              	.LFB974:
 926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 109


 927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Register a User ADC Callback
 930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                the configuration information for the specified ADC.
 933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This parameter can be one of the following values:
 935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
 948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (pCallback == NULL)
 955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update the error code */
 957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     return HAL_ERROR;
 960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
 965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 110


 984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 987:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 989:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 991:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 993:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 994:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 997:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 998:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 999:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1002:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
1003:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
1004:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1006:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
1007:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status = HAL_ERROR;
1008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1010:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1011:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1013:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
1014:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1016:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1017:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1019:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1020:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1021:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1023:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
1024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
1025:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
1028:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status = HAL_ERROR;
1029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1030:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1031:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1032:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1033:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1034:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update the error code */
1035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1036:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Return error status */
1038:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     status =  HAL_ERROR;
1039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1040:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 111


1041:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return status;
1042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1044:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1045:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1047:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                the configuration information for the specified ADC.
1049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This parameter can be one of the following values:
1051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1053:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1055:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1056:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1057:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1059:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1060:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1061:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1062:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1063:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1064:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1065:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1066:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1067:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1068:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
1069:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1070:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
1071:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1072:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1073:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1074:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1075:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1076:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1077:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1078:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1079:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1080:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1081:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1082:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1083:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1084:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1085:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1086:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1087:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1088:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1090:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1091:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1093:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1094:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1095:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1096:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 112


1098:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1099:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
1109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
1110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
1113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status =  HAL_ERROR;
1114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
1120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
1130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
1131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
1134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status =  HAL_ERROR;
1135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update the error code */
1141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Return error status */
1144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     status =  HAL_ERROR;
1145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return status;
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
1154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 113


1155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *  @brief    ADC IO operation functions
1158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
1159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
1160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
1161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       ##### IO operation functions #####
1162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
1163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]  This section provides functions allowing to:
1164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Start conversion of regular group.
1165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Stop conversion of regular group.
1166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Poll for conversion event.
1168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Get result of regular channel conversion.
1169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Handle ADC interrupt request
1172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
1175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
1176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_LOCK(hadc);
1195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
1197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state                                                        */
1203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code */
1210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Reset all ADC error code fields */
1211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 114


1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Process unlocked */
1218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* trigger event.                                                       */
1226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start ADC group regular conversion */
1227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
1259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 115


1269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 670              		.loc 1 1303 1 is_stmt 1 view -0
 671              		.cfi_startproc
 672              		@ args = 0, pretend = 0, frame = 0
 673              		@ frame_needed = 0, uses_anonymous_args = 0
 674              		.loc 1 1303 1 is_stmt 0 view .LVU215
 675 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 676              	.LCFI4:
 677              		.cfi_def_cfa_offset 24
 678              		.cfi_offset 3, -24
 679              		.cfi_offset 4, -20
 680              		.cfi_offset 5, -16
 681              		.cfi_offset 6, -12
 682              		.cfi_offset 7, -8
 683              		.cfi_offset 14, -4
 684 0002 0446     		mov	r4, r0
 685 0004 0D46     		mov	r5, r1
1304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 686              		.loc 1 1304 3 is_stmt 1 view .LVU216
1305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_flag_end;
 687              		.loc 1 1305 3 view .LVU217
1306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 116


1308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 688              		.loc 1 1308 3 view .LVU218
1309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 689              		.loc 1 1311 3 view .LVU219
 690              		.loc 1 1311 17 is_stmt 0 view .LVU220
 691 0006 4669     		ldr	r6, [r0, #20]
 692              		.loc 1 1311 6 view .LVU221
 693 0008 082E     		cmp	r6, #8
 694 000a 05D0     		beq	.L40
1312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_flag_end = ADC_FLAG_EOS;
1314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* each conversion:                                                       */
1320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) != 0UL)
 695              		.loc 1 1324 5 is_stmt 1 view .LVU222
 696              		.loc 1 1324 14 is_stmt 0 view .LVU223
 697 000c 0368     		ldr	r3, [r0]
 698              		.loc 1 1324 24 view .LVU224
 699 000e DB68     		ldr	r3, [r3, #12]
 700              		.loc 1 1324 8 view .LVU225
 701 0010 13F0010F 		tst	r3, #1
 702 0014 1ED1     		bne	.L51
1325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
1327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       return HAL_ERROR;
1330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_flag_end = (ADC_FLAG_EOC);
 703              		.loc 1 1333 20 view .LVU226
 704 0016 0426     		movs	r6, #4
 705              	.L40:
 706              	.LVL50:
1334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Get tick count */
1338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tickstart = HAL_GetTick();
 707              		.loc 1 1338 3 is_stmt 1 view .LVU227
 708              		.loc 1 1338 15 is_stmt 0 view .LVU228
 709 0018 FFF7FEFF 		bl	HAL_GetTick
 710              	.LVL51:
 711              		.loc 1 1338 15 view .LVU229
 712 001c 0746     		mov	r7, r0
 713              	.LVL52:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 117


1339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 714              		.loc 1 1341 3 is_stmt 1 view .LVU230
 715              	.L43:
 716              		.loc 1 1341 9 view .LVU231
 717              		.loc 1 1341 15 is_stmt 0 view .LVU232
 718 001e 2368     		ldr	r3, [r4]
 719              		.loc 1 1341 25 view .LVU233
 720 0020 1A68     		ldr	r2, [r3]
 721              		.loc 1 1341 9 view .LVU234
 722 0022 3242     		tst	r2, r6
 723 0024 1CD1     		bne	.L52
1342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 724              		.loc 1 1344 5 is_stmt 1 view .LVU235
 725              		.loc 1 1344 8 is_stmt 0 view .LVU236
 726 0026 B5F1FF3F 		cmp	r5, #-1
 727 002a F8D0     		beq	.L43
1345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 728              		.loc 1 1346 7 is_stmt 1 view .LVU237
 729              		.loc 1 1346 13 is_stmt 0 view .LVU238
 730 002c FFF7FEFF 		bl	HAL_GetTick
 731              	.LVL53:
 732              		.loc 1 1346 27 view .LVU239
 733 0030 C31B     		subs	r3, r0, r7
 734              		.loc 1 1346 10 view .LVU240
 735 0032 AB42     		cmp	r3, r5
 736 0034 01D8     		bhi	.L44
 737              		.loc 1 1346 51 discriminator 1 view .LVU241
 738 0036 002D     		cmp	r5, #0
 739 0038 F1D1     		bne	.L43
 740              	.L44:
1347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 741              		.loc 1 1349 9 is_stmt 1 view .LVU242
 742              		.loc 1 1349 18 is_stmt 0 view .LVU243
 743 003a 2368     		ldr	r3, [r4]
 744              		.loc 1 1349 28 view .LVU244
 745 003c 1B68     		ldr	r3, [r3]
 746              		.loc 1 1349 12 view .LVU245
 747 003e 3342     		tst	r3, r6
 748 0040 EDD1     		bne	.L43
1350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 749              		.loc 1 1352 11 is_stmt 1 view .LVU246
 750 0042 A36D     		ldr	r3, [r4, #88]
 751 0044 43F00403 		orr	r3, r3, #4
 752 0048 A365     		str	r3, [r4, #88]
1353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 753              		.loc 1 1354 11 view .LVU247
 754              		.loc 1 1354 11 view .LVU248
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 118


 755 004a 0023     		movs	r3, #0
 756 004c 84F85430 		strb	r3, [r4, #84]
 757              		.loc 1 1354 11 view .LVU249
1355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_TIMEOUT;
 758              		.loc 1 1356 11 view .LVU250
 759              		.loc 1 1356 18 is_stmt 0 view .LVU251
 760 0050 0320     		movs	r0, #3
 761 0052 28E0     		b	.L41
 762              	.LVL54:
 763              	.L51:
1327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 764              		.loc 1 1327 7 is_stmt 1 view .LVU252
 765 0054 836D     		ldr	r3, [r0, #88]
 766 0056 43F02003 		orr	r3, r3, #32
 767 005a 8365     		str	r3, [r0, #88]
1329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 768              		.loc 1 1329 7 view .LVU253
1329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 769              		.loc 1 1329 14 is_stmt 0 view .LVU254
 770 005c 0120     		movs	r0, #1
 771              	.LVL55:
1329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 772              		.loc 1 1329 14 view .LVU255
 773 005e 22E0     		b	.L41
 774              	.LVL56:
 775              	.L52:
1357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Update ADC state machine */
1363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 776              		.loc 1 1363 3 is_stmt 1 view .LVU256
 777 0060 A26D     		ldr	r2, [r4, #88]
 778 0062 42F40072 		orr	r2, r2, #512
 779 0066 A265     		str	r2, [r4, #88]
1364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 780              		.loc 1 1367 3 view .LVU257
 781              	.LVL57:
 782              	.LBB162:
 783              	.LBI162:
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 784              		.loc 2 2345 26 view .LVU258
 785              	.LBB163:
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 786              		.loc 2 2347 3 view .LVU259
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 787              		.loc 2 2347 12 is_stmt 0 view .LVU260
 788 0068 DA68     		ldr	r2, [r3, #12]
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 789              		.loc 2 2347 106 view .LVU261
 790 006a 12F4406F 		tst	r2, #3072
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 119


 791 006e 15D1     		bne	.L46
 792              	.LVL58:
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 793              		.loc 2 2347 106 view .LVU262
 794              	.LBE163:
 795              	.LBE162:
1368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 796              		.loc 1 1368 21 view .LVU263
 797 0070 A27E     		ldrb	r2, [r4, #26]	@ zero_extendqisi2
 798              		.loc 1 1368 7 view .LVU264
 799 0072 9AB9     		cbnz	r2, .L46
1369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
1370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check whether end of sequence is reached */
1372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 800              		.loc 1 1372 5 is_stmt 1 view .LVU265
 801              		.loc 1 1372 9 is_stmt 0 view .LVU266
 802 0074 1A68     		ldr	r2, [r3]
 803              		.loc 1 1372 8 view .LVU267
 804 0076 12F0080F 		tst	r2, #8
 805 007a 0FD0     		beq	.L46
1373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
1376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 806              		.loc 1 1376 7 is_stmt 1 view .LVU268
 807              	.LVL59:
 808              	.LBB164:
 809              	.LBI164:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 810              		.loc 2 4372 26 view .LVU269
 811              	.LBB165:
 812              		.loc 2 4374 3 view .LVU270
 813              		.loc 2 4374 12 is_stmt 0 view .LVU271
 814 007c 9A68     		ldr	r2, [r3, #8]
 815              		.loc 2 4374 74 view .LVU272
 816 007e 12F0040F 		tst	r2, #4
 817 0082 11D1     		bne	.L47
 818              	.LVL60:
 819              		.loc 2 4374 74 view .LVU273
 820              	.LBE165:
 821              	.LBE164:
1377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
1381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 822              		.loc 1 1382 9 is_stmt 1 view .LVU274
 823 0084 5A68     		ldr	r2, [r3, #4]
 824 0086 22F00C02 		bic	r2, r2, #12
 825 008a 5A60     		str	r2, [r3, #4]
1383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC state */
1385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 826              		.loc 1 1385 9 view .LVU275
 827 008c A36D     		ldr	r3, [r4, #88]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 120


 828 008e 23F48073 		bic	r3, r3, #256
 829 0092 23F00103 		bic	r3, r3, #1
 830 0096 43F00103 		orr	r3, r3, #1
 831 009a A365     		str	r3, [r4, #88]
 832              	.L46:
1386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
1387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
1390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Change ADC state to error state */
1392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
1395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 833              		.loc 1 1403 3 view .LVU276
 834              		.loc 1 1403 17 is_stmt 0 view .LVU277
 835 009c 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 836              		.loc 1 1403 6 view .LVU278
 837 009e 60B9     		cbnz	r0, .L49
1404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear regular group conversion flag */
1406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 838              		.loc 1 1406 5 is_stmt 1 view .LVU279
 839 00a0 2368     		ldr	r3, [r4]
 840 00a2 0C22     		movs	r2, #12
 841 00a4 1A60     		str	r2, [r3]
 842              	.LVL61:
 843              	.L41:
1407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return function status */
1410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
1411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 844              		.loc 1 1411 1 is_stmt 0 view .LVU280
 845 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 846              	.LVL62:
 847              	.L47:
1392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 848              		.loc 1 1392 9 is_stmt 1 view .LVU281
 849 00a8 A36D     		ldr	r3, [r4, #88]
 850 00aa 43F02003 		orr	r3, r3, #32
 851 00ae A365     		str	r3, [r4, #88]
1395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 852              		.loc 1 1395 9 view .LVU282
 853 00b0 E36D     		ldr	r3, [r4, #92]
 854 00b2 43F00103 		orr	r3, r3, #1
 855 00b6 E365     		str	r3, [r4, #92]
 856 00b8 F0E7     		b	.L46
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 121


 857              	.L49:
1410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 858              		.loc 1 1410 10 is_stmt 0 view .LVU283
 859 00ba 0020     		movs	r0, #0
 860 00bc F3E7     		b	.L41
 861              		.cfi_endproc
 862              	.LFE974:
 864              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 865              		.align	1
 866              		.global	HAL_ADC_PollForEvent
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 871              	HAL_ADC_PollForEvent:
 872              	.LVL63:
 873              	.LFB975:
1412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Poll for ADC event.
1415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param EventType the ADC event type.
1417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          This parameter can be one of the following values:
1418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 874              		.loc 1 1433 1 is_stmt 1 view -0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              		.loc 1 1433 1 is_stmt 0 view .LVU285
 879 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 880              	.LCFI5:
 881              		.cfi_def_cfa_offset 24
 882              		.cfi_offset 4, -24
 883              		.cfi_offset 5, -20
 884              		.cfi_offset 6, -16
 885              		.cfi_offset 7, -12
 886              		.cfi_offset 8, -8
 887              		.cfi_offset 14, -4
 888 0004 0646     		mov	r6, r0
 889 0006 0D46     		mov	r5, r1
 890 0008 1746     		mov	r7, r2
1434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 891              		.loc 1 1434 3 is_stmt 1 view .LVU286
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 122


1435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 892              		.loc 1 1437 3 view .LVU287
1438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 893              		.loc 1 1438 3 view .LVU288
1439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Get tick count */
1441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tickstart = HAL_GetTick();
 894              		.loc 1 1441 3 view .LVU289
 895              		.loc 1 1441 15 is_stmt 0 view .LVU290
 896 000a FFF7FEFF 		bl	HAL_GetTick
 897              	.LVL64:
 898              		.loc 1 1441 15 view .LVU291
 899 000e 8046     		mov	r8, r0
 900              	.LVL65:
1442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check selected event flag */
1444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 901              		.loc 1 1444 3 is_stmt 1 view .LVU292
 902              	.L55:
 903              		.loc 1 1444 9 view .LVU293
 904              		.loc 1 1444 10 is_stmt 0 view .LVU294
 905 0010 3368     		ldr	r3, [r6]
 906 0012 1C68     		ldr	r4, [r3]
 907              		.loc 1 1444 9 view .LVU295
 908 0014 35EA0402 		bics	r2, r5, r4
 909 0018 18D0     		beq	.L67
1445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 910              		.loc 1 1447 5 is_stmt 1 view .LVU296
 911              		.loc 1 1447 8 is_stmt 0 view .LVU297
 912 001a B7F1FF3F 		cmp	r7, #-1
 913 001e F7D0     		beq	.L55
1448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 914              		.loc 1 1449 7 is_stmt 1 view .LVU298
 915              		.loc 1 1449 13 is_stmt 0 view .LVU299
 916 0020 FFF7FEFF 		bl	HAL_GetTick
 917              	.LVL66:
 918              		.loc 1 1449 27 view .LVU300
 919 0024 A0EB0803 		sub	r3, r0, r8
 920              		.loc 1 1449 10 view .LVU301
 921 0028 BB42     		cmp	r3, r7
 922 002a 01D8     		bhi	.L56
 923              		.loc 1 1449 51 discriminator 1 view .LVU302
 924 002c 002F     		cmp	r7, #0
 925 002e EFD1     		bne	.L55
 926              	.L56:
1450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 927              		.loc 1 1452 9 is_stmt 1 view .LVU303
 928              		.loc 1 1452 13 is_stmt 0 view .LVU304
 929 0030 3368     		ldr	r3, [r6]
 930 0032 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 123


 931              		.loc 1 1452 12 view .LVU305
 932 0034 35EA0303 		bics	r3, r5, r3
 933 0038 EAD0     		beq	.L55
1453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 934              		.loc 1 1455 11 is_stmt 1 view .LVU306
 935 003a B36D     		ldr	r3, [r6, #88]
 936 003c 43F00403 		orr	r3, r3, #4
 937 0040 B365     		str	r3, [r6, #88]
1456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 938              		.loc 1 1457 11 view .LVU307
 939              		.loc 1 1457 11 view .LVU308
 940 0042 0023     		movs	r3, #0
 941 0044 86F85430 		strb	r3, [r6, #84]
 942              		.loc 1 1457 11 view .LVU309
1458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_TIMEOUT;
 943              		.loc 1 1459 11 view .LVU310
 944              		.loc 1 1459 18 is_stmt 0 view .LVU311
 945 0048 0320     		movs	r0, #3
 946 004a 22E0     		b	.L57
 947              	.L67:
1460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   switch (EventType)
 948              		.loc 1 1465 3 is_stmt 1 view .LVU312
 949 004c B5F5807F 		cmp	r5, #256
 950 0050 21D0     		beq	.L59
 951 0052 0BD8     		bhi	.L60
 952 0054 022D     		cmp	r5, #2
 953 0056 15D0     		beq	.L61
 954 0058 802D     		cmp	r5, #128
 955 005a 25D1     		bne	.L63
1466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* End Of Sampling event */
1468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* For example:                                                             */
1482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 124


1485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_AWD_EVENT:
1488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 956              		.loc 1 1489 7 view .LVU313
 957 005c B26D     		ldr	r2, [r6, #88]
 958 005e 42F48032 		orr	r2, r2, #65536
 959 0062 B265     		str	r2, [r6, #88]
1490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 960              		.loc 1 1492 7 view .LVU314
 961 0064 8022     		movs	r2, #128
 962 0066 1A60     		str	r2, [r3]
1493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
 963              		.loc 1 1494 7 view .LVU315
1495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_AWD2_EVENT:
1498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_AWD3_EVENT:
1508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Overrun event */
1517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* considered as an error.                                                */
1520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* overrun ")                                                             */
1522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC state */
1525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC error code to overrun */
1528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
1531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 125


1534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****            as OVR is cleared. */
1535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return function status */
1541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
 964              		.loc 1 1541 10 is_stmt 0 view .LVU316
 965 0068 0020     		movs	r0, #0
1494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 966              		.loc 1 1494 7 view .LVU317
 967 006a 12E0     		b	.L57
 968              	.L60:
1465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 969              		.loc 1 1465 3 view .LVU318
 970 006c B5F5007F 		cmp	r5, #512
 971 0070 1AD1     		bne	.L63
1509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 972              		.loc 1 1509 7 is_stmt 1 view .LVU319
 973 0072 B26D     		ldr	r2, [r6, #88]
 974 0074 42F48022 		orr	r2, r2, #262144
 975 0078 B265     		str	r2, [r6, #88]
1512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 976              		.loc 1 1512 7 view .LVU320
 977 007a 4FF40072 		mov	r2, #512
 978 007e 1A60     		str	r2, [r3]
1514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 979              		.loc 1 1514 7 view .LVU321
 980              		.loc 1 1541 10 is_stmt 0 view .LVU322
 981 0080 0020     		movs	r0, #0
1514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 982              		.loc 1 1514 7 view .LVU323
 983 0082 06E0     		b	.L57
 984              	.L61:
1470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 985              		.loc 1 1470 7 is_stmt 1 view .LVU324
 986 0084 B26D     		ldr	r2, [r6, #88]
 987 0086 42F40062 		orr	r2, r2, #2048
 988 008a B265     		str	r2, [r6, #88]
1473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 989              		.loc 1 1473 7 view .LVU325
 990 008c 0222     		movs	r2, #2
 991 008e 1A60     		str	r2, [r3]
1475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 992              		.loc 1 1475 7 view .LVU326
 993              		.loc 1 1541 10 is_stmt 0 view .LVU327
 994 0090 0020     		movs	r0, #0
 995              	.L57:
1542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 996              		.loc 1 1542 1 view .LVU328
 997 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 998              	.LVL67:
 999              	.L59:
1499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1000              		.loc 1 1499 7 is_stmt 1 view .LVU329
 1001 0096 B26D     		ldr	r2, [r6, #88]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 126


 1002 0098 42F40032 		orr	r2, r2, #131072
 1003 009c B265     		str	r2, [r6, #88]
1502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1004              		.loc 1 1502 7 view .LVU330
 1005 009e 4FF48072 		mov	r2, #256
 1006 00a2 1A60     		str	r2, [r3]
1504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1007              		.loc 1 1504 7 view .LVU331
1541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1008              		.loc 1 1541 10 is_stmt 0 view .LVU332
 1009 00a4 0020     		movs	r0, #0
1504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1010              		.loc 1 1504 7 view .LVU333
 1011 00a6 F4E7     		b	.L57
 1012              	.L63:
1522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1013              		.loc 1 1522 7 is_stmt 1 view .LVU334
1522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1014              		.loc 1 1522 21 is_stmt 0 view .LVU335
 1015 00a8 326B     		ldr	r2, [r6, #48]
1522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1016              		.loc 1 1522 10 view .LVU336
 1017 00aa 4AB9     		cbnz	r2, .L65
1525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1018              		.loc 1 1525 9 is_stmt 1 view .LVU337
 1019 00ac B36D     		ldr	r3, [r6, #88]
 1020 00ae 43F48063 		orr	r3, r3, #1024
 1021 00b2 B365     		str	r3, [r6, #88]
1528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 1022              		.loc 1 1528 9 view .LVU338
 1023 00b4 F36D     		ldr	r3, [r6, #92]
 1024 00b6 43F00203 		orr	r3, r3, #2
 1025 00ba F365     		str	r3, [r6, #92]
1541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1026              		.loc 1 1541 10 is_stmt 0 view .LVU339
 1027 00bc 0020     		movs	r0, #0
 1028 00be E8E7     		b	.L57
 1029              	.L65:
1535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 1030              		.loc 1 1535 9 is_stmt 1 view .LVU340
 1031 00c0 1022     		movs	r2, #16
 1032 00c2 1A60     		str	r2, [r3]
1541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1033              		.loc 1 1541 10 is_stmt 0 view .LVU341
 1034 00c4 0020     		movs	r0, #0
 1035 00c6 E4E7     		b	.L57
 1036              		.cfi_endproc
 1037              	.LFE975:
 1039              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1040              		.align	1
 1041              		.global	HAL_ADC_GetValue
 1042              		.syntax unified
 1043              		.thumb
 1044              		.thumb_func
 1046              	HAL_ADC_GetValue:
 1047              	.LVL68:
 1048              	.LFB980:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 127


1543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         OVR overrun.
1549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         mode), the user must:
1556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_LOCK(hadc);
1573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
1575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state                                                        */
1581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code */
1589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Reset all ADC error code fields */
1590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Process unlocked */
1597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 128


1600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
1610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         default:
1612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
1614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* trigger event.                                                       */
1629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start ADC group regular conversion */
1630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 129


1657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
1661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param pData Destination Buffer address.
1697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_LOCK(hadc);
1711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Specific case for first call occurrence of this function (DMA transfer */
1713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* not activated and ADC disabled), DMA transfer must be activated        */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 130


1714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* with ADC disabled.                                                     */
1715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) == 0UL)
1716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
1718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Disable ADC */
1720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_Disable(hadc->Instance);
1721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC DMA mode */
1724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state                                                        */
1734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code */
1741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Reset all ADC error code fields */
1742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the DMA error callback */
1751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* start (in case of SW start):                                         */
1756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* operations)                                                          */
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Process unlocked */
1763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start the DMA channel */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 131


1771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)
1772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* trigger event.                                                       */
1777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start ADC group regular conversion */
1778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC peripheral.
1793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
1797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
1804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update ADC state machine to error */
1821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 132


1828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
1831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (void)ADC_Disable(hadc);
1838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
1850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
1851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
1863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            to flag EOC.
1867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         To clear this flag, either use function:
1871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval ADC group regular conversion data
1876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
1878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1049              		.loc 1 1878 1 is_stmt 1 view -0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
1879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 133


1880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1054              		.loc 1 1880 3 view .LVU343
1881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return ADC converted value */
1886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return hadc->Instance->DR;
 1055              		.loc 1 1886 3 view .LVU344
 1056              		.loc 1 1886 14 is_stmt 0 view .LVU345
 1057 0000 0368     		ldr	r3, [r0]
 1058              		.loc 1 1886 24 view .LVU346
 1059 0002 186C     		ldr	r0, [r3, #64]
 1060              	.LVL69:
1887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1061              		.loc 1 1887 1 view .LVU347
 1062 0004 7047     		bx	lr
 1063              		.cfi_endproc
 1064              	.LFE980:
 1066              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1067              		.align	1
 1068              		.weak	HAL_ADC_ConvCpltCallback
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1073              	HAL_ADC_ConvCpltCallback:
 1074              	.LVL70:
 1075              	.LFB982:
1888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
1893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
1895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* End Of Sampling callback */
1915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 134


1917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear regular group conversion flag */
1922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
1928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
1938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* to disable interruption.                                               */
1939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
1941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
1942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC state */
1957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
1958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
1962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Change ADC state to error state */
1964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
1967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Conversion complete callback */
1973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 135


1974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       possibility to use:                                              */
1976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
1977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear regular group conversion flag */
1984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
1987:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1989:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1991:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
1992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
1993:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1994:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
1995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1997:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Level out of window 1 callback */
1998:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1999:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2002:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2003:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2004:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2006:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2007:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2010:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2011:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
2012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2013:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2014:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Level out of window 2 callback */
2015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2016:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2017:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2019:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2020:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2021:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2023:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2025:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2028:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
2029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2030:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 136


2031:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Level out of window 3 callback */
2032:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2033:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2034:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2036:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2038:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2040:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2041:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2044:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2045:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2047:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* overrun ")                                                             */
2049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* error.                                                                 */
2051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2053:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       overrun_error = 1UL;
2054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2055:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2056:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2057:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Check DMA configuration */
2058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2059:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2060:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         overrun_error = 1UL;
2061:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2062:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2063:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2064:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (overrun_error == 1UL)
2065:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2066:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Change ADC state to error state */
2067:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2068:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2069:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to overrun */
2070:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2071:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2072:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Error callback */
2073:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2074:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2075:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2076:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2077:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2078:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2079:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2080:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2081:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2082:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2083:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2084:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC overrun flag */
2085:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2086:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2087:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 137


2088:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check channel configuration ready flag ========== */
2089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_CCRDY) == ADC_FLAG_CCRDY) && ((tmp_ier & ADC_IT_CCRDY) == ADC_IT_CCRDY))
2090:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2091:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Channel configuration ready callback */
2092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_ChannelConfigReadyCallback(hadc);
2093:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2094:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2095:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_CCRDY);
2096:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2098:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2099:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1076              		.loc 1 2105 1 is_stmt 1 view -0
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 0, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
2106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 1081              		.loc 1 2107 3 view .LVU349
2108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****    */
2112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1082              		.loc 1 2112 1 is_stmt 0 view .LVU350
 1083 0000 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE982:
 1087              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1088              		.align	1
 1089              		.weak	HAL_ADC_ConvHalfCpltCallback
 1090              		.syntax unified
 1091              		.thumb
 1092              		.thumb_func
 1094              	HAL_ADC_ConvHalfCpltCallback:
 1095              	.LVL71:
 1096              	.LFB983:
2113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1097              		.loc 1 2120 1 is_stmt 1 view -0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 138


2121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 1102              		.loc 1 2122 3 view .LVU352
2123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1103              		.loc 1 2127 1 is_stmt 0 view .LVU353
 1104 0000 7047     		bx	lr
 1105              		.cfi_endproc
 1106              	.LFE983:
 1108              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1109              		.align	1
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1114              	ADC_DMAHalfConvCplt:
 1115              	.LVL72:
 1116              	.LFB994:
2128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
2138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
2160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 139


2165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief    Peripheral Control functions
2172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
2173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
2174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              ##### Peripheral Control functions #####
2176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]  This section provides functions allowing to:
2178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Configure channels on regular group
2179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Configure the analog watchdog
2180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
2183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         These internal paths can be disabled using function
2190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         HAL_ADC_DeInit().
2191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         without resetting the ADC.
2196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param pConfig Structure of ADC channel assigned to ADC group regular.
2200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
2201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *pConfig)
2203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
2211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
2212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(pConfig->Rank));
2217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 140


2222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
2223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
2226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Channel number                                                        */
2231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* ADC sequencer.                                                         */
2237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* channel.                                                               */
2242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (pConfig->Rank != ADC_RANK_NONE)
2243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Regular sequence configuration */
2245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, pConfig->Channel);
2256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
2258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
2265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel) << (pConfig->Rank & 0x1FUL));
2266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (((pConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, pConfig->Rank, pConfig->Channel);
2274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 141


2279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Wait loop initialization and execution */
2300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
2305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             wait_loop_index--;
2307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
2308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_P
2310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VREFINT) &&
2315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* nothing to do */
2323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Regular sequencer configuration */
2329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       another channel.                                               */
2332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 142


2336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, pConfig->Channel);
2339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* paths.                                                                 */
2344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
2352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VBAT)
2354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
2357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VREFINT)
2359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
2362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* nothing to do */
2366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* parameters.                                                              */
2374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC state machine to error */
2377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
2385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 143


2393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the ADC.
2394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         while ADC conversion is on going.
2399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param pAnalogWDGConfig Structure of ADC analog watchdog configuration
2407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
2408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *pAnalo
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
2413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
2414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
2418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
2419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
2420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
2422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(pAnalogWDGConfig->Channel));
2424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verify thresholds range */
2427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->HighThreshold));
2433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
2434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->HighThreshold));
2439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
2440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
2443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* conversion on going on ADC group regular:                                */
2447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 144


2450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Analog watchdog configuration */
2451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*    channels.                                                         */
2456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
2460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
2461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
2465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
2469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
2476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
2479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
2480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
2482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (pAnalogWDGConfig->ITMode == ENABLE)
2483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
2485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
2487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
2489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
2492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
2498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* several channels by successive calls of this function.           */
2499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
2503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           else
2504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 145


2507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
2511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
2515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
2528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
2533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
2537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
2541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
2550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
2555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
2559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 146


2564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
2569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* are set to 0.                                                        */
2571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_high_threshold_shifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Hig
2572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
2573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* No need to shift the offset with respect to the selected ADC resolution: */
2578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* are set to 0.                                                        */
2580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_high_threshold_shifted = pAnalogWDGConfig->HighThreshold;
2581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
2582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
2585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_high_th
2586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
2587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
2591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
2600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
2601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
2602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
2606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
2607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     peripheral.
2608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Check the ADC state
2609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Check the ADC error code
2610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
2612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
2613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Return the ADC handle state.
2617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
2618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         compared with states bits.
2619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         For example:
2620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 147


2621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
2622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
2626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return ADC handle state */
2631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return hadc->State;
2632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Return the ADC error code.
2636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return hadc->ErrorCode;
2645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
2657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion.
2661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         stopped to disable the ADC.
2663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  hadc ADC handle
2664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
2665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc)
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
2669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* this function if not needed.                                             */
2675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
2676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 148


2678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
2680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Stop ADC group regular conversion */
2682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
2683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Get tick count */
2687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tickstart = HAL_GetTick();
2688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to error */
2697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_ERROR;
2703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return HAL status */
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
2711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable the selected ADC.
2715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
2719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
2721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
2723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
2733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 149


2735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       return HAL_ERROR;
2741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
2744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
2745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INT
2747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
2749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Wait loop initialization and execution */
2750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
2751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
2752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
2753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL) * ((SystemCoreClock / (100
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
2755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         wait_loop_index--;
2757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
2761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
2763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Wait for ADC effectively enabled */
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tickstart = HAL_GetTick();
2766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
2770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
2771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             calibration logic.
2772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
2773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
2774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             4 ADC clock cycle duration */
2775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
2776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
2777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
2780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
2783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
2785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             /* Update ADC state machine to error */
2788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 150


2792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             return HAL_ERROR;
2794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
2795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return HAL status */
2801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
2802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Disable the selected ADC.
2806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         stopped.
2808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
2810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
2812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
2814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
2815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       disabled.                                                          */
2819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
2821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
2822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Disable the ADC peripheral */
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
2828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
2829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
2833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       return HAL_ERROR;
2839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Get tick count */
2843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tickstart = HAL_GetTick();
2844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 151


2849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to error */
2853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_ERROR;
2859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return HAL status */
2865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
2866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DMA transfer complete callback.
2870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
2880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
2882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* to disable interruption.                                               */
2887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
2889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
2890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
2896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC state */
2905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 152


2906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Change ADC state to error state */
2912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Conversion complete callback */
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Call ADC DMA error callback */
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
2948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
2952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1117              		.loc 1 2952 1 is_stmt 1 view -0
 1118              		.cfi_startproc
 1119              		@ args = 0, pretend = 0, frame = 0
 1120              		@ frame_needed = 0, uses_anonymous_args = 0
 1121              		.loc 1 2952 1 is_stmt 0 view .LVU355
 1122 0000 08B5     		push	{r3, lr}
 1123              	.LCFI6:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 3, -8
 1126              		.cfi_offset 14, -4
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 153


2953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1127              		.loc 1 2954 3 is_stmt 1 view .LVU356
 1128              	.LVL73:
2955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Half conversion callback */
2957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1129              		.loc 1 2960 3 view .LVU357
 1130 0002 806A     		ldr	r0, [r0, #40]
 1131              	.LVL74:
 1132              		.loc 1 2960 3 is_stmt 0 view .LVU358
 1133 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1134              	.LVL75:
2961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1135              		.loc 1 2962 1 view .LVU359
 1136 0008 08BD     		pop	{r3, pc}
 1137              		.cfi_endproc
 1138              	.LFE994:
 1140              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1141              		.align	1
 1142              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1143              		.syntax unified
 1144              		.thumb
 1145              		.thumb_func
 1147              	HAL_ADC_LevelOutOfWindowCallback:
 1148              	.LVL76:
 1149              	.LFB984:
2135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1150              		.loc 1 2135 1 is_stmt 1 view -0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
2137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1155              		.loc 1 2137 3 view .LVU361
2142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1156              		.loc 1 2142 1 is_stmt 0 view .LVU362
 1157 0000 7047     		bx	lr
 1158              		.cfi_endproc
 1159              	.LFE984:
 1161              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1162              		.align	1
 1163              		.weak	HAL_ADC_ErrorCallback
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1168              	HAL_ADC_ErrorCallback:
 1169              	.LVL77:
 1170              	.LFB985:
2157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1171              		.loc 1 2157 1 is_stmt 1 view -0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 154


 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
2159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1176              		.loc 1 2159 3 view .LVU364
2164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1177              		.loc 1 2164 1 is_stmt 0 view .LVU365
 1178 0000 7047     		bx	lr
 1179              		.cfi_endproc
 1180              	.LFE985:
 1182              		.section	.text.ADC_DMAError,"ax",%progbits
 1183              		.align	1
 1184              		.syntax unified
 1185              		.thumb
 1186              		.thumb_func
 1188              	ADC_DMAError:
 1189              	.LVL78:
 1190              	.LFB995:
2963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DMA error callback.
2966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)
2970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1191              		.loc 1 2970 1 is_stmt 1 view -0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		.loc 1 2970 1 is_stmt 0 view .LVU367
 1196 0000 08B5     		push	{r3, lr}
 1197              	.LCFI7:
 1198              		.cfi_def_cfa_offset 8
 1199              		.cfi_offset 3, -8
 1200              		.cfi_offset 14, -4
2971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1201              		.loc 1 2972 3 is_stmt 1 view .LVU368
 1202              		.loc 1 2972 22 is_stmt 0 view .LVU369
 1203 0002 806A     		ldr	r0, [r0, #40]
 1204              	.LVL79:
2973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC state */
2975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1205              		.loc 1 2975 3 is_stmt 1 view .LVU370
 1206 0004 836D     		ldr	r3, [r0, #88]
 1207 0006 43F04003 		orr	r3, r3, #64
 1208 000a 8365     		str	r3, [r0, #88]
2976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC error code to DMA error */
2978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1209              		.loc 1 2978 3 view .LVU371
 1210 000c C36D     		ldr	r3, [r0, #92]
 1211 000e 43F00403 		orr	r3, r3, #4
 1212 0012 C365     		str	r3, [r0, #92]
2979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Error callback */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 155


2981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1213              		.loc 1 2984 3 view .LVU372
 1214 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1215              	.LVL80:
2985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1216              		.loc 1 2986 1 is_stmt 0 view .LVU373
 1217 0018 08BD     		pop	{r3, pc}
 1218              		.cfi_endproc
 1219              	.LFE995:
 1221              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1222              		.align	1
 1223              		.syntax unified
 1224              		.thumb
 1225              		.thumb_func
 1227              	ADC_DMAConvCplt:
 1228              	.LVL81:
 1229              	.LFB993:
2874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1230              		.loc 1 2874 1 is_stmt 1 view -0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 0
 1233              		@ frame_needed = 0, uses_anonymous_args = 0
2874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1234              		.loc 1 2874 1 is_stmt 0 view .LVU375
 1235 0000 08B5     		push	{r3, lr}
 1236              	.LCFI8:
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 3, -8
 1239              		.cfi_offset 14, -4
 1240 0002 0346     		mov	r3, r0
2876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1241              		.loc 1 2876 3 is_stmt 1 view .LVU376
2876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1242              		.loc 1 2876 22 is_stmt 0 view .LVU377
 1243 0004 806A     		ldr	r0, [r0, #40]
 1244              	.LVL82:
2879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1245              		.loc 1 2879 3 is_stmt 1 view .LVU378
2879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1246              		.loc 1 2879 12 is_stmt 0 view .LVU379
 1247 0006 826D     		ldr	r2, [r0, #88]
2879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1248              		.loc 1 2879 6 view .LVU380
 1249 0008 12F0500F 		tst	r2, #80
 1250 000c 2AD1     		bne	.L78
2882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1251              		.loc 1 2882 5 is_stmt 1 view .LVU381
 1252 000e 836D     		ldr	r3, [r0, #88]
 1253              	.LVL83:
2882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1254              		.loc 1 2882 5 is_stmt 0 view .LVU382
 1255 0010 43F40073 		orr	r3, r3, #512
 1256 0014 8365     		str	r3, [r0, #88]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 156


2887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1257              		.loc 1 2887 5 is_stmt 1 view .LVU383
2887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1258              		.loc 1 2887 10 is_stmt 0 view .LVU384
 1259 0016 0368     		ldr	r3, [r0]
 1260              	.LVL84:
 1261              	.LBB166:
 1262              	.LBI166:
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1263              		.loc 2 2345 26 is_stmt 1 view .LVU385
 1264              	.LBB167:
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1265              		.loc 2 2347 3 view .LVU386
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1266              		.loc 2 2347 12 is_stmt 0 view .LVU387
 1267 0018 DA68     		ldr	r2, [r3, #12]
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1268              		.loc 2 2347 106 view .LVU388
 1269 001a 12F4406F 		tst	r2, #3072
 1270 001e 15D1     		bne	.L79
 1271              	.LVL85:
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1272              		.loc 2 2347 106 view .LVU389
 1273              	.LBE167:
 1274              	.LBE166:
2888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1275              		.loc 1 2888 23 view .LVU390
 1276 0020 827E     		ldrb	r2, [r0, #26]	@ zero_extendqisi2
2888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1277              		.loc 1 2888 9 view .LVU391
 1278 0022 9AB9     		cbnz	r2, .L79
2892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1279              		.loc 1 2892 7 is_stmt 1 view .LVU392
2892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1280              		.loc 1 2892 11 is_stmt 0 view .LVU393
 1281 0024 1A68     		ldr	r2, [r3]
2892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1282              		.loc 1 2892 10 view .LVU394
 1283 0026 12F0080F 		tst	r2, #8
 1284 002a 0FD0     		beq	.L79
2896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1285              		.loc 1 2896 9 is_stmt 1 view .LVU395
 1286              	.LVL86:
 1287              	.LBB168:
 1288              	.LBI168:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1289              		.loc 2 4372 26 view .LVU396
 1290              	.LBB169:
 1291              		.loc 2 4374 3 view .LVU397
 1292              		.loc 2 4374 12 is_stmt 0 view .LVU398
 1293 002c 9A68     		ldr	r2, [r3, #8]
 1294              		.loc 2 4374 74 view .LVU399
 1295 002e 12F0040F 		tst	r2, #4
 1296 0032 0ED1     		bne	.L80
 1297              	.LVL87:
 1298              		.loc 2 4374 74 view .LVU400
 1299              	.LBE169:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 157


 1300              	.LBE168:
2902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1301              		.loc 1 2902 11 is_stmt 1 view .LVU401
 1302 0034 5A68     		ldr	r2, [r3, #4]
 1303 0036 22F00C02 		bic	r2, r2, #12
 1304 003a 5A60     		str	r2, [r3, #4]
2905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1305              		.loc 1 2905 11 view .LVU402
 1306 003c 836D     		ldr	r3, [r0, #88]
 1307 003e 23F48073 		bic	r3, r3, #256
 1308 0042 23F00103 		bic	r3, r3, #1
 1309 0046 43F00103 		orr	r3, r3, #1
 1310 004a 8365     		str	r3, [r0, #88]
 1311              	.L79:
2924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1312              		.loc 1 2924 5 view .LVU403
 1313 004c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1314              	.LVL88:
 1315              	.L77:
2944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1316              		.loc 1 2944 1 is_stmt 0 view .LVU404
 1317 0050 08BD     		pop	{r3, pc}
 1318              	.LVL89:
 1319              	.L80:
2912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1320              		.loc 1 2912 11 is_stmt 1 view .LVU405
 1321 0052 836D     		ldr	r3, [r0, #88]
 1322 0054 43F02003 		orr	r3, r3, #32
 1323 0058 8365     		str	r3, [r0, #88]
2915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 1324              		.loc 1 2915 11 view .LVU406
 1325 005a C36D     		ldr	r3, [r0, #92]
 1326 005c 43F00103 		orr	r3, r3, #1
 1327 0060 C365     		str	r3, [r0, #92]
 1328 0062 F3E7     		b	.L79
 1329              	.LVL90:
 1330              	.L78:
2929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1331              		.loc 1 2929 5 view .LVU407
2929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1332              		.loc 1 2929 14 is_stmt 0 view .LVU408
 1333 0064 826D     		ldr	r2, [r0, #88]
2929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1334              		.loc 1 2929 8 view .LVU409
 1335 0066 12F0100F 		tst	r2, #16
 1336 006a 04D1     		bne	.L84
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1337              		.loc 1 2941 7 is_stmt 1 view .LVU410
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1338              		.loc 1 2941 11 is_stmt 0 view .LVU411
 1339 006c 026D     		ldr	r2, [r0, #80]
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1340              		.loc 1 2941 23 view .LVU412
 1341 006e 526B     		ldr	r2, [r2, #52]
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1342              		.loc 1 2941 7 view .LVU413
 1343 0070 1846     		mov	r0, r3
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 158


 1344              	.LVL91:
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1345              		.loc 1 2941 7 view .LVU414
 1346 0072 9047     		blx	r2
 1347              	.LVL92:
2944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1348              		.loc 1 2944 1 view .LVU415
 1349 0074 ECE7     		b	.L77
 1350              	.LVL93:
 1351              	.L84:
2935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1352              		.loc 1 2935 7 is_stmt 1 view .LVU416
 1353 0076 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1354              	.LVL94:
2935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1355              		.loc 1 2935 7 is_stmt 0 view .LVU417
 1356 007a E9E7     		b	.L77
 1357              		.cfi_endproc
 1358              	.LFE993:
 1360              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1361              		.align	1
 1362              		.global	HAL_ADC_IRQHandler
 1363              		.syntax unified
 1364              		.thumb
 1365              		.thumb_func
 1367              	HAL_ADC_IRQHandler:
 1368              	.LVL95:
 1369              	.LFB981:
1895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1370              		.loc 1 1895 1 is_stmt 1 view -0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
1895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1374              		.loc 1 1895 1 is_stmt 0 view .LVU419
 1375 0000 70B5     		push	{r4, r5, r6, lr}
 1376              	.LCFI9:
 1377              		.cfi_def_cfa_offset 16
 1378              		.cfi_offset 4, -16
 1379              		.cfi_offset 5, -12
 1380              		.cfi_offset 6, -8
 1381              		.cfi_offset 14, -4
 1382 0002 0446     		mov	r4, r0
1896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1383              		.loc 1 1896 3 is_stmt 1 view .LVU420
 1384              	.LVL96:
1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1385              		.loc 1 1897 3 view .LVU421
1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1386              		.loc 1 1897 26 is_stmt 0 view .LVU422
 1387 0004 0368     		ldr	r3, [r0]
1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1388              		.loc 1 1897 12 view .LVU423
 1389 0006 1E68     		ldr	r6, [r3]
 1390              	.LVL97:
1898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1391              		.loc 1 1898 3 is_stmt 1 view .LVU424
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 159


1898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1392              		.loc 1 1898 12 is_stmt 0 view .LVU425
 1393 0008 5D68     		ldr	r5, [r3, #4]
 1394              	.LVL98:
1901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1395              		.loc 1 1901 3 is_stmt 1 view .LVU426
1902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1396              		.loc 1 1902 3 view .LVU427
1905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1397              		.loc 1 1905 3 view .LVU428
1905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1398              		.loc 1 1905 6 is_stmt 0 view .LVU429
 1399 000a 16F0020F 		tst	r6, #2
 1400 000e 10D0     		beq	.L86
1905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1401              		.loc 1 1905 54 discriminator 1 view .LVU430
 1402 0010 15F0020F 		tst	r5, #2
 1403 0014 0DD0     		beq	.L86
1908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1404              		.loc 1 1908 5 is_stmt 1 view .LVU431
1908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1405              		.loc 1 1908 14 is_stmt 0 view .LVU432
 1406 0016 836D     		ldr	r3, [r0, #88]
1908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1407              		.loc 1 1908 8 view .LVU433
 1408 0018 13F0100F 		tst	r3, #16
 1409 001c 03D1     		bne	.L87
1911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1410              		.loc 1 1911 7 is_stmt 1 view .LVU434
 1411 001e 836D     		ldr	r3, [r0, #88]
 1412 0020 43F40063 		orr	r3, r3, #2048
 1413 0024 8365     		str	r3, [r0, #88]
 1414              	.L87:
1918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1415              		.loc 1 1918 5 view .LVU435
 1416 0026 2046     		mov	r0, r4
 1417              	.LVL99:
1918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1418              		.loc 1 1918 5 is_stmt 0 view .LVU436
 1419 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1420              	.LVL100:
1922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1421              		.loc 1 1922 5 is_stmt 1 view .LVU437
 1422 002c 2368     		ldr	r3, [r4]
 1423 002e 0222     		movs	r2, #2
 1424 0030 1A60     		str	r2, [r3]
 1425              	.L86:
1926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1426              		.loc 1 1926 3 view .LVU438
1926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1427              		.loc 1 1926 6 is_stmt 0 view .LVU439
 1428 0032 16F0040F 		tst	r6, #4
 1429 0036 02D0     		beq	.L88
1926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1430              		.loc 1 1926 51 discriminator 1 view .LVU440
 1431 0038 15F0040F 		tst	r5, #4
 1432 003c 05D1     		bne	.L89
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 160


 1433              	.L88:
1926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1434              		.loc 1 1926 94 discriminator 3 view .LVU441
 1435 003e 16F0080F 		tst	r6, #8
 1436 0042 2BD0     		beq	.L90
1927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1437              		.loc 1 1927 51 view .LVU442
 1438 0044 15F0080F 		tst	r5, #8
 1439 0048 28D0     		beq	.L90
 1440              	.L89:
1930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1441              		.loc 1 1930 5 is_stmt 1 view .LVU443
1930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1442              		.loc 1 1930 14 is_stmt 0 view .LVU444
 1443 004a A36D     		ldr	r3, [r4, #88]
1930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1444              		.loc 1 1930 8 view .LVU445
 1445 004c 13F0100F 		tst	r3, #16
 1446 0050 03D1     		bne	.L91
1933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1447              		.loc 1 1933 7 is_stmt 1 view .LVU446
 1448 0052 A36D     		ldr	r3, [r4, #88]
 1449 0054 43F40073 		orr	r3, r3, #512
 1450 0058 A365     		str	r3, [r4, #88]
 1451              	.L91:
1939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1452              		.loc 1 1939 5 view .LVU447
1939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1453              		.loc 1 1939 10 is_stmt 0 view .LVU448
 1454 005a 2368     		ldr	r3, [r4]
 1455              	.LVL101:
 1456              	.LBB170:
 1457              	.LBI170:
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1458              		.loc 2 2345 26 is_stmt 1 view .LVU449
 1459              	.LBB171:
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1460              		.loc 2 2347 3 view .LVU450
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1461              		.loc 2 2347 12 is_stmt 0 view .LVU451
 1462 005c DA68     		ldr	r2, [r3, #12]
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1463              		.loc 2 2347 106 view .LVU452
 1464 005e 12F4406F 		tst	r2, #3072
 1465 0062 15D1     		bne	.L92
 1466              	.LVL102:
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1467              		.loc 2 2347 106 view .LVU453
 1468              	.LBE171:
 1469              	.LBE170:
1940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1470              		.loc 1 1940 23 view .LVU454
 1471 0064 A27E     		ldrb	r2, [r4, #26]	@ zero_extendqisi2
1940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1472              		.loc 1 1940 9 view .LVU455
 1473 0066 9AB9     		cbnz	r2, .L92
1944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 161


 1474              		.loc 1 1944 7 is_stmt 1 view .LVU456
1944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1475              		.loc 1 1944 11 is_stmt 0 view .LVU457
 1476 0068 1A68     		ldr	r2, [r3]
1944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1477              		.loc 1 1944 10 view .LVU458
 1478 006a 12F0080F 		tst	r2, #8
 1479 006e 0FD0     		beq	.L92
1948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1480              		.loc 1 1948 9 is_stmt 1 view .LVU459
 1481              	.LVL103:
 1482              	.LBB172:
 1483              	.LBI172:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1484              		.loc 2 4372 26 view .LVU460
 1485              	.LBB173:
 1486              		.loc 2 4374 3 view .LVU461
 1487              		.loc 2 4374 12 is_stmt 0 view .LVU462
 1488 0070 9A68     		ldr	r2, [r3, #8]
 1489              		.loc 2 4374 74 view .LVU463
 1490 0072 12F0040F 		tst	r2, #4
 1491 0076 45D1     		bne	.L93
 1492              	.LVL104:
 1493              		.loc 2 4374 74 view .LVU464
 1494              	.LBE173:
 1495              	.LBE172:
1954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1496              		.loc 1 1954 11 is_stmt 1 view .LVU465
 1497 0078 5A68     		ldr	r2, [r3, #4]
 1498 007a 22F00C02 		bic	r2, r2, #12
 1499 007e 5A60     		str	r2, [r3, #4]
1957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1500              		.loc 1 1957 11 view .LVU466
 1501 0080 A36D     		ldr	r3, [r4, #88]
 1502 0082 23F48073 		bic	r3, r3, #256
 1503 0086 23F00103 		bic	r3, r3, #1
 1504 008a 43F00103 		orr	r3, r3, #1
 1505 008e A365     		str	r3, [r4, #88]
 1506              	.L92:
1980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1507              		.loc 1 1980 5 view .LVU467
 1508 0090 2046     		mov	r0, r4
 1509 0092 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1510              	.LVL105:
1988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1511              		.loc 1 1988 5 view .LVU468
 1512 0096 2368     		ldr	r3, [r4]
 1513 0098 0C22     		movs	r2, #12
 1514 009a 1A60     		str	r2, [r3]
 1515              	.L90:
1992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1516              		.loc 1 1992 3 view .LVU469
1992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1517              		.loc 1 1992 6 is_stmt 0 view .LVU470
 1518 009c 16F0800F 		tst	r6, #128
 1519 00a0 02D0     		beq	.L94
1992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 162


 1520              		.loc 1 1992 52 discriminator 1 view .LVU471
 1521 00a2 15F0800F 		tst	r5, #128
 1522 00a6 36D1     		bne	.L102
 1523              	.L94:
2009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1524              		.loc 1 2009 3 is_stmt 1 view .LVU472
2009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1525              		.loc 1 2009 6 is_stmt 0 view .LVU473
 1526 00a8 16F4807F 		tst	r6, #256
 1527 00ac 02D0     		beq	.L95
2009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1528              		.loc 1 2009 52 discriminator 1 view .LVU474
 1529 00ae 15F4807F 		tst	r5, #256
 1530 00b2 3BD1     		bne	.L103
 1531              	.L95:
2026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1532              		.loc 1 2026 3 is_stmt 1 view .LVU475
2026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1533              		.loc 1 2026 6 is_stmt 0 view .LVU476
 1534 00b4 16F4007F 		tst	r6, #512
 1535 00b8 02D0     		beq	.L96
2026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1536              		.loc 1 2026 52 discriminator 1 view .LVU477
 1537 00ba 15F4007F 		tst	r5, #512
 1538 00be 41D1     		bne	.L104
 1539              	.L96:
2043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1540              		.loc 1 2043 3 is_stmt 1 view .LVU478
2043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1541              		.loc 1 2043 6 is_stmt 0 view .LVU479
 1542 00c0 16F0100F 		tst	r6, #16
 1543 00c4 17D0     		beq	.L97
2043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1544              		.loc 1 2043 50 discriminator 1 view .LVU480
 1545 00c6 15F0100F 		tst	r5, #16
 1546 00ca 14D0     		beq	.L97
2051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1547              		.loc 1 2051 5 is_stmt 1 view .LVU481
2051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1548              		.loc 1 2051 19 is_stmt 0 view .LVU482
 1549 00cc 236B     		ldr	r3, [r4, #48]
2051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1550              		.loc 1 2051 8 view .LVU483
 1551 00ce 23B1     		cbz	r3, .L98
2058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1552              		.loc 1 2058 7 is_stmt 1 view .LVU484
2058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1553              		.loc 1 2058 11 is_stmt 0 view .LVU485
 1554 00d0 2368     		ldr	r3, [r4]
 1555              	.LVL106:
 1556              	.LBB174:
 1557              	.LBI174:
3326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1558              		.loc 2 3326 26 is_stmt 1 view .LVU486
 1559              	.LBB175:
3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1560              		.loc 2 3328 3 view .LVU487
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 163


3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1561              		.loc 2 3328 21 is_stmt 0 view .LVU488
 1562 00d2 DB68     		ldr	r3, [r3, #12]
 1563              	.LVL107:
3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1564              		.loc 2 3328 21 view .LVU489
 1565              	.LBE175:
 1566              	.LBE174:
2058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1567              		.loc 1 2058 10 view .LVU490
 1568 00d4 13F0030F 		tst	r3, #3
 1569 00d8 0AD0     		beq	.L99
 1570              	.L98:
 1571              	.LVL108:
2067:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1572              		.loc 1 2067 7 is_stmt 1 view .LVU491
 1573 00da A36D     		ldr	r3, [r4, #88]
 1574 00dc 43F48063 		orr	r3, r3, #1024
 1575 00e0 A365     		str	r3, [r4, #88]
2070:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1576              		.loc 1 2070 7 view .LVU492
 1577 00e2 E36D     		ldr	r3, [r4, #92]
 1578 00e4 43F00203 		orr	r3, r3, #2
 1579 00e8 E365     		str	r3, [r4, #92]
2080:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1580              		.loc 1 2080 7 view .LVU493
 1581 00ea 2046     		mov	r0, r4
 1582 00ec FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1583              	.LVL109:
 1584              	.L99:
2085:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1585              		.loc 1 2085 5 view .LVU494
 1586 00f0 2368     		ldr	r3, [r4]
 1587 00f2 1022     		movs	r2, #16
 1588 00f4 1A60     		str	r2, [r3]
 1589              	.L97:
2089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1590              		.loc 1 2089 3 view .LVU495
2089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1591              		.loc 1 2089 6 is_stmt 0 view .LVU496
 1592 00f6 16F4005F 		tst	r6, #8192
 1593 00fa 02D0     		beq	.L85
2089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1594              		.loc 1 2089 54 discriminator 1 view .LVU497
 1595 00fc 15F4005F 		tst	r5, #8192
 1596 0100 2CD1     		bne	.L105
 1597              	.L85:
2097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1598              		.loc 1 2097 1 view .LVU498
 1599 0102 70BD     		pop	{r4, r5, r6, pc}
 1600              	.LVL110:
 1601              	.L93:
1964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1602              		.loc 1 1964 11 is_stmt 1 view .LVU499
 1603 0104 A36D     		ldr	r3, [r4, #88]
 1604 0106 43F02003 		orr	r3, r3, #32
 1605 010a A365     		str	r3, [r4, #88]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 164


1967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 1606              		.loc 1 1967 11 view .LVU500
 1607 010c E36D     		ldr	r3, [r4, #92]
 1608 010e 43F00103 		orr	r3, r3, #1
 1609 0112 E365     		str	r3, [r4, #92]
 1610 0114 BCE7     		b	.L92
 1611              	.L102:
1995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1612              		.loc 1 1995 5 view .LVU501
 1613 0116 A36D     		ldr	r3, [r4, #88]
 1614 0118 43F48033 		orr	r3, r3, #65536
 1615 011c A365     		str	r3, [r4, #88]
2001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1616              		.loc 1 2001 5 view .LVU502
 1617 011e 2046     		mov	r0, r4
 1618 0120 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1619              	.LVL111:
2005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1620              		.loc 1 2005 5 view .LVU503
 1621 0124 2368     		ldr	r3, [r4]
 1622 0126 8022     		movs	r2, #128
 1623 0128 1A60     		str	r2, [r3]
 1624 012a BDE7     		b	.L94
 1625              	.L103:
2012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1626              		.loc 1 2012 5 view .LVU504
 1627 012c A36D     		ldr	r3, [r4, #88]
 1628 012e 43F40033 		orr	r3, r3, #131072
 1629 0132 A365     		str	r3, [r4, #88]
2018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1630              		.loc 1 2018 5 view .LVU505
 1631 0134 2046     		mov	r0, r4
 1632 0136 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1633              	.LVL112:
2022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1634              		.loc 1 2022 5 view .LVU506
 1635 013a 2368     		ldr	r3, [r4]
 1636 013c 4FF48072 		mov	r2, #256
 1637 0140 1A60     		str	r2, [r3]
 1638 0142 B7E7     		b	.L95
 1639              	.L104:
2029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1640              		.loc 1 2029 5 view .LVU507
 1641 0144 A36D     		ldr	r3, [r4, #88]
 1642 0146 43F48023 		orr	r3, r3, #262144
 1643 014a A365     		str	r3, [r4, #88]
2035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1644              		.loc 1 2035 5 view .LVU508
 1645 014c 2046     		mov	r0, r4
 1646 014e FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1647              	.LVL113:
2039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1648              		.loc 1 2039 5 view .LVU509
 1649 0152 2368     		ldr	r3, [r4]
 1650 0154 4FF40072 		mov	r2, #512
 1651 0158 1A60     		str	r2, [r3]
 1652 015a B1E7     		b	.L96
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 165


 1653              	.LVL114:
 1654              	.L105:
2092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1655              		.loc 1 2092 5 view .LVU510
 1656 015c 2046     		mov	r0, r4
 1657 015e FFF7FEFF 		bl	HAL_ADCEx_ChannelConfigReadyCallback
 1658              	.LVL115:
2095:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1659              		.loc 1 2095 5 view .LVU511
 1660 0162 2368     		ldr	r3, [r4]
 1661 0164 4FF40052 		mov	r2, #8192
 1662 0168 1A60     		str	r2, [r3]
2097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1663              		.loc 1 2097 1 is_stmt 0 view .LVU512
 1664 016a CAE7     		b	.L85
 1665              		.cfi_endproc
 1666              	.LFE981:
 1668              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1669              		.align	1
 1670              		.global	HAL_ADC_ConfigChannel
 1671              		.syntax unified
 1672              		.thumb
 1673              		.thumb_func
 1675              	HAL_ADC_ConfigChannel:
 1676              	.LVL116:
 1677              	.LFB986:
2203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1678              		.loc 1 2203 1 is_stmt 1 view -0
 1679              		.cfi_startproc
 1680              		@ args = 0, pretend = 0, frame = 8
 1681              		@ frame_needed = 0, uses_anonymous_args = 0
 1682              		@ link register save eliminated.
2203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1683              		.loc 1 2203 1 is_stmt 0 view .LVU514
 1684 0000 70B4     		push	{r4, r5, r6}
 1685              	.LCFI10:
 1686              		.cfi_def_cfa_offset 12
 1687              		.cfi_offset 4, -12
 1688              		.cfi_offset 5, -8
 1689              		.cfi_offset 6, -4
 1690 0002 83B0     		sub	sp, sp, #12
 1691              	.LCFI11:
 1692              		.cfi_def_cfa_offset 24
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1693              		.loc 1 2204 3 is_stmt 1 view .LVU515
 1694              	.LVL117:
2205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1695              		.loc 1 2205 3 view .LVU516
2206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1696              		.loc 1 2206 3 view .LVU517
2206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1697              		.loc 1 2206 17 is_stmt 0 view .LVU518
 1698 0004 0022     		movs	r2, #0
 1699 0006 0192     		str	r2, [sp, #4]
2209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
 1700              		.loc 1 2209 3 is_stmt 1 view .LVU519
2210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 166


 1701              		.loc 1 2210 3 view .LVU520
2211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1702              		.loc 1 2211 3 view .LVU521
2213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1703              		.loc 1 2213 3 view .LVU522
2213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1704              		.loc 1 2213 18 is_stmt 0 view .LVU523
 1705 0008 0469     		ldr	r4, [r0, #16]
2220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1706              		.loc 1 2220 5 is_stmt 1 view .LVU524
2222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1707              		.loc 1 2222 5 view .LVU525
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1708              		.loc 1 2225 3 view .LVU526
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1709              		.loc 1 2225 3 view .LVU527
 1710 000a 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 1711 000e 012A     		cmp	r2, #1
 1712 0010 00F00581 		beq	.L125
 1713 0014 0346     		mov	r3, r0
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1714              		.loc 1 2225 3 discriminator 2 view .LVU528
 1715 0016 0122     		movs	r2, #1
 1716 0018 80F85420 		strb	r2, [r0, #84]
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1717              		.loc 1 2225 3 discriminator 2 view .LVU529
2233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1718              		.loc 1 2233 3 discriminator 2 view .LVU530
2233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1719              		.loc 1 2233 7 is_stmt 0 discriminator 2 view .LVU531
 1720 001c 0268     		ldr	r2, [r0]
 1721              	.LVL118:
 1722              	.LBB176:
 1723              	.LBI176:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1724              		.loc 2 4372 26 is_stmt 1 discriminator 2 view .LVU532
 1725              	.LBB177:
 1726              		.loc 2 4374 3 discriminator 2 view .LVU533
 1727              		.loc 2 4374 12 is_stmt 0 discriminator 2 view .LVU534
 1728 001e 9068     		ldr	r0, [r2, #8]
 1729              	.LVL119:
 1730              		.loc 2 4374 74 discriminator 2 view .LVU535
 1731 0020 10F0040F 		tst	r0, #4
 1732 0024 0AD0     		beq	.L108
 1733              	.LVL120:
 1734              		.loc 2 4374 74 discriminator 2 view .LVU536
 1735              	.LBE177:
 1736              	.LBE176:
2377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1737              		.loc 1 2377 5 is_stmt 1 view .LVU537
 1738 0026 9A6D     		ldr	r2, [r3, #88]
 1739 0028 42F02002 		orr	r2, r2, #32
 1740 002c 9A65     		str	r2, [r3, #88]
2379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1741              		.loc 1 2379 5 view .LVU538
 1742              	.LVL121:
2379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 167


 1743              		.loc 1 2379 20 is_stmt 0 view .LVU539
 1744 002e 0120     		movs	r0, #1
 1745              	.LVL122:
 1746              	.L109:
2382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1747              		.loc 1 2382 3 is_stmt 1 view .LVU540
2382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1748              		.loc 1 2382 3 view .LVU541
 1749 0030 0022     		movs	r2, #0
 1750 0032 83F85420 		strb	r2, [r3, #84]
2382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1751              		.loc 1 2382 3 view .LVU542
2384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1752              		.loc 1 2384 3 view .LVU543
 1753              	.LVL123:
 1754              	.L107:
2385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1755              		.loc 1 2385 1 is_stmt 0 view .LVU544
 1756 0036 03B0     		add	sp, sp, #12
 1757              	.LCFI12:
 1758              		.cfi_remember_state
 1759              		.cfi_def_cfa_offset 12
 1760              		@ sp needed
 1761 0038 70BC     		pop	{r4, r5, r6}
 1762              	.LCFI13:
 1763              		.cfi_restore 6
 1764              		.cfi_restore 5
 1765              		.cfi_restore 4
 1766              		.cfi_def_cfa_offset 0
 1767 003a 7047     		bx	lr
 1768              	.LVL124:
 1769              	.L108:
 1770              	.LCFI14:
 1771              		.cfi_restore_state
2242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1772              		.loc 1 2242 5 is_stmt 1 view .LVU545
2242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1773              		.loc 1 2242 16 is_stmt 0 view .LVU546
 1774 003c 4868     		ldr	r0, [r1, #4]
2242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1775              		.loc 1 2242 8 view .LVU547
 1776 003e 0228     		cmp	r0, #2
 1777 0040 00F09E80 		beq	.L110
2250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1778              		.loc 1 2250 7 is_stmt 1 view .LVU548
2250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1779              		.loc 1 2250 10 is_stmt 0 view .LVU549
 1780 0044 B4F1004F 		cmp	r4, #-2147483648
 1781 0048 29D0     		beq	.L111
2250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1782              		.loc 1 2250 65 discriminator 1 view .LVU550
 1783 004a 764D     		ldr	r5, .L141
 1784 004c AC42     		cmp	r4, r5
 1785 004e 26D0     		beq	.L111
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1786              		.loc 1 2263 9 is_stmt 1 view .LVU551
 1787 0050 1C6E     		ldr	r4, [r3, #96]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 168


 1788 0052 00F01F00 		and	r0, r0, #31
 1789 0056 0F25     		movs	r5, #15
 1790 0058 8540     		lsls	r5, r5, r0
 1791 005a 24EA0505 		bic	r5, r4, r5
 1792 005e 0C68     		ldr	r4, [r1]
 1793 0060 C4F31106 		ubfx	r6, r4, #0, #18
 1794 0064 002E     		cmp	r6, #0
 1795 0066 33D1     		bne	.L114
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1796              		.loc 1 2263 9 is_stmt 0 discriminator 1 view .LVU552
 1797 0068 C4F38464 		ubfx	r4, r4, #26, #5
 1798              	.L115:
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1799              		.loc 1 2263 9 discriminator 4 view .LVU553
 1800 006c 04FA00F0 		lsl	r0, r4, r0
 1801 0070 2843     		orrs	r0, r0, r5
 1802 0072 1866     		str	r0, [r3, #96]
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1803              		.loc 1 2271 9 is_stmt 1 discriminator 4 view .LVU554
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1804              		.loc 1 2271 22 is_stmt 0 discriminator 4 view .LVU555
 1805 0074 4C68     		ldr	r4, [r1, #4]
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1806              		.loc 1 2271 29 discriminator 4 view .LVU556
 1807 0076 A008     		lsrs	r0, r4, #2
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1808              		.loc 1 2271 37 discriminator 4 view .LVU557
 1809 0078 0130     		adds	r0, r0, #1
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1810              		.loc 1 2271 57 discriminator 4 view .LVU558
 1811 007a DD69     		ldr	r5, [r3, #28]
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1812              		.loc 1 2271 12 discriminator 4 view .LVU559
 1813 007c A842     		cmp	r0, r5
 1814 007e 14D8     		bhi	.L113
2273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 1815              		.loc 1 2273 11 is_stmt 1 view .LVU560
 1816 0080 0D68     		ldr	r5, [r1]
 1817              	.LVL125:
 1818              	.LBB178:
 1819              	.LBI178:
2755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1820              		.loc 2 2755 22 view .LVU561
 1821              	.LBB179:
2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1822              		.loc 2 2761 3 view .LVU562
 1823 0082 906A     		ldr	r0, [r2, #40]
 1824 0084 04F01F04 		and	r4, r4, #31
 1825              	.LVL126:
2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1826              		.loc 2 2761 3 is_stmt 0 view .LVU563
 1827 0088 0F26     		movs	r6, #15
 1828 008a A640     		lsls	r6, r6, r4
 1829 008c 20EA0600 		bic	r0, r0, r6
 1830 0090 C5F38365 		ubfx	r5, r5, #26, #4
 1831              	.LVL127:
2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 169


 1832              		.loc 2 2761 3 view .LVU564
 1833 0094 05FA04F4 		lsl	r4, r5, r4
 1834 0098 0443     		orrs	r4, r4, r0
 1835 009a 9462     		str	r4, [r2, #40]
 1836              	.LVL128:
2764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 1837              		.loc 2 2764 1 view .LVU565
 1838 009c 05E0     		b	.L113
 1839              	.LVL129:
 1840              	.L111:
2764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 1841              		.loc 2 2764 1 view .LVU566
 1842              	.LBE179:
 1843              	.LBE178:
2255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 1844              		.loc 1 2255 9 is_stmt 1 view .LVU567
 1845 009e 0C68     		ldr	r4, [r1]
 1846              	.LVL130:
 1847              	.LBB180:
 1848              	.LBI180:
3021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1849              		.loc 2 3021 22 view .LVU568
 1850              	.LBB181:
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1851              		.loc 2 3025 3 view .LVU569
 1852 00a0 906A     		ldr	r0, [r2, #40]
 1853 00a2 C4F31104 		ubfx	r4, r4, #0, #18
 1854              	.LVL131:
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1855              		.loc 2 3025 3 is_stmt 0 view .LVU570
 1856 00a6 2043     		orrs	r0, r0, r4
 1857 00a8 9062     		str	r0, [r2, #40]
 1858              	.LVL132:
 1859              	.L113:
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1860              		.loc 2 3025 3 view .LVU571
 1861              	.LBE181:
 1862              	.LBE180:
2278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1863              		.loc 1 2278 7 is_stmt 1 view .LVU572
 1864 00aa 1C68     		ldr	r4, [r3]
 1865 00ac 0D68     		ldr	r5, [r1]
 1866 00ae 8A68     		ldr	r2, [r1, #8]
 1867              	.LVL133:
 1868              	.LBB182:
 1869              	.LBI182:
3453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1870              		.loc 2 3453 22 view .LVU573
 1871              	.LBB183:
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1872              		.loc 2 3457 3 view .LVU574
 1873 00b0 6069     		ldr	r0, [r4, #20]
 1874 00b2 20EA0520 		bic	r0, r0, r5, lsl #8
 1875 00b6 02EA0522 		and	r2, r2, r5, lsl #8
 1876              	.LVL134:
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1877              		.loc 2 3457 3 is_stmt 0 view .LVU575
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 170


 1878 00ba 22F07C42 		bic	r2, r2, #-67108864
 1879 00be 22F0FF02 		bic	r2, r2, #255
 1880 00c2 0243     		orrs	r2, r2, r0
 1881 00c4 6261     		str	r2, [r4, #20]
 1882              	.LVL135:
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1883              		.loc 2 3457 3 view .LVU576
 1884              	.LBE183:
 1885              	.LBE182:
2286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1886              		.loc 1 2286 7 is_stmt 1 view .LVU577
2286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1887              		.loc 1 2286 11 is_stmt 0 view .LVU578
 1888 00c6 0A68     		ldr	r2, [r1]
2286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1889              		.loc 1 2286 10 view .LVU579
 1890 00c8 002A     		cmp	r2, #0
 1891 00ca 09DB     		blt	.L133
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1892              		.loc 1 2204 21 view .LVU580
 1893 00cc 0020     		movs	r0, #0
 1894 00ce AFE7     		b	.L109
 1895              	.L114:
 1896              	.LVL136:
 1897              	.LBB184:
 1898              	.LBI184:
 1899              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 171


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 172


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 173


 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 174


 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 175


 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 176


 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 177


 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 178


 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 179


 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 180


 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 181


 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 182


 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 183


 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 184


 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 185


 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 186


 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 187


 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 188


1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1900              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU581
 1901              	.LBB185:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1902              		.loc 3 1050 3 discriminator 2 view .LVU582
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 189


1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1903              		.loc 3 1055 4 discriminator 2 view .LVU583
 1904              		.syntax unified
 1905              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1906 00d0 94FAA4F4 		rbit r4, r4
 1907              	@ 0 "" 2
 1908              	.LVL137:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1909              		.loc 3 1068 3 discriminator 2 view .LVU584
 1910              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU585
 1911              		.thumb
 1912              		.syntax unified
 1913              	.LBE185:
 1914              	.LBE184:
 1915              	.LBB186:
 1916              	.LBI186:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1917              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU586
 1918              	.LBB187:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1919              		.loc 3 1089 3 discriminator 2 view .LVU587
 1920              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU588
 1921 00d4 14B1     		cbz	r4, .L126
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 190


1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1922              		.loc 3 1093 3 is_stmt 1 view .LVU589
 1923              		.loc 3 1093 10 is_stmt 0 view .LVU590
 1924 00d6 B4FA84F4 		clz	r4, r4
 1925              	.LVL138:
 1926              		.loc 3 1093 10 view .LVU591
 1927 00da C7E7     		b	.L115
 1928              	.LVL139:
 1929              	.L126:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1930              		.loc 3 1091 12 view .LVU592
 1931 00dc 2024     		movs	r4, #32
 1932              	.LVL140:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1933              		.loc 3 1091 12 view .LVU593
 1934 00de C5E7     		b	.L115
 1935              	.L133:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1936              		.loc 3 1091 12 view .LVU594
 1937              	.LBE187:
 1938              	.LBE186:
2288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1939              		.loc 1 2288 9 is_stmt 1 view .LVU595
 1940              	.LVL141:
 1941              	.LBB188:
 1942              	.LBI188:
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1943              		.loc 2 1836 26 view .LVU596
 1944              	.LBB189:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1945              		.loc 2 1838 3 view .LVU597
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1946              		.loc 2 1838 21 is_stmt 0 view .LVU598
 1947 00e0 5149     		ldr	r1, .L141+4
 1948              	.LVL142:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1949              		.loc 2 1838 21 view .LVU599
 1950 00e2 D1F80807 		ldr	r0, [r1, #1800]
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1951              		.loc 2 1838 10 view .LVU600
 1952 00e6 00F0E071 		and	r1, r0, #29360128
 1953              	.LVL143:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1954              		.loc 2 1838 10 view .LVU601
 1955              	.LBE189:
 1956              	.LBE188:
2292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 1957              		.loc 1 2292 9 is_stmt 1 view .LVU602
2292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 1958              		.loc 1 2292 12 is_stmt 0 view .LVU603
 1959 00ea 504C     		ldr	r4, .L141+8
 1960 00ec A242     		cmp	r2, r4
 1961 00ee 07D0     		beq	.L134
 1962              	.L117:
2309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1963              		.loc 1 2309 14 is_stmt 1 view .LVU604
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 191


2309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1964              		.loc 1 2309 17 is_stmt 0 view .LVU605
 1965 00f0 4F4C     		ldr	r4, .L141+12
 1966 00f2 A242     		cmp	r2, r4
 1967 00f4 26D0     		beq	.L135
 1968              	.L120:
2314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 1969              		.loc 1 2314 14 is_stmt 1 view .LVU606
2314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 1970              		.loc 1 2314 17 is_stmt 0 view .LVU607
 1971 00f6 4F4C     		ldr	r4, .L141+16
 1972 00f8 A242     		cmp	r2, r4
 1973 00fa 32D0     		beq	.L136
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1974              		.loc 1 2204 21 view .LVU608
 1975 00fc 0020     		movs	r0, #0
 1976 00fe 97E7     		b	.L109
 1977              	.L134:
2292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 1978              		.loc 1 2292 58 discriminator 1 view .LVU609
 1979 0100 10F4000F 		tst	r0, #8388608
 1980 0104 F4D1     		bne	.L117
2295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 1981              		.loc 1 2295 11 is_stmt 1 view .LVU610
 1982 0106 41F40001 		orr	r1, r1, #8388608
 1983              	.LVL144:
 1984              	.LBB190:
 1985              	.LBI190:
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1986              		.loc 2 1742 22 view .LVU611
 1987              	.LBB191:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1988              		.loc 2 1744 3 view .LVU612
 1989 010a 4748     		ldr	r0, .L141+4
 1990              	.LVL145:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1991              		.loc 2 1744 3 is_stmt 0 view .LVU613
 1992 010c D0F80827 		ldr	r2, [r0, #1800]
 1993 0110 22F0E072 		bic	r2, r2, #29360128
 1994 0114 1143     		orrs	r1, r1, r2
 1995              	.LVL146:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1996              		.loc 2 1744 3 view .LVU614
 1997 0116 C0F80817 		str	r1, [r0, #1800]
 1998              	.LVL147:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1999              		.loc 2 1744 3 view .LVU615
 2000              	.LBE191:
 2001              	.LBE190:
2303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2002              		.loc 1 2303 11 is_stmt 1 view .LVU616
2303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2003              		.loc 1 2303 91 is_stmt 0 view .LVU617
 2004 011a 474A     		ldr	r2, .L141+20
 2005 011c 1268     		ldr	r2, [r2]
 2006 011e 9209     		lsrs	r2, r2, #6
 2007 0120 4649     		ldr	r1, .L141+24
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 192


 2008 0122 A1FB0212 		umull	r1, r2, r1, r2
 2009 0126 9209     		lsrs	r2, r2, #6
2303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2010              		.loc 1 2303 71 view .LVU618
 2011 0128 0132     		adds	r2, r2, #1
 2012 012a 02EB4202 		add	r2, r2, r2, lsl #1
 2013 012e 9200     		lsls	r2, r2, #2
2303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2014              		.loc 1 2303 27 view .LVU619
 2015 0130 0192     		str	r2, [sp, #4]
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2016              		.loc 1 2304 11 is_stmt 1 view .LVU620
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2017              		.loc 1 2304 17 is_stmt 0 view .LVU621
 2018 0132 02E0     		b	.L118
 2019              	.L119:
2306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2020              		.loc 1 2306 13 is_stmt 1 view .LVU622
2306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2021              		.loc 1 2306 28 is_stmt 0 view .LVU623
 2022 0134 019A     		ldr	r2, [sp, #4]
 2023 0136 013A     		subs	r2, r2, #1
 2024 0138 0192     		str	r2, [sp, #4]
 2025              	.L118:
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2026              		.loc 1 2304 17 is_stmt 1 view .LVU624
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2027              		.loc 1 2304 34 is_stmt 0 view .LVU625
 2028 013a 019A     		ldr	r2, [sp, #4]
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2029              		.loc 1 2304 17 view .LVU626
 2030 013c 002A     		cmp	r2, #0
 2031 013e F9D1     		bne	.L119
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2032              		.loc 1 2204 21 view .LVU627
 2033 0140 0020     		movs	r0, #0
 2034 0142 75E7     		b	.L109
 2035              	.LVL148:
 2036              	.L135:
2309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2037              		.loc 1 2309 57 discriminator 1 view .LVU628
 2038 0144 10F0807F 		tst	r0, #16777216
 2039 0148 D5D1     		bne	.L120
2311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 2040              		.loc 1 2311 11 is_stmt 1 view .LVU629
 2041 014a 41F08071 		orr	r1, r1, #16777216
 2042              	.LVL149:
 2043              	.LBB192:
 2044              	.LBI192:
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2045              		.loc 2 1742 22 view .LVU630
 2046              	.LBB193:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2047              		.loc 2 1744 3 view .LVU631
 2048 014e 3648     		ldr	r0, .L141+4
 2049              	.LVL150:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 193


 2050              		.loc 2 1744 3 is_stmt 0 view .LVU632
 2051 0150 D0F80827 		ldr	r2, [r0, #1800]
 2052 0154 22F0E072 		bic	r2, r2, #29360128
 2053 0158 1143     		orrs	r1, r1, r2
 2054              	.LVL151:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2055              		.loc 2 1744 3 view .LVU633
 2056 015a C0F80817 		str	r1, [r0, #1800]
 2057              	.LBE193:
 2058              	.LBE192:
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2059              		.loc 1 2204 21 view .LVU634
 2060 015e 0020     		movs	r0, #0
 2061              	.LBB195:
 2062              	.LBB194:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2063              		.loc 2 1745 1 view .LVU635
 2064 0160 66E7     		b	.L109
 2065              	.LVL152:
 2066              	.L136:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2067              		.loc 2 1745 1 view .LVU636
 2068              	.LBE194:
 2069              	.LBE195:
2314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2070              		.loc 1 2314 60 discriminator 1 view .LVU637
 2071 0162 10F4800F 		tst	r0, #4194304
 2072 0166 58D1     		bne	.L129
2317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 2073              		.loc 1 2317 11 is_stmt 1 view .LVU638
 2074 0168 41F48002 		orr	r2, r1, #4194304
 2075              	.LVL153:
 2076              	.LBB196:
 2077              	.LBI196:
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2078              		.loc 2 1742 22 view .LVU639
 2079              	.LBB197:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2080              		.loc 2 1744 3 view .LVU640
 2081 016c 2E48     		ldr	r0, .L141+4
 2082 016e D0F80817 		ldr	r1, [r0, #1800]
 2083              	.LVL154:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2084              		.loc 2 1744 3 is_stmt 0 view .LVU641
 2085 0172 21F0E071 		bic	r1, r1, #29360128
 2086 0176 0A43     		orrs	r2, r2, r1
 2087              	.LVL155:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2088              		.loc 2 1744 3 view .LVU642
 2089 0178 C0F80827 		str	r2, [r0, #1800]
 2090              	.LBE197:
 2091              	.LBE196:
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2092              		.loc 1 2204 21 view .LVU643
 2093 017c 0020     		movs	r0, #0
 2094              	.LBB199:
 2095              	.LBB198:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 194


1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2096              		.loc 2 1745 1 view .LVU644
 2097 017e 57E7     		b	.L109
 2098              	.LVL156:
 2099              	.L110:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2100              		.loc 2 1745 1 view .LVU645
 2101              	.LBE198:
 2102              	.LBE199:
2333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2103              		.loc 1 2333 7 is_stmt 1 view .LVU646
2333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2104              		.loc 1 2333 10 is_stmt 0 view .LVU647
 2105 0180 B4F1004F 		cmp	r4, #-2147483648
 2106 0184 02D0     		beq	.L121
2333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2107              		.loc 1 2333 65 discriminator 1 view .LVU648
 2108 0186 2748     		ldr	r0, .L141
 2109 0188 8442     		cmp	r4, r0
 2110 018a 06D1     		bne	.L122
 2111              	.L121:
2338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2112              		.loc 1 2338 9 is_stmt 1 view .LVU649
 2113 018c 0C68     		ldr	r4, [r1]
 2114              	.LVL157:
 2115              	.LBB200:
 2116              	.LBI200:
3113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2117              		.loc 2 3113 22 view .LVU650
 2118              	.LBB201:
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2119              		.loc 2 3117 3 view .LVU651
 2120 018e 906A     		ldr	r0, [r2, #40]
 2121 0190 C4F31104 		ubfx	r4, r4, #0, #18
 2122              	.LVL158:
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2123              		.loc 2 3117 3 is_stmt 0 view .LVU652
 2124 0194 20EA0400 		bic	r0, r0, r4
 2125 0198 9062     		str	r0, [r2, #40]
 2126              	.LVL159:
 2127              	.L122:
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2128              		.loc 2 3117 3 view .LVU653
 2129              	.LBE201:
 2130              	.LBE200:
2344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2131              		.loc 1 2344 7 is_stmt 1 view .LVU654
2344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2132              		.loc 1 2344 11 is_stmt 0 view .LVU655
 2133 019a 0A68     		ldr	r2, [r1]
2344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2134              		.loc 1 2344 10 view .LVU656
 2135 019c 002A     		cmp	r2, #0
 2136 019e 01DB     		blt	.L137
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2137              		.loc 1 2204 21 view .LVU657
 2138 01a0 0020     		movs	r0, #0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 195


 2139 01a2 45E7     		b	.L109
 2140              	.L137:
2346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2141              		.loc 1 2346 9 is_stmt 1 view .LVU658
 2142              	.LVL160:
 2143              	.LBB202:
 2144              	.LBI202:
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2145              		.loc 2 1836 26 view .LVU659
 2146              	.LBB203:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2147              		.loc 2 1838 3 view .LVU660
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2148              		.loc 2 1838 21 is_stmt 0 view .LVU661
 2149 01a4 2049     		ldr	r1, .L141+4
 2150              	.LVL161:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2151              		.loc 2 1838 21 view .LVU662
 2152 01a6 D1F80817 		ldr	r1, [r1, #1800]
 2153              	.LVL162:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2154              		.loc 2 1838 21 view .LVU663
 2155              	.LBE203:
 2156              	.LBE202:
2348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2157              		.loc 1 2348 9 is_stmt 1 view .LVU664
2348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2158              		.loc 1 2348 12 is_stmt 0 view .LVU665
 2159 01aa 2048     		ldr	r0, .L141+8
 2160 01ac 8242     		cmp	r2, r0
 2161 01ae 07D0     		beq	.L138
2353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2162              		.loc 1 2353 14 is_stmt 1 view .LVU666
2353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2163              		.loc 1 2353 17 is_stmt 0 view .LVU667
 2164 01b0 1F48     		ldr	r0, .L141+12
 2165 01b2 8242     		cmp	r2, r0
 2166 01b4 13D0     		beq	.L139
2358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2167              		.loc 1 2358 14 is_stmt 1 view .LVU668
2358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2168              		.loc 1 2358 17 is_stmt 0 view .LVU669
 2169 01b6 1F48     		ldr	r0, .L141+16
 2170 01b8 8242     		cmp	r2, r0
 2171 01ba 1FD0     		beq	.L140
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2172              		.loc 1 2204 21 view .LVU670
 2173 01bc 0020     		movs	r0, #0
 2174 01be 37E7     		b	.L109
 2175              	.L138:
2350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2176              		.loc 1 2350 11 is_stmt 1 view .LVU671
 2177 01c0 01F0A071 		and	r1, r1, #20971520
 2178              	.LVL163:
 2179              	.LBB204:
 2180              	.LBI204:
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 196


 2181              		.loc 2 1742 22 view .LVU672
 2182              	.LBB205:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2183              		.loc 2 1744 3 view .LVU673
 2184 01c4 00F11040 		add	r0, r0, #-1879048192
 2185 01c8 00F58830 		add	r0, r0, #69632
 2186 01cc D0F80827 		ldr	r2, [r0, #1800]
 2187 01d0 22F0E072 		bic	r2, r2, #29360128
 2188 01d4 1143     		orrs	r1, r1, r2
 2189              	.LVL164:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2190              		.loc 2 1744 3 is_stmt 0 view .LVU674
 2191 01d6 C0F80817 		str	r1, [r0, #1800]
 2192              	.LBE205:
 2193              	.LBE204:
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2194              		.loc 1 2204 21 view .LVU675
 2195 01da 0020     		movs	r0, #0
 2196              	.LBB207:
 2197              	.LBB206:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2198              		.loc 2 1745 1 view .LVU676
 2199 01dc 28E7     		b	.L109
 2200              	.LVL165:
 2201              	.L139:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2202              		.loc 2 1745 1 view .LVU677
 2203              	.LBE206:
 2204              	.LBE207:
2355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2205              		.loc 1 2355 11 is_stmt 1 view .LVU678
 2206 01de 01F44002 		and	r2, r1, #12582912
 2207              	.LVL166:
 2208              	.LBB208:
 2209              	.LBI208:
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2210              		.loc 2 1742 22 view .LVU679
 2211              	.LBB209:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2212              		.loc 2 1744 3 view .LVU680
 2213 01e2 00F10840 		add	r0, r0, #-2013265920
 2214 01e6 00F56040 		add	r0, r0, #57344
 2215 01ea D0F80817 		ldr	r1, [r0, #1800]
 2216              	.LVL167:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2217              		.loc 2 1744 3 is_stmt 0 view .LVU681
 2218 01ee 21F0E071 		bic	r1, r1, #29360128
 2219 01f2 0A43     		orrs	r2, r2, r1
 2220              	.LVL168:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2221              		.loc 2 1744 3 view .LVU682
 2222 01f4 C0F80827 		str	r2, [r0, #1800]
 2223              	.LBE209:
 2224              	.LBE208:
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2225              		.loc 1 2204 21 view .LVU683
 2226 01f8 0020     		movs	r0, #0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 197


 2227              	.LBB211:
 2228              	.LBB210:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2229              		.loc 2 1745 1 view .LVU684
 2230 01fa 19E7     		b	.L109
 2231              	.LVL169:
 2232              	.L140:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2233              		.loc 2 1745 1 view .LVU685
 2234              	.LBE210:
 2235              	.LBE211:
2360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2236              		.loc 1 2360 11 is_stmt 1 view .LVU686
 2237 01fc 01F0C072 		and	r2, r1, #25165824
 2238              	.LVL170:
 2239              	.LBB212:
 2240              	.LBI212:
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2241              		.loc 2 1742 22 view .LVU687
 2242              	.LBB213:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2243              		.loc 2 1744 3 view .LVU688
 2244 0200 00F10C40 		add	r0, r0, #-1946157056
 2245 0204 00F58030 		add	r0, r0, #65536
 2246 0208 D0F80817 		ldr	r1, [r0, #1800]
 2247              	.LVL171:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2248              		.loc 2 1744 3 is_stmt 0 view .LVU689
 2249 020c 21F0E071 		bic	r1, r1, #29360128
 2250 0210 0A43     		orrs	r2, r2, r1
 2251              	.LVL172:
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2252              		.loc 2 1744 3 view .LVU690
 2253 0212 C0F80827 		str	r2, [r0, #1800]
 2254              	.LBE213:
 2255              	.LBE212:
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2256              		.loc 1 2204 21 view .LVU691
 2257 0216 0020     		movs	r0, #0
 2258              	.LBB215:
 2259              	.LBB214:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2260              		.loc 2 1745 1 view .LVU692
 2261 0218 0AE7     		b	.L109
 2262              	.LVL173:
 2263              	.L129:
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2264              		.loc 2 1745 1 view .LVU693
 2265              	.LBE214:
 2266              	.LBE215:
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2267              		.loc 1 2204 21 view .LVU694
 2268 021a 0020     		movs	r0, #0
 2269 021c 08E7     		b	.L109
 2270              	.LVL174:
 2271              	.L125:
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 198


 2272              		.loc 1 2225 3 view .LVU695
 2273 021e 0220     		movs	r0, #2
 2274              	.LVL175:
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2275              		.loc 1 2225 3 view .LVU696
 2276 0220 09E7     		b	.L107
 2277              	.L142:
 2278 0222 00BF     		.align	2
 2279              	.L141:
 2280 0224 04000080 		.word	-2147483644
 2281 0228 00200140 		.word	1073815552
 2282 022c 001000B0 		.word	-1342173184
 2283 0230 004000B8 		.word	-1207943168
 2284 0234 002000B4 		.word	-1275060224
 2285 0238 00000000 		.word	SystemCoreClock
 2286 023c 632D3E05 		.word	87960931
 2287              		.cfi_endproc
 2288              	.LFE986:
 2290              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2291              		.align	1
 2292              		.global	HAL_ADC_AnalogWDGConfig
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2297              	HAL_ADC_AnalogWDGConfig:
 2298              	.LVL176:
 2299              	.LFB987:
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2300              		.loc 1 2410 1 is_stmt 1 view -0
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 0
 2303              		@ frame_needed = 0, uses_anonymous_args = 0
 2304              		@ link register save eliminated.
2411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 2305              		.loc 1 2411 3 view .LVU698
2412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
 2306              		.loc 1 2412 3 view .LVU699
2413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2307              		.loc 1 2413 3 view .LVU700
2416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
 2308              		.loc 1 2416 3 view .LVU701
2417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
 2309              		.loc 1 2417 3 view .LVU702
2418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
 2310              		.loc 1 2418 3 view .LVU703
2419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2311              		.loc 1 2419 3 view .LVU704
2421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2312              		.loc 1 2421 3 view .LVU705
2423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2313              		.loc 1 2423 5 view .LVU706
2427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2314              		.loc 1 2427 3 view .LVU707
2438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
 2315              		.loc 1 2438 5 view .LVU708
2439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2316              		.loc 1 2439 5 view .LVU709
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 199


2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2317              		.loc 1 2442 3 view .LVU710
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2318              		.loc 1 2442 3 view .LVU711
 2319 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2320 0004 012B     		cmp	r3, #1
 2321 0006 00F00F81 		beq	.L170
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2322              		.loc 1 2410 1 is_stmt 0 discriminator 2 view .LVU712
 2323 000a 70B4     		push	{r4, r5, r6}
 2324              	.LCFI15:
 2325              		.cfi_def_cfa_offset 12
 2326              		.cfi_offset 4, -12
 2327              		.cfi_offset 5, -8
 2328              		.cfi_offset 6, -4
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2329              		.loc 1 2442 3 is_stmt 1 discriminator 2 view .LVU713
 2330 000c 0123     		movs	r3, #1
 2331 000e 80F85430 		strb	r3, [r0, #84]
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2332              		.loc 1 2442 3 discriminator 2 view .LVU714
2448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2333              		.loc 1 2448 3 discriminator 2 view .LVU715
2448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2334              		.loc 1 2448 7 is_stmt 0 discriminator 2 view .LVU716
 2335 0012 0368     		ldr	r3, [r0]
 2336              	.LVL177:
 2337              	.LBB256:
 2338              	.LBI256:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2339              		.loc 2 4372 26 is_stmt 1 discriminator 2 view .LVU717
 2340              	.LBB257:
 2341              		.loc 2 4374 3 discriminator 2 view .LVU718
 2342              		.loc 2 4374 12 is_stmt 0 discriminator 2 view .LVU719
 2343 0014 9A68     		ldr	r2, [r3, #8]
 2344              		.loc 2 4374 74 discriminator 2 view .LVU720
 2345 0016 12F0040F 		tst	r2, #4
 2346 001a 40F0A380 		bne	.L145
 2347              	.LVL178:
 2348              		.loc 2 4374 74 discriminator 2 view .LVU721
 2349              	.LBE257:
 2350              	.LBE256:
2451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2351              		.loc 1 2451 5 is_stmt 1 view .LVU722
2451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2352              		.loc 1 2451 25 is_stmt 0 view .LVU723
 2353 001e 0A68     		ldr	r2, [r1]
2451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2354              		.loc 1 2451 8 view .LVU724
 2355 0020 824C     		ldr	r4, .L186
 2356 0022 A242     		cmp	r2, r4
 2357 0024 19D0     		beq	.L177
2494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2358              		.loc 1 2494 7 is_stmt 1 view .LVU725
2494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2359              		.loc 1 2494 31 is_stmt 0 view .LVU726
 2360 0026 4C68     		ldr	r4, [r1, #4]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 200


2494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2361              		.loc 1 2494 7 view .LVU727
 2362 0028 B4F5000F 		cmp	r4, #8388608
 2363 002c 70D0     		beq	.L151
 2364 002e B4F5400F 		cmp	r4, #12582912
 2365 0032 40F0B680 		bne	.L152
2499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2366              		.loc 1 2499 11 is_stmt 1 view .LVU728
2499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2367              		.loc 1 2499 14 is_stmt 0 view .LVU729
 2368 0036 7E4C     		ldr	r4, .L186+4
 2369 0038 A242     		cmp	r2, r4
 2370 003a 47D0     		beq	.L178
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2371              		.loc 1 2505 13 is_stmt 1 view .LVU730
 2372 003c 8A68     		ldr	r2, [r1, #8]
 2373 003e C2F31104 		ubfx	r4, r2, #0, #18
 2374 0042 002C     		cmp	r4, #0
 2375 0044 5AD1     		bne	.L158
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2376              		.loc 1 2505 13 is_stmt 0 discriminator 1 view .LVU731
 2377 0046 C2F38462 		ubfx	r2, r2, #26, #5
 2378 004a 0124     		movs	r4, #1
 2379 004c 9440     		lsls	r4, r4, r2
 2380              	.L159:
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2381              		.loc 1 2505 13 discriminator 4 view .LVU732
 2382 004e D3F8A420 		ldr	r2, [r3, #164]
 2383 0052 2243     		orrs	r2, r2, r4
 2384 0054 C3F8A420 		str	r2, [r3, #164]
 2385 0058 70E0     		b	.L157
 2386              	.L177:
2456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2387              		.loc 1 2456 7 is_stmt 1 view .LVU733
2456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2388              		.loc 1 2456 31 is_stmt 0 view .LVU734
 2389 005a 4A68     		ldr	r2, [r1, #4]
2456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2390              		.loc 1 2456 7 view .LVU735
 2391 005c B2F5000F 		cmp	r2, #8388608
 2392 0060 1ED0     		beq	.L147
 2393 0062 B2F5400F 		cmp	r2, #12582912
 2394 0066 24D1     		bne	.L148
2459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 2395              		.loc 1 2459 11 is_stmt 1 view .LVU736
2460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2396              		.loc 1 2460 43 is_stmt 0 view .LVU737
 2397 0068 8C68     		ldr	r4, [r1, #8]
 2398              	.LVL179:
 2399              	.LBB258:
 2400              	.LBI258:
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2401              		.loc 2 3615 22 is_stmt 1 view .LVU738
 2402              	.LBB259:
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2403              		.loc 2 3621 3 view .LVU739
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 201


 2404              		.loc 2 3623 3 view .LVU740
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2405              		.loc 2 3625 5 view .LVU741
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2406              		.loc 2 3632 3 view .LVU742
 2407 006a DA68     		ldr	r2, [r3, #12]
 2408 006c 22F0F942 		bic	r2, r2, #2088763392
 2409 0070 22F48002 		bic	r2, r2, #4194304
 2410 0074 04F0F844 		and	r4, r4, #2080374784
 2411              	.LVL180:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2412              		.loc 2 3632 3 is_stmt 0 view .LVU743
 2413 0078 44F44004 		orr	r4, r4, #12582912
 2414 007c 2243     		orrs	r2, r2, r4
 2415 007e DA60     		str	r2, [r3, #12]
 2416              	.LVL181:
 2417              	.L149:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2418              		.loc 2 3632 3 view .LVU744
 2419              	.LBE259:
 2420              	.LBE258:
2473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2421              		.loc 1 2473 7 is_stmt 1 view .LVU745
 2422 0080 836D     		ldr	r3, [r0, #88]
 2423 0082 23F48033 		bic	r3, r3, #65536
 2424 0086 8365     		str	r3, [r0, #88]
2479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2425              		.loc 1 2479 7 view .LVU746
 2426 0088 0368     		ldr	r3, [r0]
 2427              	.LVL182:
 2428              	.LBB260:
 2429              	.LBI260:
4375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
4382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
4384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
4386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         all oversampling increased data width (for devices
4392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with feature oversampling).
4393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
4398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 202


4400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 12 bits.
4405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
4413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 10 bits.
4420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
4428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 8 bits.
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
4439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
4443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 6 bits.
4450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 203


4457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
4458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC ready.
4472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
4480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer
4487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
4488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
4489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
4490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
4491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Functions requiring wait for CCRDY flag are:
4492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
4493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks()
4494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChannels()
4495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChAdd()
4496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChRem()
4497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerScanDirection()
4498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerConfigurable()
4499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         has been changed.
4502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(ADC_TypeDef *ADCx)
4507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
4509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 204


4514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
4518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
4525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
4529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
4535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
4540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
4551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
4553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
4562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 205


4571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
4573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
4584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
4590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
4591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
4595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
4597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC ready.
4601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
4605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
4609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
4611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
4615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
4616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
4620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
4622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
4626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
4627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 206


4628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
4631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
4633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
4637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
4638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
4642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
4644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
4648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
4649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
4653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
4655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
4659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
4660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
4664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
4666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
4670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
4671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 2430              		.loc 2 4674 22 view .LVU747
 2431              	.LBB261:
4675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 2432              		.loc 2 4676 3 view .LVU748
 2433 008a 8022     		movs	r2, #128
 2434 008c 1A60     		str	r2, [r3]
 2435              	.LVL183:
 2436              		.loc 2 4676 3 is_stmt 0 view .LVU749
 2437              	.LBE261:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 207


 2438              	.LBE260:
2482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2439              		.loc 1 2482 7 is_stmt 1 view .LVU750
2482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2440              		.loc 1 2482 27 is_stmt 0 view .LVU751
 2441 008e 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
2482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2442              		.loc 1 2482 10 view .LVU752
 2443 0090 012B     		cmp	r3, #1
 2444 0092 15D0     		beq	.L179
2488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2445              		.loc 1 2488 9 is_stmt 1 view .LVU753
 2446 0094 0268     		ldr	r2, [r0]
 2447              	.LVL184:
 2448              	.LBB262:
 2449              	.LBI262:
4677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
4681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
4682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
4686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
4688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
4692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
4693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
4697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
4699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
4703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
4704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
4708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
4710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
4717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 208


4718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC ready.
4722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
4723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
4727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
4729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
4733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_EnableIT_CCRDY
4734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
4738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
4740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
4744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
4745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
4749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
4751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
4755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
4756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
4760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
4762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
4766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
4767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
4771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
4773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 209


4775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
4777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
4778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
4782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
4784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
4788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
4789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
4793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
4795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
4799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
4800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
4804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
4806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
4810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
4811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
4815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
4817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
4821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
4822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
4826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
4828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 210


4832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
4833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
4837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
4839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
4843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_DisableIT_CCRDY
4844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
4848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
4850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
4854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
4855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
4859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
4861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
4865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
4866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
4870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
4872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
4876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
4877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
4881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
4883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
4887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
4888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 211


4889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
4892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
4894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
4898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
4899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 2450              		.loc 2 4902 22 view .LVU754
 2451              	.LBB263:
4903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 2452              		.loc 2 4904 3 view .LVU755
 2453 0096 5368     		ldr	r3, [r2, #4]
 2454 0098 23F08003 		bic	r3, r3, #128
 2455 009c 5360     		str	r3, [r2, #4]
4905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2456              		.loc 2 4905 1 is_stmt 0 view .LVU756
 2457 009e 61E0     		b	.L145
 2458              	.LVL185:
 2459              	.L147:
 2460              		.loc 2 4905 1 view .LVU757
 2461              	.LBE263:
 2462              	.LBE262:
2464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2463              		.loc 1 2464 11 is_stmt 1 view .LVU758
 2464              	.LBB264:
 2465              	.LBI264:
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2466              		.loc 2 3615 22 view .LVU759
 2467              	.LBB265:
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2468              		.loc 2 3621 3 view .LVU760
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 2469              		.loc 2 3623 3 view .LVU761
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2470              		.loc 2 3625 5 view .LVU762
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2471              		.loc 2 3632 3 view .LVU763
 2472 00a0 DA68     		ldr	r2, [r3, #12]
 2473 00a2 22F0F942 		bic	r2, r2, #2088763392
 2474 00a6 22F48002 		bic	r2, r2, #4194304
 2475 00aa 42F40002 		orr	r2, r2, #8388608
 2476 00ae DA60     		str	r2, [r3, #12]
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2477              		.loc 2 3635 1 is_stmt 0 view .LVU764
 2478 00b0 E6E7     		b	.L149
 2479              	.LVL186:
 2480              	.L148:
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2481              		.loc 2 3635 1 view .LVU765
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 212


 2482              	.LBE265:
 2483              	.LBE264:
2468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2484              		.loc 1 2468 11 is_stmt 1 view .LVU766
 2485              	.LBB266:
 2486              	.LBI266:
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2487              		.loc 2 3615 22 view .LVU767
 2488              	.LBB267:
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2489              		.loc 2 3621 3 view .LVU768
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 2490              		.loc 2 3623 3 view .LVU769
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2491              		.loc 2 3625 5 view .LVU770
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2492              		.loc 2 3632 3 view .LVU771
 2493 00b2 DA68     		ldr	r2, [r3, #12]
 2494 00b4 22F0F942 		bic	r2, r2, #2088763392
 2495 00b8 22F48002 		bic	r2, r2, #4194304
 2496 00bc DA60     		str	r2, [r3, #12]
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2497              		.loc 2 3635 1 is_stmt 0 view .LVU772
 2498 00be DFE7     		b	.L149
 2499              	.LVL187:
 2500              	.L179:
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2501              		.loc 2 3635 1 view .LVU773
 2502              	.LBE267:
 2503              	.LBE266:
2484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2504              		.loc 1 2484 9 is_stmt 1 view .LVU774
 2505 00c0 0268     		ldr	r2, [r0]
 2506              	.LVL188:
 2507              	.LBB268:
 2508              	.LBI268:
4792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2509              		.loc 2 4792 22 view .LVU775
 2510              	.LBB269:
4794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2511              		.loc 2 4794 3 view .LVU776
 2512 00c2 5368     		ldr	r3, [r2, #4]
 2513 00c4 43F08003 		orr	r3, r3, #128
 2514 00c8 5360     		str	r3, [r2, #4]
4795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2515              		.loc 2 4795 1 is_stmt 0 view .LVU777
 2516 00ca 4BE0     		b	.L145
 2517              	.LVL189:
 2518              	.L178:
4795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2519              		.loc 2 4795 1 view .LVU778
 2520              	.LBE269:
 2521              	.LBE268:
2501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2522              		.loc 1 2501 13 is_stmt 1 view .LVU779
 2523 00cc 8A68     		ldr	r2, [r1, #8]
 2524 00ce C2F31104 		ubfx	r4, r2, #0, #18
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 213


 2525 00d2 4CB9     		cbnz	r4, .L154
2501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2526              		.loc 1 2501 13 is_stmt 0 discriminator 1 view .LVU780
 2527 00d4 C2F38462 		ubfx	r2, r2, #26, #5
 2528 00d8 0124     		movs	r4, #1
 2529 00da 9440     		lsls	r4, r4, r2
 2530              	.L155:
2501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2531              		.loc 1 2501 13 discriminator 4 view .LVU781
 2532 00dc D3F8A020 		ldr	r2, [r3, #160]
 2533 00e0 2243     		orrs	r2, r2, r4
 2534 00e2 C3F8A020 		str	r2, [r3, #160]
 2535 00e6 29E0     		b	.L157
 2536              	.L154:
 2537              	.LVL190:
 2538              	.LBB270:
 2539              	.LBI270:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2540              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU782
 2541              	.LBB271:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2542              		.loc 3 1050 3 discriminator 2 view .LVU783
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2543              		.loc 3 1055 4 discriminator 2 view .LVU784
 2544              		.syntax unified
 2545              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2546 00e8 92FAA2F2 		rbit r2, r2
 2547              	@ 0 "" 2
 2548              	.LVL191:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2549              		.loc 3 1068 3 discriminator 2 view .LVU785
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2550              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU786
 2551              		.thumb
 2552              		.syntax unified
 2553              	.LBE271:
 2554              	.LBE270:
 2555              	.LBB272:
 2556              	.LBI272:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2557              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU787
 2558              	.LBB273:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2559              		.loc 3 1089 3 discriminator 2 view .LVU788
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2560              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU789
 2561 00ec 22B1     		cbz	r2, .L171
 2562              		.loc 3 1093 3 is_stmt 1 view .LVU790
 2563              		.loc 3 1093 10 is_stmt 0 view .LVU791
 2564 00ee B2FA82F2 		clz	r2, r2
 2565              	.LVL192:
 2566              	.L156:
 2567              		.loc 3 1093 10 view .LVU792
 2568              	.LBE273:
 2569              	.LBE272:
2501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2570              		.loc 1 2501 13 view .LVU793
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 214


 2571 00f2 0124     		movs	r4, #1
 2572 00f4 9440     		lsls	r4, r4, r2
 2573 00f6 F1E7     		b	.L155
 2574              	.LVL193:
 2575              	.L171:
 2576              	.LBB275:
 2577              	.LBB274:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2578              		.loc 3 1091 12 view .LVU794
 2579 00f8 2022     		movs	r2, #32
 2580              	.LVL194:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2581              		.loc 3 1091 12 view .LVU795
 2582 00fa FAE7     		b	.L156
 2583              	.L158:
 2584              	.LVL195:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2585              		.loc 3 1091 12 view .LVU796
 2586              	.LBE274:
 2587              	.LBE275:
 2588              	.LBB276:
 2589              	.LBI276:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2590              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU797
 2591              	.LBB277:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2592              		.loc 3 1050 3 discriminator 2 view .LVU798
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2593              		.loc 3 1055 4 discriminator 2 view .LVU799
 2594              		.syntax unified
 2595              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2596 00fc 92FAA2F2 		rbit r2, r2
 2597              	@ 0 "" 2
 2598              	.LVL196:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2599              		.loc 3 1068 3 discriminator 2 view .LVU800
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2600              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU801
 2601              		.thumb
 2602              		.syntax unified
 2603              	.LBE277:
 2604              	.LBE276:
 2605              	.LBB278:
 2606              	.LBI278:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2607              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU802
 2608              	.LBB279:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2609              		.loc 3 1089 3 discriminator 2 view .LVU803
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2610              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU804
 2611 0100 22B1     		cbz	r2, .L172
 2612              		.loc 3 1093 3 is_stmt 1 view .LVU805
 2613              		.loc 3 1093 10 is_stmt 0 view .LVU806
 2614 0102 B2FA82F2 		clz	r2, r2
 2615              	.LVL197:
 2616              	.L160:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 215


 2617              		.loc 3 1093 10 view .LVU807
 2618              	.LBE279:
 2619              	.LBE278:
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2620              		.loc 1 2505 13 view .LVU808
 2621 0106 0124     		movs	r4, #1
 2622 0108 9440     		lsls	r4, r4, r2
 2623 010a A0E7     		b	.L159
 2624              	.LVL198:
 2625              	.L172:
 2626              	.LBB281:
 2627              	.LBB280:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2628              		.loc 3 1091 12 view .LVU809
 2629 010c 2022     		movs	r2, #32
 2630              	.LVL199:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2631              		.loc 3 1091 12 view .LVU810
 2632 010e FAE7     		b	.L160
 2633              	.L151:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2634              		.loc 3 1091 12 view .LVU811
 2635              	.LBE280:
 2636              	.LBE281:
2510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2637              		.loc 1 2510 11 is_stmt 1 view .LVU812
 2638              	.LVL200:
 2639              	.LBB282:
 2640              	.LBI282:
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2641              		.loc 2 3615 22 view .LVU813
 2642              	.LBB283:
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2643              		.loc 2 3621 3 view .LVU814
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 2644              		.loc 2 3623 3 view .LVU815
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 2645              		.loc 2 3623 6 is_stmt 0 view .LVU816
 2646 0110 464C     		ldr	r4, .L186
 2647 0112 A242     		cmp	r2, r4
 2648 0114 43D0     		beq	.L180
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2649              		.loc 2 3629 5 is_stmt 1 view .LVU817
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2650              		.loc 2 3629 12 is_stmt 0 view .LVU818
 2651 0116 A033     		adds	r3, r3, #160
 2652              	.LVL201:
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2653              		.loc 2 3629 12 view .LVU819
 2654 0118 540D     		lsrs	r4, r2, #21
 2655 011a A400     		lsls	r4, r4, #2
 2656 011c 04F00404 		and	r4, r4, #4
 2657 0120 2344     		add	r3, r3, r4
 2658              	.LVL202:
 2659              	.L162:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2660              		.loc 2 3632 3 is_stmt 1 view .LVU820
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 216


 2661 0122 1C68     		ldr	r4, [r3]
 2662 0124 22F00345 		bic	r5, r2, #-2097152000
 2663 0128 25F47015 		bic	r5, r5, #3932160
 2664 012c 24EA0504 		bic	r4, r4, r5
 2665 0130 22F07F42 		bic	r2, r2, #-16777216
 2666              	.LVL203:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2667              		.loc 2 3632 3 is_stmt 0 view .LVU821
 2668 0134 22F4F802 		bic	r2, r2, #8126464
 2669 0138 2243     		orrs	r2, r2, r4
 2670 013a 1A60     		str	r2, [r3]
 2671              	.LVL204:
 2672              	.L157:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2673              		.loc 2 3632 3 view .LVU822
 2674              	.LBE283:
 2675              	.LBE282:
2518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2676              		.loc 1 2518 7 is_stmt 1 view .LVU823
2518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2677              		.loc 1 2518 27 is_stmt 0 view .LVU824
 2678 013c 0A68     		ldr	r2, [r1]
2518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2679              		.loc 1 2518 10 view .LVU825
 2680 013e 3C4B     		ldr	r3, .L186+4
 2681 0140 9A42     		cmp	r2, r3
 2682 0142 42D0     		beq	.L181
2543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2683              		.loc 1 2543 9 is_stmt 1 view .LVU826
 2684 0144 836D     		ldr	r3, [r0, #88]
 2685 0146 23F48023 		bic	r3, r3, #262144
 2686 014a 8365     		str	r3, [r0, #88]
2549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2687              		.loc 1 2549 9 view .LVU827
 2688 014c 0368     		ldr	r3, [r0]
 2689              	.LVL205:
 2690              	.LBB285:
 2691              	.LBI285:
4696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2692              		.loc 2 4696 22 view .LVU828
 2693              	.LBB286:
4698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2694              		.loc 2 4698 3 view .LVU829
 2695 014e 4FF40072 		mov	r2, #512
 2696 0152 1A60     		str	r2, [r3]
 2697              	.LVL206:
4698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2698              		.loc 2 4698 3 is_stmt 0 view .LVU830
 2699              	.LBE286:
 2700              	.LBE285:
2552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2701              		.loc 1 2552 9 is_stmt 1 view .LVU831
2552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2702              		.loc 1 2552 29 is_stmt 0 view .LVU832
 2703 0154 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
2552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2704              		.loc 1 2552 12 view .LVU833
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 217


 2705 0156 012B     		cmp	r3, #1
 2706 0158 4ED0     		beq	.L182
2558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2707              		.loc 1 2558 11 is_stmt 1 view .LVU834
 2708 015a 0268     		ldr	r2, [r0]
 2709              	.LVL207:
 2710              	.LBB287:
 2711              	.LBI287:
4906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
4909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
4910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
4914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
4916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
4920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
4921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 2712              		.loc 2 4924 22 view .LVU835
 2713              	.LBB288:
4925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 2714              		.loc 2 4926 3 view .LVU836
 2715 015c 5368     		ldr	r3, [r2, #4]
 2716 015e 23F40073 		bic	r3, r3, #512
 2717 0162 5360     		str	r3, [r2, #4]
 2718              	.LVL208:
 2719              	.L145:
 2720              		.loc 2 4926 3 is_stmt 0 view .LVU837
 2721              	.LBE288:
 2722              	.LBE287:
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2723              		.loc 1 2566 3 is_stmt 1 view .LVU838
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2724              		.loc 1 2566 23 is_stmt 0 view .LVU839
 2725 0164 0A68     		ldr	r2, [r1]
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2726              		.loc 1 2566 6 view .LVU840
 2727 0166 314B     		ldr	r3, .L186
 2728 0168 9A42     		cmp	r2, r3
 2729 016a 4BD0     		beq	.L183
2580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
 2730              		.loc 1 2580 5 is_stmt 1 view .LVU841
2580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
 2731              		.loc 1 2580 36 is_stmt 0 view .LVU842
 2732 016c 0D69     		ldr	r5, [r1, #16]
 2733              	.LVL209:
2581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 218


 2734              		.loc 1 2581 5 is_stmt 1 view .LVU843
2581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2735              		.loc 1 2581 36 is_stmt 0 view .LVU844
 2736 016e 4C69     		ldr	r4, [r1, #20]
 2737              	.LVL210:
 2738              	.L169:
2585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
 2739              		.loc 1 2585 3 is_stmt 1 view .LVU845
 2740 0170 0168     		ldr	r1, [r0]
 2741              	.LVL211:
 2742              	.LBB289:
 2743              	.LBI289:
3831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
 2744              		.loc 2 3831 22 view .LVU846
 2745              	.LBB290:
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2746              		.loc 2 3839 3 view .LVU847
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2747              		.loc 2 3839 25 is_stmt 0 view .LVU848
 2748 0172 2031     		adds	r1, r1, #32
 2749              	.LVL212:
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2750              		.loc 2 3839 25 view .LVU849
 2751 0174 C2F3015C 		ubfx	ip, r2, #20, #2
 2752 0178 C2F34052 		ubfx	r2, r2, #21, #1
 2753              	.LVL213:
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2754              		.loc 2 3839 25 view .LVU850
 2755 017c 6244     		add	r2, r2, ip
 2756              	.LVL214:
3841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 2757              		.loc 2 3841 3 is_stmt 1 view .LVU851
 2758 017e 51F82230 		ldr	r3, [r1, r2, lsl #2]
 2759 0182 03F0F023 		and	r3, r3, #-268374016
 2760 0186 44EA054C 		orr	ip, r4, r5, lsl #16
 2761 018a 43EA0C03 		orr	r3, r3, ip
 2762 018e 41F82230 		str	r3, [r1, r2, lsl #2]
 2763              	.LVL215:
3841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 2764              		.loc 2 3841 3 is_stmt 0 view .LVU852
 2765              	.LBE290:
 2766              	.LBE289:
2588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2767              		.loc 1 2588 3 is_stmt 1 view .LVU853
2588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2768              		.loc 1 2588 3 view .LVU854
 2769 0192 0023     		movs	r3, #0
 2770 0194 80F85430 		strb	r3, [r0, #84]
2588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2771              		.loc 1 2588 3 view .LVU855
2590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2772              		.loc 1 2590 3 view .LVU856
2590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2773              		.loc 1 2590 10 is_stmt 0 view .LVU857
 2774 0198 1846     		mov	r0, r3
 2775              	.LVL216:
2591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 219


 2776              		.loc 1 2591 1 view .LVU858
 2777 019a 70BC     		pop	{r4, r5, r6}
 2778              	.LCFI16:
 2779              		.cfi_remember_state
 2780              		.cfi_restore 6
 2781              		.cfi_restore 5
 2782              		.cfi_restore 4
 2783              		.cfi_def_cfa_offset 0
 2784              	.LVL217:
2591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2785              		.loc 1 2591 1 view .LVU859
 2786 019c 7047     		bx	lr
 2787              	.LVL218:
 2788              	.L180:
 2789              	.LCFI17:
 2790              		.cfi_restore_state
 2791              	.LBB291:
 2792              	.LBB284:
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2793              		.loc 2 3625 5 is_stmt 1 view .LVU860
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2794              		.loc 2 3625 10 is_stmt 0 view .LVU861
 2795 019e 0C33     		adds	r3, r3, #12
 2796              	.LVL219:
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2797              		.loc 2 3625 10 view .LVU862
 2798 01a0 BFE7     		b	.L162
 2799              	.LVL220:
 2800              	.L152:
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2801              		.loc 2 3625 10 view .LVU863
 2802              	.LBE284:
 2803              	.LBE291:
2514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2804              		.loc 1 2514 11 is_stmt 1 view .LVU864
 2805              	.LBB292:
 2806              	.LBI292:
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2807              		.loc 2 3615 22 view .LVU865
 2808              	.LBB293:
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2809              		.loc 2 3621 3 view .LVU866
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 2810              		.loc 2 3623 3 view .LVU867
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 2811              		.loc 2 3623 6 is_stmt 0 view .LVU868
 2812 01a2 224C     		ldr	r4, .L186
 2813 01a4 A242     		cmp	r2, r4
 2814 01a6 0ED0     		beq	.L184
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2815              		.loc 2 3629 5 is_stmt 1 view .LVU869
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2816              		.loc 2 3629 12 is_stmt 0 view .LVU870
 2817 01a8 A033     		adds	r3, r3, #160
 2818              	.LVL221:
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2819              		.loc 2 3629 12 view .LVU871
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 220


 2820 01aa 540D     		lsrs	r4, r2, #21
 2821 01ac A400     		lsls	r4, r4, #2
 2822 01ae 04F00404 		and	r4, r4, #4
 2823 01b2 2344     		add	r3, r3, r4
 2824              	.LVL222:
 2825              	.L164:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2826              		.loc 2 3632 3 is_stmt 1 view .LVU872
 2827 01b4 1C68     		ldr	r4, [r3]
 2828 01b6 22F00342 		bic	r2, r2, #-2097152000
 2829              	.LVL223:
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2830              		.loc 2 3632 3 is_stmt 0 view .LVU873
 2831 01ba 22F47012 		bic	r2, r2, #3932160
 2832 01be 24EA0202 		bic	r2, r4, r2
 2833 01c2 1A60     		str	r2, [r3]
 2834              	.LVL224:
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2835              		.loc 2 3635 1 view .LVU874
 2836 01c4 BAE7     		b	.L157
 2837              	.LVL225:
 2838              	.L184:
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2839              		.loc 2 3625 5 is_stmt 1 view .LVU875
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2840              		.loc 2 3625 10 is_stmt 0 view .LVU876
 2841 01c6 0C33     		adds	r3, r3, #12
 2842              	.LVL226:
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2843              		.loc 2 3625 10 view .LVU877
 2844 01c8 F4E7     		b	.L164
 2845              	.LVL227:
 2846              	.L181:
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 2847              		.loc 2 3625 10 view .LVU878
 2848              	.LBE293:
 2849              	.LBE292:
2521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2850              		.loc 1 2521 9 is_stmt 1 view .LVU879
 2851 01ca 836D     		ldr	r3, [r0, #88]
 2852 01cc 23F40033 		bic	r3, r3, #131072
 2853 01d0 8365     		str	r3, [r0, #88]
2527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2854              		.loc 1 2527 9 view .LVU880
 2855 01d2 0368     		ldr	r3, [r0]
 2856              	.LVL228:
 2857              	.LBB294:
 2858              	.LBI294:
4685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2859              		.loc 2 4685 22 view .LVU881
 2860              	.LBB295:
4687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2861              		.loc 2 4687 3 view .LVU882
 2862 01d4 4FF48072 		mov	r2, #256
 2863 01d8 1A60     		str	r2, [r3]
 2864              	.LVL229:
4687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 221


 2865              		.loc 2 4687 3 is_stmt 0 view .LVU883
 2866              	.LBE295:
 2867              	.LBE294:
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2868              		.loc 1 2530 9 is_stmt 1 view .LVU884
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2869              		.loc 1 2530 29 is_stmt 0 view .LVU885
 2870 01da 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2871              		.loc 1 2530 12 view .LVU886
 2872 01dc 012B     		cmp	r3, #1
 2873 01de 05D0     		beq	.L185
2536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2874              		.loc 1 2536 11 is_stmt 1 view .LVU887
 2875 01e0 0268     		ldr	r2, [r0]
 2876              	.LVL230:
 2877              	.LBB296:
 2878              	.LBI296:
4913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2879              		.loc 2 4913 22 view .LVU888
 2880              	.LBB297:
4915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2881              		.loc 2 4915 3 view .LVU889
 2882 01e2 5368     		ldr	r3, [r2, #4]
 2883 01e4 23F48073 		bic	r3, r3, #256
 2884 01e8 5360     		str	r3, [r2, #4]
4916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2885              		.loc 2 4916 1 is_stmt 0 view .LVU890
 2886 01ea BBE7     		b	.L145
 2887              	.LVL231:
 2888              	.L185:
4916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2889              		.loc 2 4916 1 view .LVU891
 2890              	.LBE297:
 2891              	.LBE296:
2532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2892              		.loc 1 2532 11 is_stmt 1 view .LVU892
 2893 01ec 0268     		ldr	r2, [r0]
 2894              	.LVL232:
 2895              	.LBB298:
 2896              	.LBI298:
4803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2897              		.loc 2 4803 22 view .LVU893
 2898              	.LBB299:
4805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2899              		.loc 2 4805 3 view .LVU894
 2900 01ee 5368     		ldr	r3, [r2, #4]
 2901 01f0 43F48073 		orr	r3, r3, #256
 2902 01f4 5360     		str	r3, [r2, #4]
4806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2903              		.loc 2 4806 1 is_stmt 0 view .LVU895
 2904 01f6 B5E7     		b	.L145
 2905              	.LVL233:
 2906              	.L182:
4806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2907              		.loc 2 4806 1 view .LVU896
 2908              	.LBE299:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 222


 2909              	.LBE298:
2554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2910              		.loc 1 2554 11 is_stmt 1 view .LVU897
 2911 01f8 0268     		ldr	r2, [r0]
 2912              	.LVL234:
 2913              	.LBB300:
 2914              	.LBI300:
4814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2915              		.loc 2 4814 22 view .LVU898
 2916              	.LBB301:
4816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2917              		.loc 2 4816 3 view .LVU899
 2918 01fa 5368     		ldr	r3, [r2, #4]
 2919 01fc 43F40073 		orr	r3, r3, #512
 2920 0200 5360     		str	r3, [r2, #4]
4817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2921              		.loc 2 4817 1 is_stmt 0 view .LVU900
 2922 0202 AFE7     		b	.L145
 2923              	.LVL235:
 2924              	.L183:
4817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2925              		.loc 2 4817 1 view .LVU901
 2926              	.LBE301:
 2927              	.LBE300:
2571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 2928              		.loc 1 2571 5 is_stmt 1 view .LVU902
2571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 2929              		.loc 1 2571 38 is_stmt 0 view .LVU903
 2930 0204 0D69     		ldr	r5, [r1, #16]
 2931 0206 0668     		ldr	r6, [r0]
 2932 0208 F468     		ldr	r4, [r6, #12]
 2933 020a C4F3C10C 		ubfx	ip, r4, #3, #2
 2934 020e 4FEA4C0C 		lsl	ip, ip, #1
2571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 2935              		.loc 1 2571 36 view .LVU904
 2936 0212 05FA0CF5 		lsl	r5, r5, ip
 2937              	.LVL236:
2572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2938              		.loc 1 2572 5 is_stmt 1 view .LVU905
2572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2939              		.loc 1 2572 38 is_stmt 0 view .LVU906
 2940 0216 4C69     		ldr	r4, [r1, #20]
 2941 0218 F368     		ldr	r3, [r6, #12]
 2942 021a C3F3C10C 		ubfx	ip, r3, #3, #2
 2943 021e 4FEA4C0C 		lsl	ip, ip, #1
2572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2944              		.loc 1 2572 36 view .LVU907
 2945 0222 04FA0CF4 		lsl	r4, r4, ip
 2946              	.LVL237:
2572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2947              		.loc 1 2572 36 view .LVU908
 2948 0226 A3E7     		b	.L169
 2949              	.LVL238:
 2950              	.L170:
 2951              	.LCFI18:
 2952              		.cfi_def_cfa_offset 0
 2953              		.cfi_restore 4
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 223


 2954              		.cfi_restore 5
 2955              		.cfi_restore 6
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2956              		.loc 1 2442 3 view .LVU909
 2957 0228 0220     		movs	r0, #2
 2958              	.LVL239:
2591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2959              		.loc 1 2591 1 view .LVU910
 2960 022a 7047     		bx	lr
 2961              	.L187:
 2962              		.align	2
 2963              	.L186:
 2964 022c 0000C07C 		.word	2092957696
 2965 0230 FFFF1300 		.word	1310719
 2966              		.cfi_endproc
 2967              	.LFE987:
 2969              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2970              		.align	1
 2971              		.global	HAL_ADC_GetState
 2972              		.syntax unified
 2973              		.thumb
 2974              		.thumb_func
 2976              	HAL_ADC_GetState:
 2977              	.LVL240:
 2978              	.LFB988:
2626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 2979              		.loc 1 2626 1 is_stmt 1 view -0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 0
 2982              		@ frame_needed = 0, uses_anonymous_args = 0
 2983              		@ link register save eliminated.
2628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2984              		.loc 1 2628 3 view .LVU912
2631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2985              		.loc 1 2631 3 view .LVU913
2631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2986              		.loc 1 2631 14 is_stmt 0 view .LVU914
 2987 0000 806D     		ldr	r0, [r0, #88]
 2988              	.LVL241:
2632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2989              		.loc 1 2632 1 view .LVU915
 2990 0002 7047     		bx	lr
 2991              		.cfi_endproc
 2992              	.LFE988:
 2994              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2995              		.align	1
 2996              		.global	HAL_ADC_GetError
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3001              	HAL_ADC_GetError:
 3002              	.LVL242:
 3003              	.LFB989:
2640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 3004              		.loc 1 2640 1 is_stmt 1 view -0
 3005              		.cfi_startproc
 3006              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 224


 3007              		@ frame_needed = 0, uses_anonymous_args = 0
 3008              		@ link register save eliminated.
2642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3009              		.loc 1 2642 3 view .LVU917
2644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3010              		.loc 1 2644 3 view .LVU918
2644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3011              		.loc 1 2644 14 is_stmt 0 view .LVU919
 3012 0000 C06D     		ldr	r0, [r0, #92]
 3013              	.LVL243:
2645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3014              		.loc 1 2645 1 view .LVU920
 3015 0002 7047     		bx	lr
 3016              		.cfi_endproc
 3017              	.LFE989:
 3019              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3020              		.align	1
 3021              		.global	ADC_ConversionStop
 3022              		.syntax unified
 3023              		.thumb
 3024              		.thumb_func
 3026              	ADC_ConversionStop:
 3027              	.LVL244:
 3028              	.LFB990:
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3029              		.loc 1 2667 1 is_stmt 1 view -0
 3030              		.cfi_startproc
 3031              		@ args = 0, pretend = 0, frame = 0
 3032              		@ frame_needed = 0, uses_anonymous_args = 0
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3033              		.loc 1 2667 1 is_stmt 0 view .LVU922
 3034 0000 38B5     		push	{r3, r4, r5, lr}
 3035              	.LCFI19:
 3036              		.cfi_def_cfa_offset 16
 3037              		.cfi_offset 3, -16
 3038              		.cfi_offset 4, -12
 3039              		.cfi_offset 5, -8
 3040              		.cfi_offset 14, -4
2668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3041              		.loc 1 2668 3 is_stmt 1 view .LVU923
2671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3042              		.loc 1 2671 3 view .LVU924
2675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3043              		.loc 1 2675 3 view .LVU925
2675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3044              		.loc 1 2675 7 is_stmt 0 view .LVU926
 3045 0002 0368     		ldr	r3, [r0]
 3046              	.LVL245:
 3047              	.LBB302:
 3048              	.LBI302:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3049              		.loc 2 4372 26 is_stmt 1 view .LVU927
 3050              	.LBB303:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3051              		.loc 2 4374 3 view .LVU928
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3052              		.loc 2 4374 12 is_stmt 0 view .LVU929
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 225


 3053 0004 9A68     		ldr	r2, [r3, #8]
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3054              		.loc 2 4374 74 view .LVU930
 3055 0006 12F0040F 		tst	r2, #4
 3056 000a 2AD0     		beq	.L195
 3057 000c 0446     		mov	r4, r0
 3058              	.LVL246:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3059              		.loc 2 4374 74 view .LVU931
 3060              	.LBE303:
 3061              	.LBE302:
2679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3062              		.loc 1 2679 5 is_stmt 1 view .LVU932
 3063              	.LBB304:
 3064              	.LBI304:
4259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3065              		.loc 2 4259 26 view .LVU933
 3066              	.LBB305:
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3067              		.loc 2 4261 3 view .LVU934
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3068              		.loc 2 4261 12 is_stmt 0 view .LVU935
 3069 000e 9A68     		ldr	r2, [r3, #8]
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3070              		.loc 2 4261 70 view .LVU936
 3071 0010 12F0020F 		tst	r2, #2
 3072 0014 07D1     		bne	.L192
 3073              	.LVL247:
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3074              		.loc 2 4261 70 view .LVU937
 3075              	.LBE305:
 3076              	.LBE304:
2682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3077              		.loc 1 2682 7 is_stmt 1 view .LVU938
 3078              	.LBB306:
 3079              	.LBI306:
4356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3080              		.loc 2 4356 22 view .LVU939
 3081              	.LBB307:
4361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3082              		.loc 2 4361 3 view .LVU940
 3083 0016 9A68     		ldr	r2, [r3, #8]
 3084 0018 22F00042 		bic	r2, r2, #-2147483648
 3085 001c 22F01702 		bic	r2, r2, #23
 3086 0020 42F01002 		orr	r2, r2, #16
 3087 0024 9A60     		str	r2, [r3, #8]
 3088              	.LVL248:
 3089              	.L192:
4361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3090              		.loc 2 4361 3 is_stmt 0 view .LVU941
 3091              	.LBE307:
 3092              	.LBE306:
2687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3093              		.loc 1 2687 5 is_stmt 1 view .LVU942
2687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3094              		.loc 1 2687 17 is_stmt 0 view .LVU943
 3095 0026 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 226


 3096              	.LVL249:
2687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3097              		.loc 1 2687 17 view .LVU944
 3098 002a 0546     		mov	r5, r0
 3099              	.LVL250:
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3100              		.loc 1 2689 5 is_stmt 1 view .LVU945
 3101              	.L193:
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3102              		.loc 1 2689 11 view .LVU946
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3103              		.loc 1 2689 17 is_stmt 0 view .LVU947
 3104 002c 2368     		ldr	r3, [r4]
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3105              		.loc 1 2689 27 view .LVU948
 3106 002e 9B68     		ldr	r3, [r3, #8]
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3107              		.loc 1 2689 11 view .LVU949
 3108 0030 13F0040F 		tst	r3, #4
 3109 0034 13D0     		beq	.L197
2691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3110              		.loc 1 2691 7 is_stmt 1 view .LVU950
2691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3111              		.loc 1 2691 12 is_stmt 0 view .LVU951
 3112 0036 FFF7FEFF 		bl	HAL_GetTick
 3113              	.LVL251:
2691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3114              		.loc 1 2691 26 view .LVU952
 3115 003a 431B     		subs	r3, r0, r5
2691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3116              		.loc 1 2691 10 view .LVU953
 3117 003c 022B     		cmp	r3, #2
 3118 003e F5D9     		bls	.L193
2694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3119              		.loc 1 2694 9 is_stmt 1 view .LVU954
2694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3120              		.loc 1 2694 18 is_stmt 0 view .LVU955
 3121 0040 2368     		ldr	r3, [r4]
2694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3122              		.loc 1 2694 28 view .LVU956
 3123 0042 9B68     		ldr	r3, [r3, #8]
2694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3124              		.loc 1 2694 12 view .LVU957
 3125 0044 13F0040F 		tst	r3, #4
 3126 0048 F0D0     		beq	.L193
2697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3127              		.loc 1 2697 11 is_stmt 1 view .LVU958
 3128 004a A36D     		ldr	r3, [r4, #88]
 3129 004c 43F01003 		orr	r3, r3, #16
 3130 0050 A365     		str	r3, [r4, #88]
2700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3131              		.loc 1 2700 11 view .LVU959
 3132 0052 E36D     		ldr	r3, [r4, #92]
 3133 0054 43F00103 		orr	r3, r3, #1
 3134 0058 E365     		str	r3, [r4, #92]
2702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 3135              		.loc 1 2702 11 view .LVU960
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 227


2702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 3136              		.loc 1 2702 18 is_stmt 0 view .LVU961
 3137 005a 0120     		movs	r0, #1
 3138 005c 02E0     		b	.L191
 3139              	.L197:
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3140              		.loc 1 2710 10 view .LVU962
 3141 005e 0020     		movs	r0, #0
 3142 0060 00E0     		b	.L191
 3143              	.LVL252:
 3144              	.L195:
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3145              		.loc 1 2710 10 view .LVU963
 3146 0062 0020     		movs	r0, #0
 3147              	.LVL253:
 3148              	.L191:
2711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3149              		.loc 1 2711 1 view .LVU964
 3150 0064 38BD     		pop	{r3, r4, r5, pc}
 3151              		.cfi_endproc
 3152              	.LFE990:
 3154              		.section	.text.ADC_Enable,"ax",%progbits
 3155              		.align	1
 3156              		.global	ADC_Enable
 3157              		.syntax unified
 3158              		.thumb
 3159              		.thumb_func
 3161              	ADC_Enable:
 3162              	.LVL254:
 3163              	.LFB991:
2721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3164              		.loc 1 2721 1 is_stmt 1 view -0
 3165              		.cfi_startproc
 3166              		@ args = 0, pretend = 0, frame = 8
 3167              		@ frame_needed = 0, uses_anonymous_args = 0
2721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3168              		.loc 1 2721 1 is_stmt 0 view .LVU966
 3169 0000 30B5     		push	{r4, r5, lr}
 3170              	.LCFI20:
 3171              		.cfi_def_cfa_offset 12
 3172              		.cfi_offset 4, -12
 3173              		.cfi_offset 5, -8
 3174              		.cfi_offset 14, -4
 3175 0002 83B0     		sub	sp, sp, #12
 3176              	.LCFI21:
 3177              		.cfi_def_cfa_offset 24
2722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 3178              		.loc 1 2722 3 is_stmt 1 view .LVU967
2723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3179              		.loc 1 2723 3 view .LVU968
2723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3180              		.loc 1 2723 17 is_stmt 0 view .LVU969
 3181 0004 0023     		movs	r3, #0
 3182 0006 0193     		str	r3, [sp, #4]
2729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3183              		.loc 1 2729 3 is_stmt 1 view .LVU970
2729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 228


 3184              		.loc 1 2729 7 is_stmt 0 view .LVU971
 3185 0008 0368     		ldr	r3, [r0]
 3186              	.LVL255:
 3187              	.LBB308:
 3188              	.LBI308:
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3189              		.loc 2 4248 26 is_stmt 1 view .LVU972
 3190              	.LBB309:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3191              		.loc 2 4250 3 view .LVU973
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3192              		.loc 2 4250 12 is_stmt 0 view .LVU974
 3193 000a 9A68     		ldr	r2, [r3, #8]
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3194              		.loc 2 4250 68 view .LVU975
 3195 000c 12F0010F 		tst	r2, #1
 3196 0010 5BD1     		bne	.L207
 3197 0012 0446     		mov	r4, r0
 3198              	.LVL256:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3199              		.loc 2 4250 68 view .LVU976
 3200              	.LBE309:
 3201              	.LBE308:
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3202              		.loc 1 2732 5 is_stmt 1 view .LVU977
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3203              		.loc 1 2732 24 is_stmt 0 view .LVU978
 3204 0014 9968     		ldr	r1, [r3, #8]
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3205              		.loc 1 2732 8 view .LVU979
 3206 0016 2E4A     		ldr	r2, .L213
 3207 0018 1142     		tst	r1, r2
 3208 001a 17D1     		bne	.L210
2744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3209              		.loc 1 2744 5 is_stmt 1 view .LVU980
 3210              	.LVL257:
 3211              	.LBB310:
 3212              	.LBI310:
4209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3213              		.loc 2 4209 22 view .LVU981
 3214              	.LBB311:
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3215              		.loc 2 4214 3 view .LVU982
 3216 001c 9A68     		ldr	r2, [r3, #8]
 3217 001e 22F00042 		bic	r2, r2, #-2147483648
 3218 0022 22F01702 		bic	r2, r2, #23
 3219 0026 42F00102 		orr	r2, r2, #1
 3220 002a 9A60     		str	r2, [r3, #8]
 3221              	.LVL258:
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3222              		.loc 2 4214 3 is_stmt 0 view .LVU983
 3223              	.LBE311:
 3224              	.LBE310:
2746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3225              		.loc 1 2746 5 is_stmt 1 view .LVU984
 3226              	.LBB312:
 3227              	.LBI312:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 229


1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3228              		.loc 2 1836 26 view .LVU985
 3229              	.LBB313:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3230              		.loc 2 1838 3 view .LVU986
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3231              		.loc 2 1838 21 is_stmt 0 view .LVU987
 3232 002c 294B     		ldr	r3, .L213+4
 3233 002e D3F80837 		ldr	r3, [r3, #1800]
 3234              	.LVL259:
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3235              		.loc 2 1838 21 view .LVU988
 3236              	.LBE313:
 3237              	.LBE312:
2746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3238              		.loc 1 2746 8 view .LVU989
 3239 0032 13F4000F 		tst	r3, #8388608
 3240 0036 19D0     		beq	.L201
2753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
 3241              		.loc 1 2753 7 is_stmt 1 view .LVU990
2753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
 3242              		.loc 1 2753 94 is_stmt 0 view .LVU991
 3243 0038 274B     		ldr	r3, .L213+8
 3244 003a 1B68     		ldr	r3, [r3]
 3245 003c 9B09     		lsrs	r3, r3, #6
 3246 003e 274A     		ldr	r2, .L213+12
 3247 0040 A2FB0323 		umull	r2, r3, r2, r3
 3248 0044 9B09     		lsrs	r3, r3, #6
2753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
 3249              		.loc 1 2753 74 view .LVU992
 3250 0046 0133     		adds	r3, r3, #1
2753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
 3251              		.loc 1 2753 23 view .LVU993
 3252 0048 0193     		str	r3, [sp, #4]
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3253              		.loc 1 2754 7 is_stmt 1 view .LVU994
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3254              		.loc 1 2754 13 is_stmt 0 view .LVU995
 3255 004a 0CE0     		b	.L202
 3256              	.L210:
2735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3257              		.loc 1 2735 7 is_stmt 1 view .LVU996
 3258 004c 836D     		ldr	r3, [r0, #88]
 3259 004e 43F01003 		orr	r3, r3, #16
 3260 0052 8365     		str	r3, [r0, #88]
2738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3261              		.loc 1 2738 7 view .LVU997
 3262 0054 C36D     		ldr	r3, [r0, #92]
 3263 0056 43F00103 		orr	r3, r3, #1
 3264 005a C365     		str	r3, [r0, #92]
2740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3265              		.loc 1 2740 7 view .LVU998
2740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3266              		.loc 1 2740 14 is_stmt 0 view .LVU999
 3267 005c 0120     		movs	r0, #1
 3268              	.LVL260:
2740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 230


 3269              		.loc 1 2740 14 view .LVU1000
 3270 005e 35E0     		b	.L199
 3271              	.LVL261:
 3272              	.L203:
2756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3273              		.loc 1 2756 9 is_stmt 1 view .LVU1001
2756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3274              		.loc 1 2756 24 is_stmt 0 view .LVU1002
 3275 0060 019B     		ldr	r3, [sp, #4]
 3276 0062 013B     		subs	r3, r3, #1
 3277 0064 0193     		str	r3, [sp, #4]
 3278              	.L202:
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3279              		.loc 1 2754 13 is_stmt 1 view .LVU1003
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3280              		.loc 1 2754 30 is_stmt 0 view .LVU1004
 3281 0066 019B     		ldr	r3, [sp, #4]
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3282              		.loc 1 2754 13 view .LVU1005
 3283 0068 002B     		cmp	r3, #0
 3284 006a F9D1     		bne	.L203
 3285              	.L201:
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3286              		.loc 1 2762 5 is_stmt 1 view .LVU1006
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3287              		.loc 1 2762 19 is_stmt 0 view .LVU1007
 3288 006c 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3289              		.loc 1 2762 8 view .LVU1008
 3290 006e 012B     		cmp	r3, #1
 3291 0070 01D1     		bne	.L211
2801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3292              		.loc 1 2801 10 view .LVU1009
 3293 0072 0020     		movs	r0, #0
 3294              	.LVL262:
2801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3295              		.loc 1 2801 10 view .LVU1010
 3296 0074 2AE0     		b	.L199
 3297              	.LVL263:
 3298              	.L211:
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3299              		.loc 1 2765 7 is_stmt 1 view .LVU1011
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3300              		.loc 1 2765 19 is_stmt 0 view .LVU1012
 3301 0076 FFF7FEFF 		bl	HAL_GetTick
 3302              	.LVL264:
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3303              		.loc 1 2765 19 view .LVU1013
 3304 007a 0546     		mov	r5, r0
 3305              	.LVL265:
2767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3306              		.loc 1 2767 7 is_stmt 1 view .LVU1014
 3307              	.L204:
2767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3308              		.loc 1 2767 13 view .LVU1015
2767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3309              		.loc 1 2767 14 is_stmt 0 view .LVU1016
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 231


 3310 007c 2368     		ldr	r3, [r4]
 3311 007e 1A68     		ldr	r2, [r3]
2767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3312              		.loc 1 2767 13 view .LVU1017
 3313 0080 12F0010F 		tst	r2, #1
 3314 0084 1FD1     		bne	.L212
2777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3315              		.loc 1 2777 9 is_stmt 1 view .LVU1018
 3316              	.LVL266:
 3317              	.LBB314:
 3318              	.LBI314:
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3319              		.loc 2 4248 26 view .LVU1019
 3320              	.LBB315:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3321              		.loc 2 4250 3 view .LVU1020
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3322              		.loc 2 4250 12 is_stmt 0 view .LVU1021
 3323 0086 9A68     		ldr	r2, [r3, #8]
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3324              		.loc 2 4250 68 view .LVU1022
 3325 0088 12F0010F 		tst	r2, #1
 3326 008c 07D1     		bne	.L205
 3327              	.LVL267:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3328              		.loc 2 4250 68 view .LVU1023
 3329              	.LBE315:
 3330              	.LBE314:
2779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 3331              		.loc 1 2779 11 is_stmt 1 view .LVU1024
 3332              	.LBB316:
 3333              	.LBI316:
4209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3334              		.loc 2 4209 22 view .LVU1025
 3335              	.LBB317:
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3336              		.loc 2 4214 3 view .LVU1026
 3337 008e 9A68     		ldr	r2, [r3, #8]
 3338 0090 22F00042 		bic	r2, r2, #-2147483648
 3339 0094 22F01702 		bic	r2, r2, #23
 3340 0098 42F00102 		orr	r2, r2, #1
 3341 009c 9A60     		str	r2, [r3, #8]
 3342              	.LVL268:
 3343              	.L205:
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3344              		.loc 2 4214 3 is_stmt 0 view .LVU1027
 3345              	.LBE317:
 3346              	.LBE316:
2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3347              		.loc 1 2782 9 is_stmt 1 view .LVU1028
2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3348              		.loc 1 2782 14 is_stmt 0 view .LVU1029
 3349 009e FFF7FEFF 		bl	HAL_GetTick
 3350              	.LVL269:
2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3351              		.loc 1 2782 28 view .LVU1030
 3352 00a2 401B     		subs	r0, r0, r5
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 232


2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3353              		.loc 1 2782 12 view .LVU1031
 3354 00a4 0228     		cmp	r0, #2
 3355 00a6 E9D9     		bls	.L204
2785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 3356              		.loc 1 2785 11 is_stmt 1 view .LVU1032
2785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 3357              		.loc 1 2785 15 is_stmt 0 view .LVU1033
 3358 00a8 2368     		ldr	r3, [r4]
 3359 00aa 1B68     		ldr	r3, [r3]
2785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 3360              		.loc 1 2785 14 view .LVU1034
 3361 00ac 13F0010F 		tst	r3, #1
 3362 00b0 E4D1     		bne	.L204
2788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3363              		.loc 1 2788 13 is_stmt 1 view .LVU1035
 3364 00b2 A36D     		ldr	r3, [r4, #88]
 3365 00b4 43F01003 		orr	r3, r3, #16
 3366 00b8 A365     		str	r3, [r4, #88]
2791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3367              		.loc 1 2791 13 view .LVU1036
 3368 00ba E36D     		ldr	r3, [r4, #92]
 3369 00bc 43F00103 		orr	r3, r3, #1
 3370 00c0 E365     		str	r3, [r4, #92]
2793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 3371              		.loc 1 2793 13 view .LVU1037
2793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 3372              		.loc 1 2793 20 is_stmt 0 view .LVU1038
 3373 00c2 0120     		movs	r0, #1
 3374 00c4 02E0     		b	.L199
 3375              	.L212:
2801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3376              		.loc 1 2801 10 view .LVU1039
 3377 00c6 0020     		movs	r0, #0
 3378 00c8 00E0     		b	.L199
 3379              	.LVL270:
 3380              	.L207:
2801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3381              		.loc 1 2801 10 view .LVU1040
 3382 00ca 0020     		movs	r0, #0
 3383              	.LVL271:
 3384              	.L199:
2802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3385              		.loc 1 2802 1 view .LVU1041
 3386 00cc 03B0     		add	sp, sp, #12
 3387              	.LCFI22:
 3388              		.cfi_def_cfa_offset 12
 3389              		@ sp needed
 3390 00ce 30BD     		pop	{r4, r5, pc}
 3391              	.L214:
 3392              		.align	2
 3393              	.L213:
 3394 00d0 17000080 		.word	-2147483625
 3395 00d4 00200140 		.word	1073815552
 3396 00d8 00000000 		.word	SystemCoreClock
 3397 00dc 632D3E05 		.word	87960931
 3398              		.cfi_endproc
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 233


 3399              	.LFE991:
 3401              		.section	.text.HAL_ADC_Start,"ax",%progbits
 3402              		.align	1
 3403              		.global	HAL_ADC_Start
 3404              		.syntax unified
 3405              		.thumb
 3406              		.thumb_func
 3408              	HAL_ADC_Start:
 3409              	.LVL272:
 3410              	.LFB972:
1185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3411              		.loc 1 1185 1 is_stmt 1 view -0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 0
 3414              		@ frame_needed = 0, uses_anonymous_args = 0
1186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3415              		.loc 1 1186 3 view .LVU1043
1189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3416              		.loc 1 1189 3 view .LVU1044
1192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3417              		.loc 1 1192 3 view .LVU1045
1192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3418              		.loc 1 1192 7 is_stmt 0 view .LVU1046
 3419 0000 0368     		ldr	r3, [r0]
 3420              	.LVL273:
 3421              	.LBB318:
 3422              	.LBI318:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3423              		.loc 2 4372 26 is_stmt 1 view .LVU1047
 3424              	.LBB319:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3425              		.loc 2 4374 3 view .LVU1048
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3426              		.loc 2 4374 12 is_stmt 0 view .LVU1049
 3427 0002 9B68     		ldr	r3, [r3, #8]
 3428              	.LVL274:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3429              		.loc 2 4374 74 view .LVU1050
 3430 0004 13F0040F 		tst	r3, #4
 3431 0008 28D1     		bne	.L218
 3432              	.LBE319:
 3433              	.LBE318:
1185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3434              		.loc 1 1185 1 view .LVU1051
 3435 000a 10B5     		push	{r4, lr}
 3436              	.LCFI23:
 3437              		.cfi_def_cfa_offset 8
 3438              		.cfi_offset 4, -8
 3439              		.cfi_offset 14, -4
 3440 000c 0446     		mov	r4, r0
 3441              	.LVL275:
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3442              		.loc 1 1194 5 is_stmt 1 view .LVU1052
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3443              		.loc 1 1194 5 view .LVU1053
 3444 000e 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3445 0012 012B     		cmp	r3, #1
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 234


 3446 0014 24D0     		beq	.L219
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3447              		.loc 1 1194 5 discriminator 2 view .LVU1054
 3448 0016 0123     		movs	r3, #1
 3449 0018 80F85430 		strb	r3, [r0, #84]
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3450              		.loc 1 1194 5 discriminator 2 view .LVU1055
1197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3451              		.loc 1 1197 5 discriminator 2 view .LVU1056
1197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3452              		.loc 1 1197 22 is_stmt 0 discriminator 2 view .LVU1057
 3453 001c FFF7FEFF 		bl	ADC_Enable
 3454              	.LVL276:
1200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3455              		.loc 1 1200 5 is_stmt 1 discriminator 2 view .LVU1058
1200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3456              		.loc 1 1200 8 is_stmt 0 discriminator 2 view .LVU1059
 3457 0020 C0B9     		cbnz	r0, .L217
1205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3458              		.loc 1 1205 7 is_stmt 1 view .LVU1060
 3459 0022 A36D     		ldr	r3, [r4, #88]
 3460 0024 23F47063 		bic	r3, r3, #3840
 3461 0028 23F00103 		bic	r3, r3, #1
 3462 002c 43F48073 		orr	r3, r3, #256
 3463 0030 A365     		str	r3, [r4, #88]
1211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3464              		.loc 1 1211 7 view .LVU1061
 3465 0032 0023     		movs	r3, #0
 3466 0034 E365     		str	r3, [r4, #92]
1215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3467              		.loc 1 1215 7 view .LVU1062
 3468 0036 2268     		ldr	r2, [r4]
 3469 0038 1C21     		movs	r1, #28
 3470 003a 1160     		str	r1, [r2]
1220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3471              		.loc 1 1220 7 view .LVU1063
1220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3472              		.loc 1 1220 7 view .LVU1064
 3473 003c 84F85430 		strb	r3, [r4, #84]
1220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3474              		.loc 1 1220 7 view .LVU1065
1227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3475              		.loc 1 1227 7 view .LVU1066
 3476 0040 2268     		ldr	r2, [r4]
 3477              	.LVL277:
 3478              	.LBB320:
 3479              	.LBI320:
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3480              		.loc 2 4336 22 view .LVU1067
 3481              	.LBB321:
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3482              		.loc 2 4341 3 view .LVU1068
 3483 0042 9368     		ldr	r3, [r2, #8]
 3484 0044 23F00043 		bic	r3, r3, #-2147483648
 3485 0048 23F01703 		bic	r3, r3, #23
 3486 004c 43F00403 		orr	r3, r3, #4
 3487 0050 9360     		str	r3, [r2, #8]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 235


 3488              	.LVL278:
 3489              	.L216:
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3490              		.loc 2 4341 3 is_stmt 0 view .LVU1069
 3491              	.LBE321:
 3492              	.LBE320:
1240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3493              		.loc 1 1240 1 view .LVU1070
 3494 0052 10BD     		pop	{r4, pc}
 3495              	.LVL279:
 3496              	.L217:
1231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3497              		.loc 1 1231 7 is_stmt 1 view .LVU1071
1231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3498              		.loc 1 1231 7 view .LVU1072
 3499 0054 0023     		movs	r3, #0
 3500 0056 84F85430 		strb	r3, [r4, #84]
 3501 005a FAE7     		b	.L216
 3502              	.LVL280:
 3503              	.L218:
 3504              	.LCFI24:
 3505              		.cfi_def_cfa_offset 0
 3506              		.cfi_restore 4
 3507              		.cfi_restore 14
1236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3508              		.loc 1 1236 20 is_stmt 0 view .LVU1073
 3509 005c 0220     		movs	r0, #2
 3510              	.LVL281:
1240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3511              		.loc 1 1240 1 view .LVU1074
 3512 005e 7047     		bx	lr
 3513              	.LVL282:
 3514              	.L219:
 3515              	.LCFI25:
 3516              		.cfi_def_cfa_offset 8
 3517              		.cfi_offset 4, -8
 3518              		.cfi_offset 14, -4
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3519              		.loc 1 1194 5 view .LVU1075
 3520 0060 0220     		movs	r0, #2
 3521              	.LVL283:
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3522              		.loc 1 1194 5 view .LVU1076
 3523 0062 F6E7     		b	.L216
 3524              		.cfi_endproc
 3525              	.LFE972:
 3527              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3528              		.align	1
 3529              		.global	HAL_ADC_Start_IT
 3530              		.syntax unified
 3531              		.thumb
 3532              		.thumb_func
 3534              	HAL_ADC_Start_IT:
 3535              	.LVL284:
 3536              	.LFB976:
1563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3537              		.loc 1 1563 1 is_stmt 1 view -0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 236


 3538              		.cfi_startproc
 3539              		@ args = 0, pretend = 0, frame = 0
 3540              		@ frame_needed = 0, uses_anonymous_args = 0
1564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3541              		.loc 1 1564 3 view .LVU1078
1567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3542              		.loc 1 1567 3 view .LVU1079
1570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3543              		.loc 1 1570 3 view .LVU1080
1570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3544              		.loc 1 1570 7 is_stmt 0 view .LVU1081
 3545 0000 0368     		ldr	r3, [r0]
 3546              	.LVL285:
 3547              	.LBB322:
 3548              	.LBI322:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3549              		.loc 2 4372 26 is_stmt 1 view .LVU1082
 3550              	.LBB323:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3551              		.loc 2 4374 3 view .LVU1083
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3552              		.loc 2 4374 12 is_stmt 0 view .LVU1084
 3553 0002 9B68     		ldr	r3, [r3, #8]
 3554              	.LVL286:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3555              		.loc 2 4374 74 view .LVU1085
 3556 0004 13F0040F 		tst	r3, #4
 3557 0008 43D1     		bne	.L230
 3558              	.LBE323:
 3559              	.LBE322:
1563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3560              		.loc 1 1563 1 view .LVU1086
 3561 000a 10B5     		push	{r4, lr}
 3562              	.LCFI26:
 3563              		.cfi_def_cfa_offset 8
 3564              		.cfi_offset 4, -8
 3565              		.cfi_offset 14, -4
 3566 000c 0446     		mov	r4, r0
 3567              	.LVL287:
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3568              		.loc 1 1572 5 is_stmt 1 view .LVU1087
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3569              		.loc 1 1572 5 view .LVU1088
 3570 000e 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3571 0012 012B     		cmp	r3, #1
 3572 0014 3FD0     		beq	.L231
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3573              		.loc 1 1572 5 discriminator 2 view .LVU1089
 3574 0016 0123     		movs	r3, #1
 3575 0018 80F85430 		strb	r3, [r0, #84]
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3576              		.loc 1 1572 5 discriminator 2 view .LVU1090
1575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3577              		.loc 1 1575 5 discriminator 2 view .LVU1091
1575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3578              		.loc 1 1575 22 is_stmt 0 discriminator 2 view .LVU1092
 3579 001c FFF7FEFF 		bl	ADC_Enable
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 237


 3580              	.LVL288:
1578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3581              		.loc 1 1578 5 is_stmt 1 discriminator 2 view .LVU1093
1578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3582              		.loc 1 1578 8 is_stmt 0 discriminator 2 view .LVU1094
 3583 0020 0028     		cmp	r0, #0
 3584 0022 32D1     		bne	.L226
1583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3585              		.loc 1 1583 7 is_stmt 1 view .LVU1095
 3586 0024 A36D     		ldr	r3, [r4, #88]
 3587 0026 23F47063 		bic	r3, r3, #3840
 3588 002a 23F00103 		bic	r3, r3, #1
 3589 002e 43F48073 		orr	r3, r3, #256
 3590 0032 A365     		str	r3, [r4, #88]
1590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3591              		.loc 1 1590 7 view .LVU1096
 3592 0034 0023     		movs	r3, #0
 3593 0036 E365     		str	r3, [r4, #92]
1594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3594              		.loc 1 1594 7 view .LVU1097
 3595 0038 2268     		ldr	r2, [r4]
 3596 003a 1C21     		movs	r1, #28
 3597 003c 1160     		str	r1, [r2]
1599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3598              		.loc 1 1599 7 view .LVU1098
1599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3599              		.loc 1 1599 7 view .LVU1099
 3600 003e 84F85430 		strb	r3, [r4, #84]
1599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3601              		.loc 1 1599 7 view .LVU1100
1602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3602              		.loc 1 1602 7 view .LVU1101
 3603 0042 2268     		ldr	r2, [r4]
 3604 0044 5368     		ldr	r3, [r2, #4]
 3605 0046 23F01C03 		bic	r3, r3, #28
 3606 004a 5360     		str	r3, [r2, #4]
1605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3607              		.loc 1 1605 7 view .LVU1102
1605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3608              		.loc 1 1605 25 is_stmt 0 view .LVU1103
 3609 004c 6369     		ldr	r3, [r4, #20]
1605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3610              		.loc 1 1605 7 view .LVU1104
 3611 004e 082B     		cmp	r3, #8
 3612 0050 15D0     		beq	.L236
1612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 3613              		.loc 1 1612 11 is_stmt 1 view .LVU1105
 3614 0052 2268     		ldr	r2, [r4]
 3615 0054 5368     		ldr	r3, [r2, #4]
 3616 0056 43F00403 		orr	r3, r3, #4
 3617 005a 5360     		str	r3, [r2, #4]
1613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3618              		.loc 1 1613 11 view .LVU1106
 3619              	.L228:
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3620              		.loc 1 1620 7 view .LVU1107
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 238


 3621              		.loc 1 1620 21 is_stmt 0 view .LVU1108
 3622 005c 236B     		ldr	r3, [r4, #48]
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3623              		.loc 1 1620 10 view .LVU1109
 3624 005e 23B9     		cbnz	r3, .L229
1622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3625              		.loc 1 1622 9 is_stmt 1 view .LVU1110
 3626 0060 2268     		ldr	r2, [r4]
 3627 0062 5368     		ldr	r3, [r2, #4]
 3628 0064 43F01003 		orr	r3, r3, #16
 3629 0068 5360     		str	r3, [r2, #4]
 3630              	.L229:
1630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3631              		.loc 1 1630 7 view .LVU1111
 3632 006a 2268     		ldr	r2, [r4]
 3633              	.LVL289:
 3634              	.LBB324:
 3635              	.LBI324:
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3636              		.loc 2 4336 22 view .LVU1112
 3637              	.LBB325:
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3638              		.loc 2 4341 3 view .LVU1113
 3639 006c 9368     		ldr	r3, [r2, #8]
 3640 006e 23F00043 		bic	r3, r3, #-2147483648
 3641 0072 23F01703 		bic	r3, r3, #23
 3642 0076 43F00403 		orr	r3, r3, #4
 3643 007a 9360     		str	r3, [r2, #8]
 3644              	.LVL290:
 3645              	.L225:
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3646              		.loc 2 4341 3 is_stmt 0 view .LVU1114
 3647              	.LBE325:
 3648              	.LBE324:
1644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3649              		.loc 1 1644 1 view .LVU1115
 3650 007c 10BD     		pop	{r4, pc}
 3651              	.LVL291:
 3652              	.L236:
1608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 3653              		.loc 1 1608 11 is_stmt 1 view .LVU1116
 3654 007e 2268     		ldr	r2, [r4]
 3655 0080 5368     		ldr	r3, [r2, #4]
 3656 0082 43F00803 		orr	r3, r3, #8
 3657 0086 5360     		str	r3, [r2, #4]
1609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 3658              		.loc 1 1609 11 view .LVU1117
 3659 0088 E8E7     		b	.L228
 3660              	.L226:
1634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3661              		.loc 1 1634 7 view .LVU1118
1634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3662              		.loc 1 1634 7 view .LVU1119
 3663 008a 0023     		movs	r3, #0
 3664 008c 84F85430 		strb	r3, [r4, #84]
 3665 0090 F4E7     		b	.L225
 3666              	.LVL292:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 239


 3667              	.L230:
 3668              	.LCFI27:
 3669              		.cfi_def_cfa_offset 0
 3670              		.cfi_restore 4
 3671              		.cfi_restore 14
1640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3672              		.loc 1 1640 20 is_stmt 0 view .LVU1120
 3673 0092 0220     		movs	r0, #2
 3674              	.LVL293:
1644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3675              		.loc 1 1644 1 view .LVU1121
 3676 0094 7047     		bx	lr
 3677              	.LVL294:
 3678              	.L231:
 3679              	.LCFI28:
 3680              		.cfi_def_cfa_offset 8
 3681              		.cfi_offset 4, -8
 3682              		.cfi_offset 14, -4
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3683              		.loc 1 1572 5 view .LVU1122
 3684 0096 0220     		movs	r0, #2
 3685              	.LVL295:
1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3686              		.loc 1 1572 5 view .LVU1123
 3687 0098 F0E7     		b	.L225
 3688              		.cfi_endproc
 3689              	.LFE976:
 3691              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3692              		.align	1
 3693              		.global	HAL_ADC_Start_DMA
 3694              		.syntax unified
 3695              		.thumb
 3696              		.thumb_func
 3698              	HAL_ADC_Start_DMA:
 3699              	.LVL296:
 3700              	.LFB978:
1701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3701              		.loc 1 1701 1 is_stmt 1 view -0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 0
 3704              		@ frame_needed = 0, uses_anonymous_args = 0
1701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3705              		.loc 1 1701 1 is_stmt 0 view .LVU1125
 3706 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3707              	.LCFI29:
 3708              		.cfi_def_cfa_offset 24
 3709              		.cfi_offset 3, -24
 3710              		.cfi_offset 4, -20
 3711              		.cfi_offset 5, -16
 3712              		.cfi_offset 6, -12
 3713              		.cfi_offset 7, -8
 3714              		.cfi_offset 14, -4
 3715 0002 0446     		mov	r4, r0
1702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3716              		.loc 1 1702 3 is_stmt 1 view .LVU1126
1705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3717              		.loc 1 1705 3 view .LVU1127
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 240


1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3718              		.loc 1 1708 3 view .LVU1128
1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3719              		.loc 1 1708 7 is_stmt 0 view .LVU1129
 3720 0004 0068     		ldr	r0, [r0]
 3721              	.LVL297:
 3722              	.LBB326:
 3723              	.LBI326:
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3724              		.loc 2 4372 26 is_stmt 1 view .LVU1130
 3725              	.LBB327:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3726              		.loc 2 4374 3 view .LVU1131
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3727              		.loc 2 4374 12 is_stmt 0 view .LVU1132
 3728 0006 8568     		ldr	r5, [r0, #8]
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3729              		.loc 2 4374 74 view .LVU1133
 3730 0008 15F0040F 		tst	r5, #4
 3731 000c 50D1     		bne	.L241
 3732 000e 0F46     		mov	r7, r1
 3733 0010 1646     		mov	r6, r2
 3734              	.LVL298:
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3735              		.loc 2 4374 74 view .LVU1134
 3736              	.LBE327:
 3737              	.LBE326:
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3738              		.loc 1 1710 5 is_stmt 1 view .LVU1135
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3739              		.loc 1 1710 5 view .LVU1136
 3740 0012 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 3741 0016 012B     		cmp	r3, #1
 3742 0018 4CD0     		beq	.L242
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3743              		.loc 1 1710 5 discriminator 2 view .LVU1137
 3744 001a 0123     		movs	r3, #1
 3745 001c 84F85430 		strb	r3, [r4, #84]
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3746              		.loc 1 1710 5 discriminator 2 view .LVU1138
1715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3747              		.loc 1 1715 5 discriminator 2 view .LVU1139
1715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3748              		.loc 1 1715 24 is_stmt 0 discriminator 2 view .LVU1140
 3749 0020 C368     		ldr	r3, [r0, #12]
1715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3750              		.loc 1 1715 8 discriminator 2 view .LVU1141
 3751 0022 13F0010F 		tst	r3, #1
 3752 0026 10D1     		bne	.L239
1717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3753              		.loc 1 1717 7 is_stmt 1 view .LVU1142
 3754              	.LVL299:
 3755              	.LBB328:
 3756              	.LBI328:
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3757              		.loc 2 4248 26 view .LVU1143
 3758              	.LBB329:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 241


4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3759              		.loc 2 4250 3 view .LVU1144
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3760              		.loc 2 4250 12 is_stmt 0 view .LVU1145
 3761 0028 8368     		ldr	r3, [r0, #8]
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3762              		.loc 2 4250 68 view .LVU1146
 3763 002a 13F0010F 		tst	r3, #1
 3764 002e 07D0     		beq	.L240
 3765              	.LVL300:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3766              		.loc 2 4250 68 view .LVU1147
 3767              	.LBE329:
 3768              	.LBE328:
1720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3769              		.loc 1 1720 9 is_stmt 1 view .LVU1148
 3770              	.LBB330:
 3771              	.LBI330:
4229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3772              		.loc 2 4229 22 view .LVU1149
 3773              	.LBB331:
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3774              		.loc 2 4234 3 view .LVU1150
 3775 0030 8368     		ldr	r3, [r0, #8]
 3776 0032 23F00043 		bic	r3, r3, #-2147483648
 3777 0036 23F01703 		bic	r3, r3, #23
 3778 003a 43F00203 		orr	r3, r3, #2
 3779 003e 8360     		str	r3, [r0, #8]
 3780              	.LVL301:
 3781              	.L240:
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3782              		.loc 2 4234 3 is_stmt 0 view .LVU1151
 3783              	.LBE331:
 3784              	.LBE330:
1724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3785              		.loc 1 1724 7 is_stmt 1 view .LVU1152
1724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3786              		.loc 1 1724 11 is_stmt 0 view .LVU1153
 3787 0040 2268     		ldr	r2, [r4]
 3788              	.LVL302:
1724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3789              		.loc 1 1724 29 view .LVU1154
 3790 0042 D368     		ldr	r3, [r2, #12]
 3791 0044 43F00103 		orr	r3, r3, #1
 3792 0048 D360     		str	r3, [r2, #12]
 3793              	.L239:
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3794              		.loc 1 1728 5 is_stmt 1 view .LVU1155
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3795              		.loc 1 1728 22 is_stmt 0 view .LVU1156
 3796 004a 2046     		mov	r0, r4
 3797 004c FFF7FEFF 		bl	ADC_Enable
 3798              	.LVL303:
1731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3799              		.loc 1 1731 5 is_stmt 1 view .LVU1157
1731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3800              		.loc 1 1731 8 is_stmt 0 view .LVU1158
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 242


 3801 0050 0028     		cmp	r0, #0
 3802 0052 2ED1     		bne	.L238
1736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3803              		.loc 1 1736 7 is_stmt 1 view .LVU1159
 3804 0054 A36D     		ldr	r3, [r4, #88]
 3805 0056 23F47063 		bic	r3, r3, #3840
 3806 005a 23F00103 		bic	r3, r3, #1
 3807 005e 43F48073 		orr	r3, r3, #256
 3808 0062 A365     		str	r3, [r4, #88]
1742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3809              		.loc 1 1742 7 view .LVU1160
 3810 0064 0023     		movs	r3, #0
 3811 0066 E365     		str	r3, [r4, #92]
1745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3812              		.loc 1 1745 7 view .LVU1161
1745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3813              		.loc 1 1745 11 is_stmt 0 view .LVU1162
 3814 0068 226D     		ldr	r2, [r4, #80]
1745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3815              		.loc 1 1745 42 view .LVU1163
 3816 006a 1349     		ldr	r1, .L244
 3817 006c D162     		str	r1, [r2, #44]
1748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3818              		.loc 1 1748 7 is_stmt 1 view .LVU1164
1748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3819              		.loc 1 1748 11 is_stmt 0 view .LVU1165
 3820 006e 226D     		ldr	r2, [r4, #80]
1748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3821              		.loc 1 1748 46 view .LVU1166
 3822 0070 1249     		ldr	r1, .L244+4
 3823 0072 1163     		str	r1, [r2, #48]
1751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3824              		.loc 1 1751 7 is_stmt 1 view .LVU1167
1751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3825              		.loc 1 1751 11 is_stmt 0 view .LVU1168
 3826 0074 226D     		ldr	r2, [r4, #80]
1751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3827              		.loc 1 1751 43 view .LVU1169
 3828 0076 1249     		ldr	r1, .L244+8
 3829 0078 5163     		str	r1, [r2, #52]
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3830              		.loc 1 1760 7 is_stmt 1 view .LVU1170
 3831 007a 2268     		ldr	r2, [r4]
 3832 007c 1C21     		movs	r1, #28
 3833 007e 1160     		str	r1, [r2]
1765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3834              		.loc 1 1765 7 view .LVU1171
1765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3835              		.loc 1 1765 7 view .LVU1172
 3836 0080 84F85430 		strb	r3, [r4, #84]
1765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3837              		.loc 1 1765 7 view .LVU1173
1768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3838              		.loc 1 1768 7 view .LVU1174
 3839 0084 2268     		ldr	r2, [r4]
 3840 0086 5368     		ldr	r3, [r2, #4]
 3841 0088 43F01003 		orr	r3, r3, #16
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 243


 3842 008c 5360     		str	r3, [r2, #4]
1771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3843              		.loc 1 1771 7 view .LVU1175
1771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3844              		.loc 1 1771 74 is_stmt 0 view .LVU1176
 3845 008e 2168     		ldr	r1, [r4]
1771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3846              		.loc 1 1771 24 view .LVU1177
 3847 0090 3346     		mov	r3, r6
 3848 0092 3A46     		mov	r2, r7
 3849 0094 4031     		adds	r1, r1, #64
 3850 0096 206D     		ldr	r0, [r4, #80]
 3851              	.LVL304:
1771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3852              		.loc 1 1771 24 view .LVU1178
 3853 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3854              	.LVL305:
1778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3855              		.loc 1 1778 7 is_stmt 1 view .LVU1179
 3856 009c 2268     		ldr	r2, [r4]
 3857              	.LVL306:
 3858              	.LBB332:
 3859              	.LBI332:
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3860              		.loc 2 4336 22 view .LVU1180
 3861              	.LBB333:
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3862              		.loc 2 4341 3 view .LVU1181
 3863 009e 9368     		ldr	r3, [r2, #8]
 3864 00a0 23F00043 		bic	r3, r3, #-2147483648
 3865 00a4 23F01703 		bic	r3, r3, #23
 3866 00a8 43F00403 		orr	r3, r3, #4
 3867 00ac 9360     		str	r3, [r2, #8]
4344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 3868              		.loc 2 4344 1 is_stmt 0 view .LVU1182
 3869 00ae 00E0     		b	.L238
 3870              	.LVL307:
 3871              	.L241:
4344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 3872              		.loc 2 4344 1 view .LVU1183
 3873              	.LBE333:
 3874              	.LBE332:
1783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3875              		.loc 1 1783 20 view .LVU1184
 3876 00b0 0220     		movs	r0, #2
 3877              	.LVL308:
 3878              	.L238:
1787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3879              		.loc 1 1787 1 view .LVU1185
 3880 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3881              	.LVL309:
 3882              	.L242:
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3883              		.loc 1 1710 5 view .LVU1186
 3884 00b4 0220     		movs	r0, #2
 3885 00b6 FCE7     		b	.L238
 3886              	.L245:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 244


 3887              		.align	2
 3888              	.L244:
 3889 00b8 00000000 		.word	ADC_DMAConvCplt
 3890 00bc 00000000 		.word	ADC_DMAHalfConvCplt
 3891 00c0 00000000 		.word	ADC_DMAError
 3892              		.cfi_endproc
 3893              	.LFE978:
 3895              		.section	.text.ADC_Disable,"ax",%progbits
 3896              		.align	1
 3897              		.global	ADC_Disable
 3898              		.syntax unified
 3899              		.thumb
 3900              		.thumb_func
 3902              	ADC_Disable:
 3903              	.LVL310:
 3904              	.LFB992:
2812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3905              		.loc 1 2812 1 is_stmt 1 view -0
 3906              		.cfi_startproc
 3907              		@ args = 0, pretend = 0, frame = 0
 3908              		@ frame_needed = 0, uses_anonymous_args = 0
2812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3909              		.loc 1 2812 1 is_stmt 0 view .LVU1188
 3910 0000 38B5     		push	{r3, r4, r5, lr}
 3911              	.LCFI30:
 3912              		.cfi_def_cfa_offset 16
 3913              		.cfi_offset 3, -16
 3914              		.cfi_offset 4, -12
 3915              		.cfi_offset 5, -8
 3916              		.cfi_offset 14, -4
 3917 0002 0446     		mov	r4, r0
2813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 3918              		.loc 1 2813 3 is_stmt 1 view .LVU1189
2814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3919              		.loc 1 2814 3 view .LVU1190
2814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3920              		.loc 1 2814 48 is_stmt 0 view .LVU1191
 3921 0004 0268     		ldr	r2, [r0]
 3922              	.LVL311:
 3923              	.LBB334:
 3924              	.LBI334:
4259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3925              		.loc 2 4259 26 is_stmt 1 view .LVU1192
 3926              	.LBB335:
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3927              		.loc 2 4261 3 view .LVU1193
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3928              		.loc 2 4261 12 is_stmt 0 view .LVU1194
 3929 0006 9368     		ldr	r3, [r2, #8]
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3930              		.loc 2 4261 70 view .LVU1195
 3931 0008 13F00203 		ands	r3, r3, #2
 3932 000c 00D0     		beq	.L247
 3933 000e 0123     		movs	r3, #1
 3934              	.L247:
 3935              	.LVL312:
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 245


 3936              		.loc 2 4261 70 view .LVU1196
 3937              	.LBE335:
 3938              	.LBE334:
2819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 3939              		.loc 1 2819 3 is_stmt 1 view .LVU1197
 3940              	.LBB336:
 3941              	.LBI336:
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3942              		.loc 2 4248 26 view .LVU1198
 3943              	.LBB337:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3944              		.loc 2 4250 3 view .LVU1199
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3945              		.loc 2 4250 12 is_stmt 0 view .LVU1200
 3946 0010 9168     		ldr	r1, [r2, #8]
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3947              		.loc 2 4250 68 view .LVU1201
 3948 0012 11F0010F 		tst	r1, #1
 3949 0016 39D0     		beq	.L252
 3950              	.LVL313:
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3951              		.loc 2 4250 68 view .LVU1202
 3952              	.LBE337:
 3953              	.LBE336:
2820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
 3954              		.loc 1 2820 7 view .LVU1203
 3955 0018 002B     		cmp	r3, #0
 3956 001a 39D1     		bne	.L253
2824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3957              		.loc 1 2824 5 is_stmt 1 view .LVU1204
2824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3958              		.loc 1 2824 24 is_stmt 0 view .LVU1205
 3959 001c 9368     		ldr	r3, [r2, #8]
 3960              	.LVL314:
2824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3961              		.loc 1 2824 29 view .LVU1206
 3962 001e 03F00503 		and	r3, r3, #5
2824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3963              		.loc 1 2824 8 view .LVU1207
 3964 0022 012B     		cmp	r3, #1
 3965 0024 09D0     		beq	.L255
2833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3966              		.loc 1 2833 7 is_stmt 1 view .LVU1208
 3967 0026 A36D     		ldr	r3, [r4, #88]
 3968 0028 43F01003 		orr	r3, r3, #16
 3969 002c A365     		str	r3, [r4, #88]
2836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3970              		.loc 1 2836 7 view .LVU1209
 3971 002e E36D     		ldr	r3, [r4, #92]
 3972 0030 43F00103 		orr	r3, r3, #1
 3973 0034 E365     		str	r3, [r4, #92]
2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3974              		.loc 1 2838 7 view .LVU1210
2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3975              		.loc 1 2838 14 is_stmt 0 view .LVU1211
 3976 0036 0120     		movs	r0, #1
 3977              	.LVL315:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 246


2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3978              		.loc 1 2838 14 view .LVU1212
 3979 0038 29E0     		b	.L248
 3980              	.LVL316:
 3981              	.L255:
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 3982              		.loc 1 2827 7 is_stmt 1 view .LVU1213
 3983              	.LBB338:
 3984              	.LBI338:
4229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3985              		.loc 2 4229 22 view .LVU1214
 3986              	.LBB339:
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3987              		.loc 2 4234 3 view .LVU1215
 3988 003a 9368     		ldr	r3, [r2, #8]
 3989 003c 23F00043 		bic	r3, r3, #-2147483648
 3990 0040 23F01703 		bic	r3, r3, #23
 3991 0044 43F00203 		orr	r3, r3, #2
 3992 0048 9360     		str	r3, [r2, #8]
 3993              	.LVL317:
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3994              		.loc 2 4234 3 is_stmt 0 view .LVU1216
 3995              	.LBE339:
 3996              	.LBE338:
2828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3997              		.loc 1 2828 7 is_stmt 1 view .LVU1217
 3998 004a 2368     		ldr	r3, [r4]
 3999 004c 0322     		movs	r2, #3
 4000 004e 1A60     		str	r2, [r3]
2843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4001              		.loc 1 2843 5 view .LVU1218
2843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4002              		.loc 1 2843 17 is_stmt 0 view .LVU1219
 4003 0050 FFF7FEFF 		bl	HAL_GetTick
 4004              	.LVL318:
2843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4005              		.loc 1 2843 17 view .LVU1220
 4006 0054 0546     		mov	r5, r0
 4007              	.LVL319:
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4008              		.loc 1 2845 5 is_stmt 1 view .LVU1221
 4009              	.L250:
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4010              		.loc 1 2845 11 view .LVU1222
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4011              		.loc 1 2845 17 is_stmt 0 view .LVU1223
 4012 0056 2368     		ldr	r3, [r4]
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4013              		.loc 1 2845 27 view .LVU1224
 4014 0058 9B68     		ldr	r3, [r3, #8]
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4015              		.loc 1 2845 11 view .LVU1225
 4016 005a 13F0010F 		tst	r3, #1
 4017 005e 13D0     		beq	.L256
2847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4018              		.loc 1 2847 7 is_stmt 1 view .LVU1226
2847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 247


 4019              		.loc 1 2847 12 is_stmt 0 view .LVU1227
 4020 0060 FFF7FEFF 		bl	HAL_GetTick
 4021              	.LVL320:
2847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4022              		.loc 1 2847 26 view .LVU1228
 4023 0064 401B     		subs	r0, r0, r5
2847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4024              		.loc 1 2847 10 view .LVU1229
 4025 0066 0228     		cmp	r0, #2
 4026 0068 F5D9     		bls	.L250
2850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4027              		.loc 1 2850 9 is_stmt 1 view .LVU1230
2850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4028              		.loc 1 2850 18 is_stmt 0 view .LVU1231
 4029 006a 2368     		ldr	r3, [r4]
2850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4030              		.loc 1 2850 28 view .LVU1232
 4031 006c 9B68     		ldr	r3, [r3, #8]
2850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4032              		.loc 1 2850 12 view .LVU1233
 4033 006e 13F0010F 		tst	r3, #1
 4034 0072 F0D0     		beq	.L250
2853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4035              		.loc 1 2853 11 is_stmt 1 view .LVU1234
 4036 0074 A36D     		ldr	r3, [r4, #88]
 4037 0076 43F01003 		orr	r3, r3, #16
 4038 007a A365     		str	r3, [r4, #88]
2856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4039              		.loc 1 2856 11 view .LVU1235
 4040 007c E36D     		ldr	r3, [r4, #92]
 4041 007e 43F00103 		orr	r3, r3, #1
 4042 0082 E365     		str	r3, [r4, #92]
2858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4043              		.loc 1 2858 11 view .LVU1236
2858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4044              		.loc 1 2858 18 is_stmt 0 view .LVU1237
 4045 0084 0120     		movs	r0, #1
 4046 0086 02E0     		b	.L248
 4047              	.L256:
2865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4048              		.loc 1 2865 10 view .LVU1238
 4049 0088 0020     		movs	r0, #0
 4050 008a 00E0     		b	.L248
 4051              	.LVL321:
 4052              	.L252:
2865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4053              		.loc 1 2865 10 view .LVU1239
 4054 008c 0020     		movs	r0, #0
 4055              	.LVL322:
 4056              	.L248:
2866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4057              		.loc 1 2866 1 view .LVU1240
 4058 008e 38BD     		pop	{r3, r4, r5, pc}
 4059              	.LVL323:
 4060              	.L253:
2865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4061              		.loc 1 2865 10 view .LVU1241
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 248


 4062 0090 0020     		movs	r0, #0
 4063              	.LVL324:
2865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4064              		.loc 1 2865 10 view .LVU1242
 4065 0092 FCE7     		b	.L248
 4066              		.cfi_endproc
 4067              	.LFE992:
 4069              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 4070              		.align	1
 4071              		.global	HAL_ADC_DeInit
 4072              		.syntax unified
 4073              		.thumb
 4074              		.thumb_func
 4076              	HAL_ADC_DeInit:
 4077              	.LVL325:
 4078              	.LFB969:
 777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4079              		.loc 1 777 1 is_stmt 1 view -0
 4080              		.cfi_startproc
 4081              		@ args = 0, pretend = 0, frame = 0
 4082              		@ frame_needed = 0, uses_anonymous_args = 0
 777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4083              		.loc 1 777 1 is_stmt 0 view .LVU1244
 4084 0000 70B5     		push	{r4, r5, r6, lr}
 4085              	.LCFI31:
 4086              		.cfi_def_cfa_offset 16
 4087              		.cfi_offset 4, -16
 4088              		.cfi_offset 5, -12
 4089              		.cfi_offset 6, -8
 4090              		.cfi_offset 14, -4
 778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4091              		.loc 1 778 3 is_stmt 1 view .LVU1245
 781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4092              		.loc 1 781 3 view .LVU1246
 781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4093              		.loc 1 781 6 is_stmt 0 view .LVU1247
 4094 0002 0028     		cmp	r0, #0
 4095 0004 4CD0     		beq	.L261
 4096 0006 0446     		mov	r4, r0
 787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4097              		.loc 1 787 3 is_stmt 1 view .LVU1248
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4098              		.loc 1 790 3 view .LVU1249
 4099 0008 836D     		ldr	r3, [r0, #88]
 4100 000a 43F00203 		orr	r3, r3, #2
 4101 000e 8365     		str	r3, [r0, #88]
 793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4102              		.loc 1 793 3 view .LVU1250
 793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4103              		.loc 1 793 20 is_stmt 0 view .LVU1251
 4104 0010 FFF7FEFF 		bl	ADC_ConversionStop
 4105              	.LVL326:
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4106              		.loc 1 796 3 is_stmt 1 view .LVU1252
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4107              		.loc 1 796 6 is_stmt 0 view .LVU1253
 4108 0014 0646     		mov	r6, r0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 249


 4109 0016 0028     		cmp	r0, #0
 4110 0018 33D0     		beq	.L263
 4111              	.L259:
 4112              	.LVL327:
 820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 4113              		.loc 1 820 3 is_stmt 1 view .LVU1254
 4114 001a 2268     		ldr	r2, [r4]
 4115 001c 5368     		ldr	r3, [r2, #4]
 4116 001e 23F46773 		bic	r3, r3, #924
 4117 0022 23F00303 		bic	r3, r3, #3
 4118 0026 5360     		str	r3, [r2, #4]
 826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 4119              		.loc 1 826 3 view .LVU1255
 4120 0028 2368     		ldr	r3, [r4]
 4121 002a 40F29F32 		movw	r2, #927
 4122 002e 1A60     		str	r2, [r3]
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4123              		.loc 1 836 3 view .LVU1256
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4124              		.loc 1 836 7 is_stmt 0 view .LVU1257
 4125 0030 2268     		ldr	r2, [r4]
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4126              		.loc 1 836 25 view .LVU1258
 4127 0032 D168     		ldr	r1, [r2, #12]
 4128 0034 1B4B     		ldr	r3, .L264
 4129 0036 0B40     		ands	r3, r3, r1
 4130 0038 D360     		str	r3, [r2, #12]
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4131              		.loc 1 844 3 is_stmt 1 view .LVU1259
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4132              		.loc 1 844 7 is_stmt 0 view .LVU1260
 4133 003a 2268     		ldr	r2, [r4]
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4134              		.loc 1 844 25 view .LVU1261
 4135 003c 1369     		ldr	r3, [r2, #16]
 4136 003e 23F04043 		bic	r3, r3, #-1073741824
 4137 0042 1361     		str	r3, [r2, #16]
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4138              		.loc 1 847 3 is_stmt 1 view .LVU1262
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4139              		.loc 1 847 7 is_stmt 0 view .LVU1263
 4140 0044 2268     		ldr	r2, [r4]
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4141              		.loc 1 847 24 view .LVU1264
 4142 0046 5369     		ldr	r3, [r2, #20]
 4143 0048 23F00703 		bic	r3, r3, #7
 4144 004c 5361     		str	r3, [r2, #20]
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4145              		.loc 1 850 3 is_stmt 1 view .LVU1265
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4146              		.loc 1 850 7 is_stmt 0 view .LVU1266
 4147 004e 2268     		ldr	r2, [r4]
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4148              		.loc 1 850 23 view .LVU1267
 4149 0050 136A     		ldr	r3, [r2, #32]
 4150 0052 03F0F023 		and	r3, r3, #-268374016
 4151 0056 1362     		str	r3, [r2, #32]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 250


 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4152              		.loc 1 853 3 is_stmt 1 view .LVU1268
 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4153              		.loc 1 853 7 is_stmt 0 view .LVU1269
 4154 0058 2368     		ldr	r3, [r4]
 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4155              		.loc 1 853 26 view .LVU1270
 4156 005a 9A6A     		ldr	r2, [r3, #40]
 4157 005c 0025     		movs	r5, #0
 4158 005e 9D62     		str	r5, [r3, #40]
 859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4159              		.loc 1 859 3 is_stmt 1 view .LVU1271
 859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4160              		.loc 1 859 19 is_stmt 0 view .LVU1272
 4161 0060 114A     		ldr	r2, .L264+4
 4162 0062 D2F80837 		ldr	r3, [r2, #1800]
 4163 0066 23F0FE73 		bic	r3, r3, #33292288
 4164 006a C2F80837 		str	r3, [r2, #1800]
 878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 4165              		.loc 1 878 3 is_stmt 1 view .LVU1273
 4166 006e 2046     		mov	r0, r4
 4167 0070 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 4168              	.LVL328:
 882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4169              		.loc 1 882 3 view .LVU1274
 882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4170              		.loc 1 882 39 is_stmt 0 view .LVU1275
 4171 0074 2566     		str	r5, [r4, #96]
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4172              		.loc 1 885 3 is_stmt 1 view .LVU1276
 4173 0076 E565     		str	r5, [r4, #92]
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4174              		.loc 1 888 3 view .LVU1277
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4175              		.loc 1 888 15 is_stmt 0 view .LVU1278
 4176 0078 A565     		str	r5, [r4, #88]
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4177              		.loc 1 890 3 is_stmt 1 view .LVU1279
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4178              		.loc 1 890 3 view .LVU1280
 4179 007a 84F85450 		strb	r5, [r4, #84]
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4180              		.loc 1 890 3 view .LVU1281
 892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4181              		.loc 1 892 3 view .LVU1282
 4182              	.LVL329:
 4183              	.L258:
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4184              		.loc 1 893 1 is_stmt 0 view .LVU1283
 4185 007e 3046     		mov	r0, r6
 4186 0080 70BD     		pop	{r4, r5, r6, pc}
 4187              	.LVL330:
 4188              	.L263:
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4189              		.loc 1 799 5 is_stmt 1 view .LVU1284
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4190              		.loc 1 799 22 is_stmt 0 view .LVU1285
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 251


 4191 0082 2046     		mov	r0, r4
 4192              	.LVL331:
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4193              		.loc 1 799 22 view .LVU1286
 4194 0084 FFF7FEFF 		bl	ADC_Disable
 4195              	.LVL332:
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4196              		.loc 1 802 5 is_stmt 1 view .LVU1287
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4197              		.loc 1 802 8 is_stmt 0 view .LVU1288
 4198 0088 0646     		mov	r6, r0
 4199 008a 08B9     		cbnz	r0, .L260
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 4200              		.loc 1 805 7 is_stmt 1 view .LVU1289
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 4201              		.loc 1 805 19 is_stmt 0 view .LVU1290
 4202 008c 0123     		movs	r3, #1
 4203 008e A365     		str	r3, [r4, #88]
 4204              	.L260:
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4205              		.loc 1 809 5 is_stmt 1 view .LVU1291
 4206 0090 2268     		ldr	r2, [r4]
 4207              	.LVL333:
 4208              	.LBB340:
 4209              	.LBI340:
4177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4210              		.loc 2 4177 22 view .LVU1292
 4211              	.LBB341:
4179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4212              		.loc 2 4179 3 view .LVU1293
 4213 0092 9368     		ldr	r3, [r2, #8]
 4214 0094 23F01043 		bic	r3, r3, #-1879048192
 4215 0098 23F01703 		bic	r3, r3, #23
 4216 009c 9360     		str	r3, [r2, #8]
4180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4217              		.loc 2 4180 1 is_stmt 0 view .LVU1294
 4218 009e BCE7     		b	.L259
 4219              	.LVL334:
 4220              	.L261:
4180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4221              		.loc 2 4180 1 view .LVU1295
 4222              	.LBE341:
 4223              	.LBE340:
 783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4224              		.loc 1 783 12 view .LVU1296
 4225 00a0 0126     		movs	r6, #1
 4226 00a2 ECE7     		b	.L258
 4227              	.L265:
 4228              		.align	2
 4229              	.L264:
 4230 00a4 00023E83 		.word	-2093088256
 4231 00a8 00200140 		.word	1073815552
 4232              		.cfi_endproc
 4233              	.LFE969:
 4235              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 4236              		.align	1
 4237              		.global	HAL_ADC_Stop
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 252


 4238              		.syntax unified
 4239              		.thumb
 4240              		.thumb_func
 4242              	HAL_ADC_Stop:
 4243              	.LVL335:
 4244              	.LFB973:
1252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4245              		.loc 1 1252 1 is_stmt 1 view -0
 4246              		.cfi_startproc
 4247              		@ args = 0, pretend = 0, frame = 0
 4248              		@ frame_needed = 0, uses_anonymous_args = 0
1253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4249              		.loc 1 1253 3 view .LVU1298
1256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4250              		.loc 1 1256 3 view .LVU1299
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4251              		.loc 1 1258 3 view .LVU1300
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4252              		.loc 1 1258 3 view .LVU1301
 4253 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4254 0004 012B     		cmp	r3, #1
 4255 0006 19D0     		beq	.L269
1252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4256              		.loc 1 1252 1 is_stmt 0 discriminator 2 view .LVU1302
 4257 0008 10B5     		push	{r4, lr}
 4258              	.LCFI32:
 4259              		.cfi_def_cfa_offset 8
 4260              		.cfi_offset 4, -8
 4261              		.cfi_offset 14, -4
 4262 000a 0446     		mov	r4, r0
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4263              		.loc 1 1258 3 is_stmt 1 discriminator 2 view .LVU1303
 4264 000c 0123     		movs	r3, #1
 4265 000e 80F85430 		strb	r3, [r0, #84]
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4266              		.loc 1 1258 3 discriminator 2 view .LVU1304
1261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4267              		.loc 1 1261 3 discriminator 2 view .LVU1305
1261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4268              		.loc 1 1261 20 is_stmt 0 discriminator 2 view .LVU1306
 4269 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4270              	.LVL336:
1264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4271              		.loc 1 1264 3 is_stmt 1 discriminator 2 view .LVU1307
1264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4272              		.loc 1 1264 6 is_stmt 0 discriminator 2 view .LVU1308
 4273 0016 18B1     		cbz	r0, .L274
 4274              	.L268:
1279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4275              		.loc 1 1279 3 is_stmt 1 view .LVU1309
1279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4276              		.loc 1 1279 3 view .LVU1310
 4277 0018 0023     		movs	r3, #0
 4278 001a 84F85430 		strb	r3, [r4, #84]
1279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4279              		.loc 1 1279 3 view .LVU1311
1281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 253


 4280              		.loc 1 1281 3 view .LVU1312
1282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4281              		.loc 1 1282 1 is_stmt 0 view .LVU1313
 4282 001e 10BD     		pop	{r4, pc}
 4283              	.LVL337:
 4284              	.L274:
1267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4285              		.loc 1 1267 5 is_stmt 1 view .LVU1314
1267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4286              		.loc 1 1267 22 is_stmt 0 view .LVU1315
 4287 0020 2046     		mov	r0, r4
 4288              	.LVL338:
1267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4289              		.loc 1 1267 22 view .LVU1316
 4290 0022 FFF7FEFF 		bl	ADC_Disable
 4291              	.LVL339:
1270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4292              		.loc 1 1270 5 is_stmt 1 view .LVU1317
1270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4293              		.loc 1 1270 8 is_stmt 0 view .LVU1318
 4294 0026 0028     		cmp	r0, #0
 4295 0028 F6D1     		bne	.L268
1273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4296              		.loc 1 1273 7 is_stmt 1 view .LVU1319
 4297 002a A36D     		ldr	r3, [r4, #88]
 4298 002c 23F48073 		bic	r3, r3, #256
 4299 0030 23F00103 		bic	r3, r3, #1
 4300 0034 43F00103 		orr	r3, r3, #1
 4301 0038 A365     		str	r3, [r4, #88]
 4302 003a EDE7     		b	.L268
 4303              	.LVL340:
 4304              	.L269:
 4305              	.LCFI33:
 4306              		.cfi_def_cfa_offset 0
 4307              		.cfi_restore 4
 4308              		.cfi_restore 14
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4309              		.loc 1 1258 3 is_stmt 0 view .LVU1320
 4310 003c 0220     		movs	r0, #2
 4311              	.LVL341:
1282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4312              		.loc 1 1282 1 view .LVU1321
 4313 003e 7047     		bx	lr
 4314              		.cfi_endproc
 4315              	.LFE973:
 4317              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 4318              		.align	1
 4319              		.global	HAL_ADC_Stop_IT
 4320              		.syntax unified
 4321              		.thumb
 4322              		.thumb_func
 4324              	HAL_ADC_Stop_IT:
 4325              	.LVL342:
 4326              	.LFB977:
1654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4327              		.loc 1 1654 1 is_stmt 1 view -0
 4328              		.cfi_startproc
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 254


 4329              		@ args = 0, pretend = 0, frame = 0
 4330              		@ frame_needed = 0, uses_anonymous_args = 0
1655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4331              		.loc 1 1655 3 view .LVU1323
1658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4332              		.loc 1 1658 3 view .LVU1324
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4333              		.loc 1 1660 3 view .LVU1325
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4334              		.loc 1 1660 3 view .LVU1326
 4335 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4336 0004 012B     		cmp	r3, #1
 4337 0006 1ED0     		beq	.L278
1654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4338              		.loc 1 1654 1 is_stmt 0 discriminator 2 view .LVU1327
 4339 0008 10B5     		push	{r4, lr}
 4340              	.LCFI34:
 4341              		.cfi_def_cfa_offset 8
 4342              		.cfi_offset 4, -8
 4343              		.cfi_offset 14, -4
 4344 000a 0446     		mov	r4, r0
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4345              		.loc 1 1660 3 is_stmt 1 discriminator 2 view .LVU1328
 4346 000c 0123     		movs	r3, #1
 4347 000e 80F85430 		strb	r3, [r0, #84]
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4348              		.loc 1 1660 3 discriminator 2 view .LVU1329
1663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4349              		.loc 1 1663 3 discriminator 2 view .LVU1330
1663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4350              		.loc 1 1663 20 is_stmt 0 discriminator 2 view .LVU1331
 4351 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4352              	.LVL343:
1666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4353              		.loc 1 1666 3 is_stmt 1 discriminator 2 view .LVU1332
1666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4354              		.loc 1 1666 6 is_stmt 0 discriminator 2 view .LVU1333
 4355 0016 18B1     		cbz	r0, .L283
 4356              	.L277:
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4357              		.loc 1 1685 3 is_stmt 1 view .LVU1334
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4358              		.loc 1 1685 3 view .LVU1335
 4359 0018 0023     		movs	r3, #0
 4360 001a 84F85430 		strb	r3, [r4, #84]
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4361              		.loc 1 1685 3 view .LVU1336
1687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4362              		.loc 1 1687 3 view .LVU1337
1688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4363              		.loc 1 1688 1 is_stmt 0 view .LVU1338
 4364 001e 10BD     		pop	{r4, pc}
 4365              	.LVL344:
 4366              	.L283:
1670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4367              		.loc 1 1670 5 is_stmt 1 view .LVU1339
 4368 0020 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 255


 4369 0022 5368     		ldr	r3, [r2, #4]
 4370 0024 23F01C03 		bic	r3, r3, #28
 4371 0028 5360     		str	r3, [r2, #4]
1673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4372              		.loc 1 1673 5 view .LVU1340
1673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4373              		.loc 1 1673 22 is_stmt 0 view .LVU1341
 4374 002a 2046     		mov	r0, r4
 4375              	.LVL345:
1673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4376              		.loc 1 1673 22 view .LVU1342
 4377 002c FFF7FEFF 		bl	ADC_Disable
 4378              	.LVL346:
1676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4379              		.loc 1 1676 5 is_stmt 1 view .LVU1343
1676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4380              		.loc 1 1676 8 is_stmt 0 view .LVU1344
 4381 0030 0028     		cmp	r0, #0
 4382 0032 F1D1     		bne	.L277
1679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4383              		.loc 1 1679 7 is_stmt 1 view .LVU1345
 4384 0034 A36D     		ldr	r3, [r4, #88]
 4385 0036 23F48073 		bic	r3, r3, #256
 4386 003a 23F00103 		bic	r3, r3, #1
 4387 003e 43F00103 		orr	r3, r3, #1
 4388 0042 A365     		str	r3, [r4, #88]
 4389 0044 E8E7     		b	.L277
 4390              	.LVL347:
 4391              	.L278:
 4392              	.LCFI35:
 4393              		.cfi_def_cfa_offset 0
 4394              		.cfi_restore 4
 4395              		.cfi_restore 14
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4396              		.loc 1 1660 3 is_stmt 0 view .LVU1346
 4397 0046 0220     		movs	r0, #2
 4398              	.LVL348:
1688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4399              		.loc 1 1688 1 view .LVU1347
 4400 0048 7047     		bx	lr
 4401              		.cfi_endproc
 4402              	.LFE977:
 4404              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4405              		.align	1
 4406              		.global	HAL_ADC_Stop_DMA
 4407              		.syntax unified
 4408              		.thumb
 4409              		.thumb_func
 4411              	HAL_ADC_Stop_DMA:
 4412              	.LVL349:
 4413              	.LFB979:
1797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4414              		.loc 1 1797 1 is_stmt 1 view -0
 4415              		.cfi_startproc
 4416              		@ args = 0, pretend = 0, frame = 0
 4417              		@ frame_needed = 0, uses_anonymous_args = 0
1797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 256


 4418              		.loc 1 1797 1 is_stmt 0 view .LVU1349
 4419 0000 38B5     		push	{r3, r4, r5, lr}
 4420              	.LCFI36:
 4421              		.cfi_def_cfa_offset 16
 4422              		.cfi_offset 3, -16
 4423              		.cfi_offset 4, -12
 4424              		.cfi_offset 5, -8
 4425              		.cfi_offset 14, -4
1798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4426              		.loc 1 1798 3 is_stmt 1 view .LVU1350
1801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4427              		.loc 1 1801 3 view .LVU1351
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4428              		.loc 1 1803 3 view .LVU1352
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4429              		.loc 1 1803 3 view .LVU1353
 4430 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 4431 0006 012B     		cmp	r3, #1
 4432 0008 38D0     		beq	.L291
 4433 000a 0446     		mov	r4, r0
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4434              		.loc 1 1803 3 discriminator 2 view .LVU1354
 4435 000c 0123     		movs	r3, #1
 4436 000e 80F85430 		strb	r3, [r0, #84]
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4437              		.loc 1 1803 3 discriminator 2 view .LVU1355
1806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4438              		.loc 1 1806 3 discriminator 2 view .LVU1356
1806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4439              		.loc 1 1806 20 is_stmt 0 discriminator 2 view .LVU1357
 4440 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4441              	.LVL350:
1809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4442              		.loc 1 1809 3 is_stmt 1 discriminator 2 view .LVU1358
1809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4443              		.loc 1 1809 6 is_stmt 0 discriminator 2 view .LVU1359
 4444 0016 0546     		mov	r5, r0
 4445 0018 E8B9     		cbnz	r0, .L286
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4446              		.loc 1 1813 5 is_stmt 1 view .LVU1360
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4447              		.loc 1 1813 13 is_stmt 0 view .LVU1361
 4448 001a 206D     		ldr	r0, [r4, #80]
 4449              	.LVL351:
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4450              		.loc 1 1813 25 view .LVU1362
 4451 001c 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 4452 0020 DBB2     		uxtb	r3, r3
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4453              		.loc 1 1813 8 view .LVU1363
 4454 0022 022B     		cmp	r3, #2
 4455 0024 1CD0     		beq	.L293
 4456              	.L287:
 4457              	.LVL352:
1826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4458              		.loc 1 1826 5 is_stmt 1 view .LVU1364
 4459 0026 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 257


 4460 0028 5368     		ldr	r3, [r2, #4]
 4461 002a 23F01003 		bic	r3, r3, #16
 4462 002e 5360     		str	r3, [r2, #4]
1831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4463              		.loc 1 1831 5 view .LVU1365
1831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4464              		.loc 1 1831 8 is_stmt 0 view .LVU1366
 4465 0030 05BB     		cbnz	r5, .L288
1833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 4466              		.loc 1 1833 7 is_stmt 1 view .LVU1367
1833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 4467              		.loc 1 1833 24 is_stmt 0 view .LVU1368
 4468 0032 2046     		mov	r0, r4
 4469 0034 FFF7FEFF 		bl	ADC_Disable
 4470              	.LVL353:
 4471 0038 0546     		mov	r5, r0
 4472              	.LVL354:
 4473              	.L289:
1841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4474              		.loc 1 1841 5 is_stmt 1 view .LVU1369
1841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 4475              		.loc 1 1841 8 is_stmt 0 view .LVU1370
 4476 003a 3DB9     		cbnz	r5, .L290
1844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4477              		.loc 1 1844 7 is_stmt 1 view .LVU1371
 4478 003c A36D     		ldr	r3, [r4, #88]
 4479 003e 23F48073 		bic	r3, r3, #256
 4480 0042 23F00103 		bic	r3, r3, #1
 4481 0046 43F00103 		orr	r3, r3, #1
 4482 004a A365     		str	r3, [r4, #88]
 4483              	.L290:
1850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4484              		.loc 1 1850 5 view .LVU1372
 4485 004c 2268     		ldr	r2, [r4]
 4486 004e D368     		ldr	r3, [r2, #12]
 4487 0050 23F00103 		bic	r3, r3, #1
 4488 0054 D360     		str	r3, [r2, #12]
 4489              	.LVL355:
 4490              	.L286:
1853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4491              		.loc 1 1853 3 view .LVU1373
1853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4492              		.loc 1 1853 3 view .LVU1374
 4493 0056 0023     		movs	r3, #0
 4494 0058 84F85430 		strb	r3, [r4, #84]
1853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4495              		.loc 1 1853 3 view .LVU1375
1855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4496              		.loc 1 1855 3 view .LVU1376
 4497              	.LVL356:
 4498              	.L285:
1856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4499              		.loc 1 1856 1 is_stmt 0 view .LVU1377
 4500 005c 2846     		mov	r0, r5
 4501 005e 38BD     		pop	{r3, r4, r5, pc}
 4502              	.LVL357:
 4503              	.L293:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 258


1815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4504              		.loc 1 1815 7 is_stmt 1 view .LVU1378
1815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4505              		.loc 1 1815 24 is_stmt 0 view .LVU1379
 4506 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 4507              	.LVL358:
1818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4508              		.loc 1 1818 7 is_stmt 1 view .LVU1380
1818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4509              		.loc 1 1818 10 is_stmt 0 view .LVU1381
 4510 0064 0546     		mov	r5, r0
 4511 0066 0028     		cmp	r0, #0
 4512 0068 DDD0     		beq	.L287
1821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 4513              		.loc 1 1821 9 is_stmt 1 view .LVU1382
 4514 006a A36D     		ldr	r3, [r4, #88]
 4515 006c 43F04003 		orr	r3, r3, #64
 4516 0070 A365     		str	r3, [r4, #88]
 4517 0072 D8E7     		b	.L287
 4518              	.LVL359:
 4519              	.L288:
1837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 4520              		.loc 1 1837 7 view .LVU1383
1837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 4521              		.loc 1 1837 13 is_stmt 0 view .LVU1384
 4522 0074 2046     		mov	r0, r4
 4523 0076 FFF7FEFF 		bl	ADC_Disable
 4524              	.LVL360:
 4525 007a DEE7     		b	.L289
 4526              	.LVL361:
 4527              	.L291:
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4528              		.loc 1 1803 3 view .LVU1385
 4529 007c 0225     		movs	r5, #2
 4530 007e EDE7     		b	.L285
 4531              		.cfi_endproc
 4532              	.LFE979:
 4534              		.text
 4535              	.Letext0:
 4536              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 4537              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 4538              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 4539              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 4540              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 4541              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 4542              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc.h"
 4543              		.file 11 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/system_stm32wlxx.h"
 4544              		.file 12 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 4545              		.file 13 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 4546              		.file 14 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc_ex.h"
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 259


DEFINED SYMBOLS
                            *ABS*:00000000 stm32wlxx_hal_adc.c
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:18     .text.HAL_ADC_MspInit:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:24     .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:40     .text.HAL_ADC_Init:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:46     .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:630    .text.HAL_ADC_Init:00000264 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:640    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:646    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:661    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:667    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:865    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:871    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1040   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1046   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1067   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1073   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1088   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1094   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1109   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1114   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1141   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1147   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1162   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1168   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1183   .text.ADC_DMAError:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1188   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1222   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1227   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1361   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1367   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1669   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:1675   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2280   .text.HAL_ADC_ConfigChannel:00000224 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2291   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2297   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2964   .text.HAL_ADC_AnalogWDGConfig:0000022c $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2970   .text.HAL_ADC_GetState:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2976   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:2995   .text.HAL_ADC_GetError:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3001   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3020   .text.ADC_ConversionStop:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3026   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3155   .text.ADC_Enable:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3161   .text.ADC_Enable:00000000 ADC_Enable
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3394   .text.ADC_Enable:000000d0 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3402   .text.HAL_ADC_Start:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3408   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3528   .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3534   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3692   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3698   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3889   .text.HAL_ADC_Start_DMA:000000b8 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3896   .text.ADC_Disable:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:3902   .text.ADC_Disable:00000000 ADC_Disable
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4070   .text.HAL_ADC_DeInit:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4076   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s 			page 260


C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4230   .text.HAL_ADC_DeInit:000000a4 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4236   .text.HAL_ADC_Stop:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4242   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4318   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4324   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4405   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccDhNbfU.s:4411   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_ChannelConfigReadyCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
