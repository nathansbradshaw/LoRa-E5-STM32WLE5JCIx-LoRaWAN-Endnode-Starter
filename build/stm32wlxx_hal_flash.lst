ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.FLASH_Program_DoubleWord,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	FLASH_Program_DoubleWord:
  24              	.LVL0:
  25              	.LFB980:
  26              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c"
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @file    stm32wlxx_hal_flash.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *           + Memory Control functions
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  @verbatim
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ==============================================================================
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ==============================================================================
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        and the read and write protection mechanisms.
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        prefetch and cache lines.
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   [..] The FLASH main features are:
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Flash memory read operations
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Flash memory program/erase operations
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Program and Erase suspension
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Read / write protections (2 areas per features)
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) CPU2 Security area
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Option bytes programming
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Prefetch on CPU1 I-Code and CPU2 S-bus
  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 32 instruction cache lines of 4*64 bits on I-Code for CPU1
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 2


  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 8 data cache lines of 4*64 bits on D-Code for CPU1
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 4 instruction cache lines of 1*64 bits on S-bus for CPU2
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 4 data cache lines of 1*64 bits on S-Bus for CPU2
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 72-bits word
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****           (8 bits added per double word)
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                         ##### How to use this driver #####
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ==============================================================================
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       memory of all STM32WLxx devices.
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Program functions: double word and fast program (full row programming)
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) There are two modes of programming:
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (#) Interrupts and flags management functions:
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (#) Option bytes management functions :
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 In this case, a reset is generated
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       to handle the following operations:
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Set the latency
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the suspend program or erase request
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Monitor the Flash flags status
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  @endverbatim
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @attention
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * All rights reserved.</center></h2>
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * the "License"; You may not use this file except in compliance with the
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * License. You may obtain a copy of the License at:
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                       opensource.org/licenses/BSD-3-Clause
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 3


  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #include "stm32wlxx_hal.h"
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup STM32WLxx_HAL_Driver
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH FLASH
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief FLASH HAL module driver
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #define FLASH_NB_DOUBLE_WORDS_IN_ROW  32
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  * @{
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  */
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** FLASH_ProcessTypeDef pFlash = {.Lock = HAL_UNLOCKED, \
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .ErrorCode = HAL_FLASH_ERROR_NONE, \
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .ProcedureOnGoing = 0U, \
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .Address = 0U, \
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .Page = 0U, \
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .NbPagesToErase = 0U
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                               };
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  * @{
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  */
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void          FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void          FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress);
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 4


 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Programming operation functions
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                   ##### Programming operation functions #####
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     program operations.
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address.
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @note   Before any operation, it is possible to check there is no operation suspended
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *         by call HAL_FLASHEx_IsOperationSuspended()
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                       This parameter can be a value of @ref FLASH_TYPE_PROGRAM
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                are stored the data for the row fast program.
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Check the parameters */
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Process Locked */
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Reset error code */
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Verify that next operation can be proceed */
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (status == HAL_OK)
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 5


 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     else
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Fast program a 32 double-word (64-bit) row at a specified address */
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Wait for last operation to be completed */
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* If the program operation is completed, disable the PG or FSTPG Bit */
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     CLEAR_BIT(FLASH->C2CR, TypeProgram);
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     CLEAR_BIT(FLASH->CR, TypeProgram);
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Process Unlocked */
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* return status */
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address with interrupt enab
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @note   Before any operation, it is possible to check there is no operation suspended
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *         by call HAL_FLASHEx_IsOperationSuspended()
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_TYPE_PROGRAM
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                are stored the data for the row fast program.
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Check the parameters */
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Process Locked */
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Reset error code */
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 6


 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Verify that next operation can be proceed */
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (status != HAL_OK)
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Process Unlocked */
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   else
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Enable End of Operation and Error interrupts */
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR | FLASH_IT_ECCC);
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     else
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Fast program a 32 double-word (64-bit) row at a specified address */
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* return status */
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief Handle FLASH interrupt request.
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Save flash errors. Only ECC detection can be checked here as ECCC
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      generates NMI */
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = (FLASH->C2SR & FLASH_FLAG_SR_ERRORS);
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Clear Current operation */
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   CLEAR_BIT(FLASH->C2CR, pFlash.ProcedureOnGoing);
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 7


 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Clear Current operation */
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, pFlash.ProcedureOnGoing);
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* A] Set parameter for user or error callbacks */
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* check operation was a program or erase */
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if ((pFlash.ProcedureOnGoing & (FLASH_TYPEPROGRAM_DOUBLEWORD | FLASH_TYPEPROGRAM_FAST)) != 0U)
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* return address being programmed */
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     param = pFlash.Address;
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   else if ((pFlash.ProcedureOnGoing & (FLASH_TYPEERASE_MASSERASE | FLASH_TYPEERASE_PAGES)) != 0U)
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* return page number being erased (0 for mass erase) */
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     param = pFlash.Page;
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   else
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* No Procedure on-going */
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Nothing to do, but check error if any */
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* B] Check errors */
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (error != 0U)
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /*Save the error code*/
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ErrorCode |= error;
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* clear error flags */
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /*Stop the procedure ongoing*/
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Error callback */
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(param);
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* C] Check FLASH End of Operation flag */
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP))
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (pFlash.ProcedureOnGoing == FLASH_TYPEERASE_PAGES)
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Nb of pages to erased can be decreased */
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       pFlash.NbPagesToErase--;
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check if there are still pages to erase*/
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       if (pFlash.NbPagesToErase != 0U)
 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         /* Increment page number */
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         pFlash.Page++;
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 8


 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       else
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         /* No more pages to erase: stop erase pages procedure */
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     else
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /*Stop the ongoing procedure */
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* User callback */
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     HAL_FLASH_EndOfOperationCallback(param);
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (pFlash.ProcedureOnGoing == FLASH_TYPENONE)
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR | FLASH_IT_ECCC);
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Process Unlocked */
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                  Mass Erase: 0
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                  Page Erase: Page which has been erased
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                  Program: Address which was selected for data program
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   UNUSED(ReturnValue);
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****    */
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                 Mass Erase: 0
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                 Page Erase: Page number which returned an error
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                 Program: Address which was selected for data program
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   UNUSED(ReturnValue);
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 9


 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****    */
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Management functions
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                       ##### Peripheral Control functions #####
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     memory operations.
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* verify Flash is unlock */
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       status = HAL_ERROR;
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 10


 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* @Note  The lock and unlock procedure is done only using CR registers even from CPU2 */
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* verify Flash is locked */
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) == 0U)
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     status = HAL_ERROR;
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* @Note The lock and unlock procedure is done only using CR registers even from CPU2 */
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* verify option bytes are unlocked */
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) == 0U)
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       status = HAL_OK;
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* @Note The lock and unlock procedure is done only using CR registers even from CPU2 */
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OPTLOCK);
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* verify option bytes are lock */
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) == 0U)
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     status = HAL_ERROR;
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 11


 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Launch the option byte loading.
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* The OB launch is done from the same register either from CPU1 or CPU2 */
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OBL_LAUNCH);
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* We should not reach here : Option byte launch generates Option byte reset
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      so return error */
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return HAL_ERROR;
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval FLASH_ErrorCode The returned value can be
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_NONE No error set
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_OP FLASH Operation error
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PROG FLASH Programming error
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_WRP FLASH Write protection error
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PGA FLASH Programming alignment error
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_SIZ FLASH Size error
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PGS FLASH Programming sequence error
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_MIS FLASH Fast programming data miss error
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_FAST FLASH Fast programming error
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_RD FLASH Read Protection error (PCROP)
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_OPTV FLASH Option validity error
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return pFlash.ErrorCode;
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 12


 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Timeout Maximum flash operation timeout
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      flag will be set */
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY))
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) >= Timeout)
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       return HAL_TIMEOUT;
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* check flash errors. Only ECC correction can be checked here as ECCD
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       generates NMI */
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = FLASH->C2SR;
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = FLASH->SR;
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Check FLASH End of Operation flag */
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if ((error & FLASH_FLAG_EOP) != 0U)
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Now update error variable to only error value */
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error &= FLASH_FLAG_SR_ERRORS;
 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* clear error flags */
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(error);
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (error != 0U)
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /*Save the error code*/
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ErrorCode = error;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 13


 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     return HAL_ERROR;
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Wait for control register to be written */
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CFGBSY))
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) >= Timeout)
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       return HAL_TIMEOUT;
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return HAL_OK;
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double-word (64-bit) at a specified address.
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed.
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
  27              		.loc 1 683 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 683 1 is_stmt 0 view .LVU1
  33 0000 10B4     		push	{r4}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set PG bit */
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->C2CR, FLASH_CR_PG);
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set PG bit */
 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_PG);
  37              		.loc 1 689 3 is_stmt 1 view .LVU2
  38 0002 054C     		ldr	r4, .L3
  39 0004 6169     		ldr	r1, [r4, #20]
  40 0006 41F00101 		orr	r1, r1, #1
  41 000a 6161     		str	r1, [r4, #20]
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Program first word */
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *(uint32_t *)Address = (uint32_t)Data;
  42              		.loc 1 693 3 view .LVU3
  43              		.loc 1 693 24 is_stmt 0 view .LVU4
  44 000c 0260     		str	r2, [r0]
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     (independently of compiler optimization behavior) */
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __ISB();
  45              		.loc 1 697 3 is_stmt 1 view .LVU5
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 14


  46              	.LBB10:
  47              	.LBI10:
  48              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 15


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 16


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 17


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 18


 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 19


 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 20


 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 21


 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 22


 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 23


 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 24


 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 25


 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 26


 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 27


 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 28


 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 29


 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 30


 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
  49              		.loc 2 933 27 view .LVU6
  50              	.LBB11:
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
  51              		.loc 2 935 3 view .LVU7
  52              		.syntax unified
  53              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  54 000e BFF36F8F 		isb 0xF
  55              	@ 0 "" 2
  56              		.thumb
  57              		.syntax unified
  58              	.LBE11:
  59              	.LBE10:
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Program second word */
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *(uint32_t *)(Address + 4U) = (uint32_t)(Data >> 32U);
  60              		.loc 1 700 3 view .LVU8
  61              		.loc 1 700 31 is_stmt 0 view .LVU9
  62 0012 4360     		str	r3, [r0, #4]
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
  63              		.loc 1 701 1 view .LVU10
  64 0014 10BC     		pop	{r4}
  65              	.LCFI1:
  66              		.cfi_restore 4
  67              		.cfi_def_cfa_offset 0
  68 0016 7047     		bx	lr
  69              	.L4:
  70              		.align	2
  71              	.L3:
  72 0018 00400058 		.word	1476411392
  73              		.cfi_endproc
  74              	.LFE980:
  76              		.section	.text.FLASH_Program_Fast,"ax",%progbits
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 31


  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	FLASH_Program_Fast:
  83              	.LVL1:
  84              	.LFB981:
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Fast program a 32 row double-word (64-bit) at a specified address.
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  DataAddress Specifies the address where the data are stored.
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static __RAM_FUNC void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
  85              		.loc 1 714 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		@ link register save eliminated.
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint8_t row_index = (2 * FLASH_NB_DOUBLE_WORDS_IN_ROW);
  90              		.loc 1 715 3 view .LVU12
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)Address;
  91              		.loc 1 716 3 view .LVU13
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t *)DataAddress;
  92              		.loc 1 717 3 view .LVU14
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t primask_bit;
  93              		.loc 1 718 3 view .LVU15
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set FSTPG bit */
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->C2CR, FLASH_CR_FSTPG);
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
  94              		.loc 1 724 3 view .LVU16
  95 0000 0C4A     		ldr	r2, .L8
  96 0002 5369     		ldr	r3, [r2, #20]
  97 0004 43F48023 		orr	r3, r3, #262144
  98 0008 5361     		str	r3, [r2, #20]
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Enter critical section: row programming should not be longer than 7 ms */
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   primask_bit = __get_PRIMASK();
  99              		.loc 1 728 3 view .LVU17
 100              	.LBB12:
 101              	.LBI12:
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 102              		.loc 2 449 31 view .LVU18
 103              	.LBB13:
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 104              		.loc 2 451 3 view .LVU19
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 32


 105              		.loc 2 453 3 view .LVU20
 106              		.syntax unified
 107              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 108 000a EFF3108C 		MRS ip, primask
 109              	@ 0 "" 2
 110              	.LVL2:
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 111              		.loc 2 454 3 view .LVU21
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112              		.loc 2 454 3 is_stmt 0 view .LVU22
 113              		.thumb
 114              		.syntax unified
 115              	.LBE13:
 116              	.LBE12:
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __disable_irq();
 117              		.loc 1 729 3 is_stmt 1 view .LVU23
 118              	.LBB14:
 119              	.LBI14:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 120              		.loc 2 207 27 view .LVU24
 121              	.LBB15:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 122              		.loc 2 209 3 view .LVU25
 123              		.syntax unified
 124              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 125 000e 72B6     		cpsid i
 126              	@ 0 "" 2
 127              		.thumb
 128              		.syntax unified
 129              	.LBE15:
 130              	.LBE14:
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)Address;
 131              		.loc 1 715 11 is_stmt 0 view .LVU26
 132 0010 4023     		movs	r3, #64
 133              	.LVL3:
 134              	.L6:
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Program the double word of the row */
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   do
 135              		.loc 1 732 3 is_stmt 1 discriminator 1 view .LVU27
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     *dest_addr = *src_addr;
 136              		.loc 1 734 5 discriminator 1 view .LVU28
 137              		.loc 1 734 18 is_stmt 0 discriminator 1 view .LVU29
 138 0012 51F8042B 		ldr	r2, [r1], #4
 139              	.LVL4:
 140              		.loc 1 734 16 discriminator 1 view .LVU30
 141 0016 40F8042B 		str	r2, [r0], #4
 142              	.LVL5:
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     dest_addr++;
 143              		.loc 1 735 5 is_stmt 1 discriminator 1 view .LVU31
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     src_addr++;
 144              		.loc 1 736 5 discriminator 1 view .LVU32
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     row_index--;
 145              		.loc 1 737 5 discriminator 1 view .LVU33
 146              		.loc 1 737 14 is_stmt 0 discriminator 1 view .LVU34
 147 001a 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 33


 148              	.LVL6:
 738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (row_index != 0U);
 149              		.loc 1 739 9 is_stmt 1 discriminator 1 view .LVU35
 150              		.loc 1 739 3 is_stmt 0 discriminator 1 view .LVU36
 151 001c 13F0FF03 		ands	r3, r3, #255
 152              	.LVL7:
 153              		.loc 1 739 3 discriminator 1 view .LVU37
 154 0020 F7D1     		bne	.L6
 155              	.L7:
 740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* wait for BSY in order to be sure that flash operation is ended before
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      allowing prefetch in flash. Timeout does not return status, as it will
 743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      be anyway done later */
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != 0U)
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 156              		.loc 1 746 3 is_stmt 1 discriminator 1 view .LVU38
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 157              		.loc 1 744 9 discriminator 1 view .LVU39
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 158              		.loc 1 744 10 is_stmt 0 discriminator 1 view .LVU40
 159 0022 044B     		ldr	r3, .L8
 160 0024 1B69     		ldr	r3, [r3, #16]
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 161              		.loc 1 744 9 discriminator 1 view .LVU41
 162 0026 13F4803F 		tst	r3, #65536
 163 002a FAD1     		bne	.L7
 747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Exit critical section: restore previous priority mask */
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 164              		.loc 1 749 3 is_stmt 1 view .LVU42
 165              	.LVL8:
 166              	.LBB16:
 167              	.LBI16:
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168              		.loc 2 479 27 view .LVU43
 169              	.LBB17:
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 170              		.loc 2 481 3 view .LVU44
 171              		.syntax unified
 172              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 173 002c 8CF31088 		MSR primask, ip
 174              	@ 0 "" 2
 175              	.LVL9:
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 176              		.loc 2 481 3 is_stmt 0 view .LVU45
 177              		.thumb
 178              		.syntax unified
 179              	.LBE17:
 180              	.LBE16:
 750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 181              		.loc 1 750 1 view .LVU46
 182 0030 7047     		bx	lr
 183              	.L9:
 184 0032 00BF     		.align	2
 185              	.L8:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 34


 186 0034 00400058 		.word	1476411392
 187              		.cfi_endproc
 188              	.LFE981:
 190              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 191              		.align	1
 192              		.weak	HAL_FLASH_EndOfOperationCallback
 193              		.syntax unified
 194              		.thumb
 195              		.thumb_func
 197              	HAL_FLASH_EndOfOperationCallback:
 198              	.LVL10:
 199              	.LFB971:
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 200              		.loc 1 410 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 205              		.loc 1 412 3 view .LVU48
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 206              		.loc 1 417 1 is_stmt 0 view .LVU49
 207 0000 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE971:
 211              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 212              		.align	1
 213              		.weak	HAL_FLASH_OperationErrorCallback
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	HAL_FLASH_OperationErrorCallback:
 219              	.LVL11:
 220              	.LFB972:
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 221              		.loc 1 428 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 226              		.loc 1 430 3 view .LVU51
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 227              		.loc 1 435 1 is_stmt 0 view .LVU52
 228 0000 7047     		bx	lr
 229              		.cfi_endproc
 230              	.LFE972:
 232              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_FLASH_IRQHandler
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 239              	HAL_FLASH_IRQHandler:
 240              	.LFB970:
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 241              		.loc 1 305 1 is_stmt 1 view -0
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 35


 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245 0000 10B5     		push	{r4, lr}
 246              	.LCFI2:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 250              		.loc 1 306 3 view .LVU54
 251              	.LVL12:
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 252              		.loc 1 307 3 view .LVU55
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 253              		.loc 1 317 3 view .LVU56
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 254              		.loc 1 317 17 is_stmt 0 view .LVU57
 255 0002 2D4A     		ldr	r2, .L26
 256 0004 1369     		ldr	r3, [r2, #16]
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 257              		.loc 1 317 9 view .LVU58
 258 0006 23F47053 		bic	r3, r3, #15360
 259 000a 23F00503 		bic	r3, r3, #5
 260 000e 1B04     		lsls	r3, r3, #16
 261 0010 1B0C     		lsrs	r3, r3, #16
 262              	.LVL13:
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 263              		.loc 1 320 3 is_stmt 1 view .LVU59
 264 0012 5169     		ldr	r1, [r2, #20]
 265 0014 2948     		ldr	r0, .L26+4
 266 0016 8068     		ldr	r0, [r0, #8]
 267 0018 21EA0001 		bic	r1, r1, r0
 268 001c 5161     		str	r1, [r2, #20]
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 269              		.loc 1 325 3 view .LVU60
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 270              		.loc 1 325 32 is_stmt 0 view .LVU61
 271 001e 284A     		ldr	r2, .L26+8
 272 0020 0240     		ands	r2, r2, r0
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 273              		.loc 1 325 6 view .LVU62
 274 0022 22B3     		cbz	r2, .L13
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 275              		.loc 1 328 5 is_stmt 1 view .LVU63
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 276              		.loc 1 328 11 is_stmt 0 view .LVU64
 277 0024 254A     		ldr	r2, .L26+4
 278 0026 D468     		ldr	r4, [r2, #12]
 279              	.LVL14:
 280              	.L14:
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 281              		.loc 1 339 3 is_stmt 1 view .LVU65
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 282              		.loc 1 342 3 view .LVU66
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 283              		.loc 1 342 6 is_stmt 0 view .LVU67
 284 0028 53BB     		cbnz	r3, .L23
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 36


 285              	.LVL15:
 286              	.L15:
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 287              		.loc 1 358 3 is_stmt 1 view .LVU68
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 288              		.loc 1 358 7 is_stmt 0 view .LVU69
 289 002a 234B     		ldr	r3, .L26
 290 002c 1B69     		ldr	r3, [r3, #16]
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 291              		.loc 1 358 6 view .LVU70
 292 002e 13F0010F 		tst	r3, #1
 293 0032 0CD0     		beq	.L16
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 294              		.loc 1 361 5 is_stmt 1 discriminator 4 view .LVU71
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 295              		.loc 1 361 5 discriminator 4 view .LVU72
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 296              		.loc 1 361 5 discriminator 4 view .LVU73
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 297              		.loc 1 361 5 discriminator 4 view .LVU74
 298 0034 204B     		ldr	r3, .L26
 299 0036 0122     		movs	r2, #1
 300 0038 1A61     		str	r2, [r3, #16]
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 301              		.loc 1 361 5 discriminator 4 view .LVU75
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 302              		.loc 1 363 5 discriminator 4 view .LVU76
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 303              		.loc 1 363 15 is_stmt 0 discriminator 4 view .LVU77
 304 003a 204B     		ldr	r3, .L26+4
 305 003c 9B68     		ldr	r3, [r3, #8]
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 306              		.loc 1 363 8 discriminator 4 view .LVU78
 307 003e 022B     		cmp	r3, #2
 308 0040 2AD0     		beq	.L24
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 309              		.loc 1 384 7 is_stmt 1 view .LVU79
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 310              		.loc 1 384 31 is_stmt 0 view .LVU80
 311 0042 1E4B     		ldr	r3, .L26+4
 312 0044 0022     		movs	r2, #0
 313 0046 9A60     		str	r2, [r3, #8]
 314              	.L19:
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 315              		.loc 1 388 5 is_stmt 1 view .LVU81
 316 0048 2046     		mov	r0, r4
 317 004a FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 318              	.LVL16:
 319              	.L16:
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 320              		.loc 1 391 3 view .LVU82
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 321              		.loc 1 391 13 is_stmt 0 view .LVU83
 322 004e 1B4B     		ldr	r3, .L26+4
 323 0050 9B68     		ldr	r3, [r3, #8]
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 324              		.loc 1 391 6 view .LVU84
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 37


 325 0052 5BB9     		cbnz	r3, .L12
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 326              		.loc 1 394 5 is_stmt 1 discriminator 1 view .LVU85
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 327              		.loc 1 394 5 discriminator 1 view .LVU86
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 328              		.loc 1 394 5 discriminator 1 view .LVU87
 329 0054 184B     		ldr	r3, .L26
 330 0056 9A69     		ldr	r2, [r3, #24]
 331 0058 22F08072 		bic	r2, r2, #16777216
 332 005c 9A61     		str	r2, [r3, #24]
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 333              		.loc 1 394 5 discriminator 1 view .LVU88
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 334              		.loc 1 394 5 discriminator 1 view .LVU89
 335 005e 5A69     		ldr	r2, [r3, #20]
 336 0060 22F04072 		bic	r2, r2, #50331648
 337 0064 5A61     		str	r2, [r3, #20]
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 338              		.loc 1 394 5 discriminator 1 view .LVU90
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 339              		.loc 1 397 5 discriminator 1 view .LVU91
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 340              		.loc 1 397 5 discriminator 1 view .LVU92
 341 0066 154B     		ldr	r3, .L26+4
 342 0068 0022     		movs	r2, #0
 343 006a 1A70     		strb	r2, [r3]
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 344              		.loc 1 397 5 discriminator 1 view .LVU93
 345              	.L12:
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 346              		.loc 1 399 1 is_stmt 0 view .LVU94
 347 006c 10BD     		pop	{r4, pc}
 348              	.LVL17:
 349              	.L13:
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 350              		.loc 1 330 8 is_stmt 1 view .LVU95
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 351              		.loc 1 330 11 is_stmt 0 view .LVU96
 352 006e 10F0060F 		tst	r0, #6
 353 0072 02D0     		beq	.L21
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 354              		.loc 1 333 5 is_stmt 1 view .LVU97
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 355              		.loc 1 333 11 is_stmt 0 view .LVU98
 356 0074 114A     		ldr	r2, .L26+4
 357 0076 1469     		ldr	r4, [r2, #16]
 358              	.LVL18:
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 359              		.loc 1 333 11 view .LVU99
 360 0078 D6E7     		b	.L14
 361              	.LVL19:
 362              	.L21:
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 363              		.loc 1 306 12 view .LVU100
 364 007a 4FF0FF34 		mov	r4, #-1
 365 007e D3E7     		b	.L14
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 38


 366              	.LVL20:
 367              	.L23:
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 368              		.loc 1 345 5 is_stmt 1 view .LVU101
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 369              		.loc 1 345 22 is_stmt 0 view .LVU102
 370 0080 0E4A     		ldr	r2, .L26+4
 371 0082 5168     		ldr	r1, [r2, #4]
 372 0084 1943     		orrs	r1, r1, r3
 373 0086 5160     		str	r1, [r2, #4]
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 374              		.loc 1 348 5 is_stmt 1 view .LVU103
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 375              		.loc 1 348 5 view .LVU104
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 376              		.loc 1 348 5 view .LVU105
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 377              		.loc 1 348 5 view .LVU106
 378 0088 0B49     		ldr	r1, .L26
 379 008a 0B61     		str	r3, [r1, #16]
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 380              		.loc 1 348 5 view .LVU107
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 381              		.loc 1 351 5 view .LVU108
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 382              		.loc 1 351 29 is_stmt 0 view .LVU109
 383 008c 0023     		movs	r3, #0
 384              	.LVL21:
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 385              		.loc 1 351 29 view .LVU110
 386 008e 9360     		str	r3, [r2, #8]
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 387              		.loc 1 354 5 is_stmt 1 view .LVU111
 388 0090 2046     		mov	r0, r4
 389 0092 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 390              	.LVL22:
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 391              		.loc 1 354 5 is_stmt 0 view .LVU112
 392 0096 C8E7     		b	.L15
 393              	.L24:
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 394              		.loc 1 366 7 is_stmt 1 view .LVU113
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 395              		.loc 1 366 13 is_stmt 0 view .LVU114
 396 0098 084A     		ldr	r2, .L26+4
 397 009a 5369     		ldr	r3, [r2, #20]
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 398              		.loc 1 366 28 view .LVU115
 399 009c 013B     		subs	r3, r3, #1
 400 009e 5361     		str	r3, [r2, #20]
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 401              		.loc 1 369 7 is_stmt 1 view .LVU116
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 402              		.loc 1 369 10 is_stmt 0 view .LVU117
 403 00a0 1BB9     		cbnz	r3, .L25
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 404              		.loc 1 378 9 is_stmt 1 view .LVU118
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 39


 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 405              		.loc 1 378 33 is_stmt 0 view .LVU119
 406 00a2 064B     		ldr	r3, .L26+4
 407 00a4 0022     		movs	r2, #0
 408 00a6 9A60     		str	r2, [r3, #8]
 409 00a8 CEE7     		b	.L19
 410              	.L25:
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 411              		.loc 1 372 9 is_stmt 1 view .LVU120
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 412              		.loc 1 372 15 is_stmt 0 view .LVU121
 413 00aa 1069     		ldr	r0, [r2, #16]
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 414              		.loc 1 372 20 view .LVU122
 415 00ac 0130     		adds	r0, r0, #1
 416 00ae 1061     		str	r0, [r2, #16]
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 417              		.loc 1 373 9 is_stmt 1 view .LVU123
 418 00b0 FFF7FEFF 		bl	FLASH_PageErase
 419              	.LVL23:
 420 00b4 C8E7     		b	.L19
 421              	.L27:
 422 00b6 00BF     		.align	2
 423              	.L26:
 424 00b8 00400058 		.word	1476411392
 425 00bc 00000000 		.word	.LANCHOR0
 426 00c0 01000400 		.word	262145
 427              		.cfi_endproc
 428              	.LFE970:
 430              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 431              		.align	1
 432              		.global	HAL_FLASH_Unlock
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 437              	HAL_FLASH_Unlock:
 438              	.LFB973:
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 439              		.loc 1 461 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 444              		.loc 1 462 3 view .LVU125
 445              	.LVL24:
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 446              		.loc 1 464 3 view .LVU126
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 447              		.loc 1 464 7 is_stmt 0 view .LVU127
 448 0000 094B     		ldr	r3, .L33
 449 0002 5B69     		ldr	r3, [r3, #20]
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 450              		.loc 1 464 6 view .LVU128
 451 0004 002B     		cmp	r3, #0
 452 0006 01DB     		blt	.L32
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 40


 453              		.loc 1 462 21 view .LVU129
 454 0008 0020     		movs	r0, #0
 455 000a 7047     		bx	lr
 456              	.L32:
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 457              		.loc 1 467 5 is_stmt 1 view .LVU130
 458 000c 064B     		ldr	r3, .L33
 459 000e 074A     		ldr	r2, .L33+4
 460 0010 9A60     		str	r2, [r3, #8]
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 461              		.loc 1 468 5 view .LVU131
 462 0012 02F18832 		add	r2, r2, #-2004318072
 463 0016 9A60     		str	r2, [r3, #8]
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 464              		.loc 1 471 5 view .LVU132
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 465              		.loc 1 471 9 is_stmt 0 view .LVU133
 466 0018 5B69     		ldr	r3, [r3, #20]
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 467              		.loc 1 471 8 view .LVU134
 468 001a 002B     		cmp	r3, #0
 469 001c 01DB     		blt	.L31
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 470              		.loc 1 462 21 view .LVU135
 471 001e 0020     		movs	r0, #0
 472 0020 7047     		bx	lr
 473              	.L31:
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 474              		.loc 1 473 14 view .LVU136
 475 0022 0120     		movs	r0, #1
 476              	.LVL25:
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 477              		.loc 1 477 3 is_stmt 1 view .LVU137
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 478              		.loc 1 478 1 is_stmt 0 view .LVU138
 479 0024 7047     		bx	lr
 480              	.L34:
 481 0026 00BF     		.align	2
 482              	.L33:
 483 0028 00400058 		.word	1476411392
 484 002c 23016745 		.word	1164378403
 485              		.cfi_endproc
 486              	.LFE973:
 488              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 489              		.align	1
 490              		.global	HAL_FLASH_Lock
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	HAL_FLASH_Lock:
 496              	.LFB974:
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 497              		.loc 1 485 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 41


 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 502              		.loc 1 486 3 view .LVU140
 503              	.LVL26:
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 504              		.loc 1 490 3 view .LVU141
 505 0000 054B     		ldr	r3, .L39
 506 0002 5A69     		ldr	r2, [r3, #20]
 507 0004 42F00042 		orr	r2, r2, #-2147483648
 508 0008 5A61     		str	r2, [r3, #20]
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 509              		.loc 1 493 3 view .LVU142
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 510              		.loc 1 493 7 is_stmt 0 view .LVU143
 511 000a 5B69     		ldr	r3, [r3, #20]
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 512              		.loc 1 493 6 view .LVU144
 513 000c 002B     		cmp	r3, #0
 514 000e 01DB     		blt	.L38
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 515              		.loc 1 495 12 view .LVU145
 516 0010 0120     		movs	r0, #1
 517              	.LVL27:
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 518              		.loc 1 498 3 is_stmt 1 view .LVU146
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 519              		.loc 1 499 1 is_stmt 0 view .LVU147
 520 0012 7047     		bx	lr
 521              	.LVL28:
 522              	.L38:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 523              		.loc 1 486 21 view .LVU148
 524 0014 0020     		movs	r0, #0
 525 0016 7047     		bx	lr
 526              	.L40:
 527              		.align	2
 528              	.L39:
 529 0018 00400058 		.word	1476411392
 530              		.cfi_endproc
 531              	.LFE974:
 533              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 534              		.align	1
 535              		.global	HAL_FLASH_OB_Unlock
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HAL_FLASH_OB_Unlock:
 541              	.LFB975:
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 542              		.loc 1 506 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 547              		.loc 1 507 3 view .LVU150
 548              	.LVL29:
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 42


 549              		.loc 1 510 3 view .LVU151
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 550              		.loc 1 510 7 is_stmt 0 view .LVU152
 551 0000 0A4B     		ldr	r3, .L45
 552 0002 5B69     		ldr	r3, [r3, #20]
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 553              		.loc 1 510 6 view .LVU153
 554 0004 13F0804F 		tst	r3, #1073741824
 555 0008 0BD0     		beq	.L43
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 556              		.loc 1 513 5 is_stmt 1 view .LVU154
 557 000a 084B     		ldr	r3, .L45
 558 000c 084A     		ldr	r2, .L45+4
 559 000e DA60     		str	r2, [r3, #12]
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 560              		.loc 1 514 5 view .LVU155
 561 0010 02F14432 		add	r2, r2, #1145324612
 562 0014 DA60     		str	r2, [r3, #12]
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 563              		.loc 1 517 5 view .LVU156
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 564              		.loc 1 517 9 is_stmt 0 view .LVU157
 565 0016 5B69     		ldr	r3, [r3, #20]
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 566              		.loc 1 517 8 view .LVU158
 567 0018 13F0804F 		tst	r3, #1073741824
 568 001c 03D0     		beq	.L44
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 569              		.loc 1 507 21 view .LVU159
 570 001e 0120     		movs	r0, #1
 571 0020 7047     		bx	lr
 572              	.L43:
 573 0022 0120     		movs	r0, #1
 574 0024 7047     		bx	lr
 575              	.L44:
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 576              		.loc 1 519 14 view .LVU160
 577 0026 0020     		movs	r0, #0
 578              	.LVL30:
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 579              		.loc 1 523 3 is_stmt 1 view .LVU161
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 580              		.loc 1 524 1 is_stmt 0 view .LVU162
 581 0028 7047     		bx	lr
 582              	.L46:
 583 002a 00BF     		.align	2
 584              	.L45:
 585 002c 00400058 		.word	1476411392
 586 0030 3B2A1908 		.word	135866939
 587              		.cfi_endproc
 588              	.LFE975:
 590              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 591              		.align	1
 592              		.global	HAL_FLASH_OB_Lock
 593              		.syntax unified
 594              		.thumb
 595              		.thumb_func
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 43


 597              	HAL_FLASH_OB_Lock:
 598              	.LFB976:
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 599              		.loc 1 531 1 is_stmt 1 view -0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 0, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 604              		.loc 1 532 3 view .LVU164
 605              	.LVL31:
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 606              		.loc 1 536 3 view .LVU165
 607 0000 064B     		ldr	r3, .L50
 608 0002 5A69     		ldr	r2, [r3, #20]
 609 0004 42F08042 		orr	r2, r2, #1073741824
 610 0008 5A61     		str	r2, [r3, #20]
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 611              		.loc 1 539 3 view .LVU166
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 612              		.loc 1 539 7 is_stmt 0 view .LVU167
 613 000a 5B69     		ldr	r3, [r3, #20]
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 614              		.loc 1 539 6 view .LVU168
 615 000c 13F0804F 		tst	r3, #1073741824
 616 0010 01D0     		beq	.L49
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 617              		.loc 1 532 21 view .LVU169
 618 0012 0020     		movs	r0, #0
 619 0014 7047     		bx	lr
 620              	.L49:
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 621              		.loc 1 541 12 view .LVU170
 622 0016 0120     		movs	r0, #1
 623              	.LVL32:
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 624              		.loc 1 544 3 is_stmt 1 view .LVU171
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 625              		.loc 1 545 1 is_stmt 0 view .LVU172
 626 0018 7047     		bx	lr
 627              	.L51:
 628 001a 00BF     		.align	2
 629              	.L50:
 630 001c 00400058 		.word	1476411392
 631              		.cfi_endproc
 632              	.LFE976:
 634              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 635              		.align	1
 636              		.global	HAL_FLASH_OB_Launch
 637              		.syntax unified
 638              		.thumb
 639              		.thumb_func
 641              	HAL_FLASH_OB_Launch:
 642              	.LFB977:
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 643              		.loc 1 552 1 is_stmt 1 view -0
 644              		.cfi_startproc
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 44


 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 648              		.loc 1 555 3 view .LVU174
 649 0000 034A     		ldr	r2, .L53
 650 0002 5369     		ldr	r3, [r2, #20]
 651 0004 43F00063 		orr	r3, r3, #134217728
 652 0008 5361     		str	r3, [r2, #20]
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 653              		.loc 1 559 3 view .LVU175
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 654              		.loc 1 560 1 is_stmt 0 view .LVU176
 655 000a 0120     		movs	r0, #1
 656 000c 7047     		bx	lr
 657              	.L54:
 658 000e 00BF     		.align	2
 659              	.L53:
 660 0010 00400058 		.word	1476411392
 661              		.cfi_endproc
 662              	.LFE977:
 664              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 665              		.align	1
 666              		.global	HAL_FLASH_GetError
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 671              	HAL_FLASH_GetError:
 672              	.LFB978:
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return pFlash.ErrorCode;
 673              		.loc 1 596 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 678              		.loc 1 597 3 view .LVU178
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 679              		.loc 1 598 1 is_stmt 0 view .LVU179
 680 0000 014B     		ldr	r3, .L56
 681 0002 5868     		ldr	r0, [r3, #4]
 682 0004 7047     		bx	lr
 683              	.L57:
 684 0006 00BF     		.align	2
 685              	.L56:
 686 0008 00000000 		.word	.LANCHOR0
 687              		.cfi_endproc
 688              	.LFE978:
 690              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 691              		.align	1
 692              		.global	FLASH_WaitForLastOperation
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 697              	FLASH_WaitForLastOperation:
 698              	.LVL33:
 699              	.LFB979:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 45


 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 700              		.loc 1 620 1 is_stmt 1 view -0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 704              		.loc 1 620 1 is_stmt 0 view .LVU181
 705 0000 38B5     		push	{r3, r4, r5, lr}
 706              	.LCFI3:
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 3, -16
 709              		.cfi_offset 4, -12
 710              		.cfi_offset 5, -8
 711              		.cfi_offset 14, -4
 712 0002 0546     		mov	r5, r0
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 713              		.loc 1 621 3 is_stmt 1 view .LVU182
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 714              		.loc 1 622 3 view .LVU183
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 715              		.loc 1 622 24 is_stmt 0 view .LVU184
 716 0004 FFF7FEFF 		bl	HAL_GetTick
 717              	.LVL34:
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 718              		.loc 1 622 24 view .LVU185
 719 0008 0446     		mov	r4, r0
 720              	.LVL35:
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 721              		.loc 1 627 3 is_stmt 1 view .LVU186
 722              	.L59:
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 723              		.loc 1 627 9 view .LVU187
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 724              		.loc 1 627 10 is_stmt 0 view .LVU188
 725 000a 164B     		ldr	r3, .L72
 726 000c 1B69     		ldr	r3, [r3, #16]
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 727              		.loc 1 627 9 view .LVU189
 728 000e 13F4803F 		tst	r3, #65536
 729 0012 06D0     		beq	.L69
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 730              		.loc 1 629 5 is_stmt 1 view .LVU190
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 731              		.loc 1 629 10 is_stmt 0 view .LVU191
 732 0014 FFF7FEFF 		bl	HAL_GetTick
 733              	.LVL36:
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 734              		.loc 1 629 24 view .LVU192
 735 0018 001B     		subs	r0, r0, r4
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 736              		.loc 1 629 8 view .LVU193
 737 001a A842     		cmp	r0, r5
 738 001c F5D3     		bcc	.L59
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 739              		.loc 1 631 14 view .LVU194
 740 001e 0320     		movs	r0, #3
 741              	.L60:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 46


 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 742              		.loc 1 674 1 view .LVU195
 743 0020 38BD     		pop	{r3, r4, r5, pc}
 744              	.LVL37:
 745              	.L69:
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 746              		.loc 1 640 3 is_stmt 1 view .LVU196
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 747              		.loc 1 640 9 is_stmt 0 view .LVU197
 748 0022 104B     		ldr	r3, .L72
 749 0024 1B69     		ldr	r3, [r3, #16]
 750              	.LVL38:
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 751              		.loc 1 644 3 is_stmt 1 view .LVU198
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 752              		.loc 1 644 6 is_stmt 0 view .LVU199
 753 0026 13F0010F 		tst	r3, #1
 754 002a 02D0     		beq	.L62
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 755              		.loc 1 647 5 is_stmt 1 discriminator 4 view .LVU200
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 756              		.loc 1 647 5 discriminator 4 view .LVU201
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 757              		.loc 1 647 5 discriminator 4 view .LVU202
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 758              		.loc 1 647 5 discriminator 4 view .LVU203
 759 002c 0D4A     		ldr	r2, .L72
 760 002e 0121     		movs	r1, #1
 761 0030 1161     		str	r1, [r2, #16]
 762              	.L62:
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 763              		.loc 1 647 5 discriminator 6 view .LVU204
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 764              		.loc 1 651 3 discriminator 6 view .LVU205
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 765              		.loc 1 651 9 is_stmt 0 discriminator 6 view .LVU206
 766 0032 4CF2FA32 		movw	r2, #50170
 767              	.LVL39:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 768              		.loc 1 654 3 is_stmt 1 discriminator 6 view .LVU207
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 769              		.loc 1 654 3 discriminator 6 view .LVU208
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 770              		.loc 1 654 3 discriminator 6 view .LVU209
 771 0036 1340     		ands	r3, r3, r2
 772              	.LVL40:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 773              		.loc 1 654 3 is_stmt 0 discriminator 6 view .LVU210
 774 0038 01D0     		beq	.L63
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 775              		.loc 1 654 3 is_stmt 1 discriminator 4 view .LVU211
 776 003a 0A4A     		ldr	r2, .L72
 777 003c 1361     		str	r3, [r2, #16]
 778              	.L63:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 779              		.loc 1 654 3 discriminator 6 view .LVU212
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 47


 780              		.loc 1 656 3 discriminator 6 view .LVU213
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 781              		.loc 1 656 6 is_stmt 0 discriminator 6 view .LVU214
 782 003e 5BB9     		cbnz	r3, .L70
 783              	.LVL41:
 784              	.L64:
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 785              		.loc 1 665 9 is_stmt 1 view .LVU215
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 786              		.loc 1 665 10 is_stmt 0 view .LVU216
 787 0040 084B     		ldr	r3, .L72
 788 0042 1B69     		ldr	r3, [r3, #16]
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 789              		.loc 1 665 9 view .LVU217
 790 0044 13F4802F 		tst	r3, #262144
 791 0048 0AD0     		beq	.L71
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 792              		.loc 1 667 5 is_stmt 1 view .LVU218
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 793              		.loc 1 667 10 is_stmt 0 view .LVU219
 794 004a FFF7FEFF 		bl	HAL_GetTick
 795              	.LVL42:
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 796              		.loc 1 667 24 view .LVU220
 797 004e 001B     		subs	r0, r0, r4
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 798              		.loc 1 667 8 view .LVU221
 799 0050 A842     		cmp	r0, r5
 800 0052 F5D3     		bcc	.L64
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 801              		.loc 1 669 14 view .LVU222
 802 0054 0320     		movs	r0, #3
 803 0056 E3E7     		b	.L60
 804              	.LVL43:
 805              	.L70:
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 806              		.loc 1 659 5 is_stmt 1 view .LVU223
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 807              		.loc 1 659 22 is_stmt 0 view .LVU224
 808 0058 034A     		ldr	r2, .L72+4
 809 005a 5360     		str	r3, [r2, #4]
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 810              		.loc 1 661 5 is_stmt 1 view .LVU225
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 811              		.loc 1 661 12 is_stmt 0 view .LVU226
 812 005c 0120     		movs	r0, #1
 813 005e DFE7     		b	.L60
 814              	.LVL44:
 815              	.L71:
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 816              		.loc 1 673 10 view .LVU227
 817 0060 0020     		movs	r0, #0
 818 0062 DDE7     		b	.L60
 819              	.L73:
 820              		.align	2
 821              	.L72:
 822 0064 00400058 		.word	1476411392
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 48


 823 0068 00000000 		.word	.LANCHOR0
 824              		.cfi_endproc
 825              	.LFE979:
 827              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 828              		.align	1
 829              		.global	HAL_FLASH_Program
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	HAL_FLASH_Program:
 835              	.LVL45:
 836              	.LFB968:
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 837              		.loc 1 179 1 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 841              		.loc 1 179 1 is_stmt 0 view .LVU229
 842 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 843              	.LCFI4:
 844              		.cfi_def_cfa_offset 24
 845              		.cfi_offset 3, -24
 846              		.cfi_offset 4, -20
 847              		.cfi_offset 5, -16
 848              		.cfi_offset 6, -12
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 1F46     		mov	r7, r3
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 852              		.loc 1 180 3 is_stmt 1 view .LVU230
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 853              		.loc 1 183 3 view .LVU231
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 854              		.loc 1 184 3 view .LVU232
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 855              		.loc 1 185 3 view .LVU233
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 856              		.loc 1 188 3 view .LVU234
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 857              		.loc 1 188 3 view .LVU235
 858 0004 154B     		ldr	r3, .L82
 859 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 860 0008 012B     		cmp	r3, #1
 861 000a 25D0     		beq	.L79
 862 000c 0446     		mov	r4, r0
 863 000e 0D46     		mov	r5, r1
 864 0010 1646     		mov	r6, r2
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 865              		.loc 1 188 3 discriminator 2 view .LVU236
 866 0012 124B     		ldr	r3, .L82
 867 0014 0122     		movs	r2, #1
 868              	.LVL46:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 869              		.loc 1 188 3 is_stmt 0 discriminator 2 view .LVU237
 870 0016 1A70     		strb	r2, [r3]
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 49


 871              		.loc 1 188 3 is_stmt 1 discriminator 2 view .LVU238
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 872              		.loc 1 191 3 discriminator 2 view .LVU239
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 873              		.loc 1 191 20 is_stmt 0 discriminator 2 view .LVU240
 874 0018 0022     		movs	r2, #0
 875 001a 5A60     		str	r2, [r3, #4]
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 876              		.loc 1 194 3 is_stmt 1 discriminator 2 view .LVU241
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 877              		.loc 1 194 12 is_stmt 0 discriminator 2 view .LVU242
 878 001c 4FF47A70 		mov	r0, #1000
 879              	.LVL47:
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 880              		.loc 1 194 12 discriminator 2 view .LVU243
 881 0020 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 882              	.LVL48:
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 883              		.loc 1 196 3 is_stmt 1 discriminator 2 view .LVU244
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 884              		.loc 1 196 6 is_stmt 0 discriminator 2 view .LVU245
 885 0024 70B9     		cbnz	r0, .L76
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 886              		.loc 1 198 5 is_stmt 1 view .LVU246
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 887              		.loc 1 198 8 is_stmt 0 view .LVU247
 888 0026 012C     		cmp	r4, #1
 889 0028 10D0     		beq	.L81
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 890              		.loc 1 209 7 is_stmt 1 view .LVU248
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 891              		.loc 1 212 7 view .LVU249
 892 002a 3146     		mov	r1, r6
 893 002c 2846     		mov	r0, r5
 894              	.LVL49:
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 895              		.loc 1 212 7 is_stmt 0 view .LVU250
 896 002e FFF7FEFF 		bl	FLASH_Program_Fast
 897              	.LVL50:
 898              	.L78:
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 899              		.loc 1 216 5 is_stmt 1 view .LVU251
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 900              		.loc 1 216 14 is_stmt 0 view .LVU252
 901 0032 4FF47A70 		mov	r0, #1000
 902 0036 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 903              	.LVL51:
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 904              		.loc 1 222 5 is_stmt 1 view .LVU253
 905 003a 094A     		ldr	r2, .L82+4
 906 003c 5369     		ldr	r3, [r2, #20]
 907 003e 23EA0404 		bic	r4, r3, r4
 908              	.LVL52:
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 909              		.loc 1 222 5 is_stmt 0 view .LVU254
 910 0042 5461     		str	r4, [r2, #20]
 911              	.L76:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 50


 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 912              		.loc 1 227 3 is_stmt 1 view .LVU255
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 913              		.loc 1 227 3 view .LVU256
 914 0044 054B     		ldr	r3, .L82
 915 0046 0022     		movs	r2, #0
 916 0048 1A70     		strb	r2, [r3]
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 917              		.loc 1 227 3 view .LVU257
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 918              		.loc 1 230 3 view .LVU258
 919              	.LVL53:
 920              	.L75:
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 921              		.loc 1 231 1 is_stmt 0 view .LVU259
 922 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 923              	.LVL54:
 924              	.L81:
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 925              		.loc 1 201 7 is_stmt 1 view .LVU260
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 926              		.loc 1 204 7 view .LVU261
 927 004c 3246     		mov	r2, r6
 928 004e 3B46     		mov	r3, r7
 929 0050 2846     		mov	r0, r5
 930              	.LVL55:
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 931              		.loc 1 204 7 is_stmt 0 view .LVU262
 932 0052 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 933              	.LVL56:
 934 0056 ECE7     		b	.L78
 935              	.LVL57:
 936              	.L79:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 937              		.loc 1 188 3 view .LVU263
 938 0058 0220     		movs	r0, #2
 939              	.LVL58:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 940              		.loc 1 188 3 view .LVU264
 941 005a F6E7     		b	.L75
 942              	.L83:
 943              		.align	2
 944              	.L82:
 945 005c 00000000 		.word	.LANCHOR0
 946 0060 00400058 		.word	1476411392
 947              		.cfi_endproc
 948              	.LFE968:
 950              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 951              		.align	1
 952              		.global	HAL_FLASH_Program_IT
 953              		.syntax unified
 954              		.thumb
 955              		.thumb_func
 957              	HAL_FLASH_Program_IT:
 958              	.LVL59:
 959              	.LFB969:
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 51


 960              		.loc 1 247 1 is_stmt 1 view -0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 0
 963              		@ frame_needed = 0, uses_anonymous_args = 0
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 964              		.loc 1 247 1 is_stmt 0 view .LVU266
 965 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 966              	.LCFI5:
 967              		.cfi_def_cfa_offset 24
 968              		.cfi_offset 4, -24
 969              		.cfi_offset 5, -20
 970              		.cfi_offset 6, -16
 971              		.cfi_offset 7, -12
 972              		.cfi_offset 8, -8
 973              		.cfi_offset 14, -4
 974 0004 1646     		mov	r6, r2
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 975              		.loc 1 248 3 is_stmt 1 view .LVU267
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 976              		.loc 1 251 3 view .LVU268
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 977              		.loc 1 252 3 view .LVU269
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 978              		.loc 1 253 3 view .LVU270
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 979              		.loc 1 256 3 view .LVU271
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 980              		.loc 1 256 3 view .LVU272
 981 0006 1A4A     		ldr	r2, .L91
 982              	.LVL60:
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 983              		.loc 1 256 3 is_stmt 0 view .LVU273
 984 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 985 000a 012A     		cmp	r2, #1
 986 000c 2CD0     		beq	.L88
 987 000e 0446     		mov	r4, r0
 988 0010 0D46     		mov	r5, r1
 989 0012 1F46     		mov	r7, r3
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 990              		.loc 1 256 3 is_stmt 1 discriminator 2 view .LVU274
 991 0014 164A     		ldr	r2, .L91
 992 0016 0123     		movs	r3, #1
 993 0018 1370     		strb	r3, [r2]
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 994              		.loc 1 256 3 discriminator 2 view .LVU275
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 995              		.loc 1 259 3 discriminator 2 view .LVU276
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 996              		.loc 1 259 20 is_stmt 0 discriminator 2 view .LVU277
 997 001a 0023     		movs	r3, #0
 998 001c 5360     		str	r3, [r2, #4]
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 999              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU278
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1000              		.loc 1 262 12 is_stmt 0 discriminator 2 view .LVU279
 1001 001e 4FF47A70 		mov	r0, #1000
 1002              	.LVL61:
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 52


 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1003              		.loc 1 262 12 discriminator 2 view .LVU280
 1004 0022 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1005              	.LVL62:
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 1006              		.loc 1 264 3 is_stmt 1 discriminator 2 view .LVU281
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 1007              		.loc 1 264 6 is_stmt 0 discriminator 2 view .LVU282
 1008 0026 8046     		mov	r8, r0
 1009 0028 28B1     		cbz	r0, .L86
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 1010              		.loc 1 267 5 is_stmt 1 view .LVU283
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 1011              		.loc 1 267 5 view .LVU284
 1012 002a 114B     		ldr	r3, .L91
 1013 002c 0022     		movs	r2, #0
 1014 002e 1A70     		strb	r2, [r3]
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 1015              		.loc 1 267 5 view .LVU285
 1016              	.LVL63:
 1017              	.L85:
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1018              		.loc 1 298 1 is_stmt 0 view .LVU286
 1019 0030 4046     		mov	r0, r8
 1020 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1021              	.LVL64:
 1022              	.L86:
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 1023              		.loc 1 272 5 is_stmt 1 view .LVU287
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 1024              		.loc 1 272 29 is_stmt 0 view .LVU288
 1025 0036 0E4B     		ldr	r3, .L91
 1026 0038 9C60     		str	r4, [r3, #8]
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1027              		.loc 1 273 5 is_stmt 1 view .LVU289
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1028              		.loc 1 273 20 is_stmt 0 view .LVU290
 1029 003a DD60     		str	r5, [r3, #12]
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1030              		.loc 1 276 5 is_stmt 1 view .LVU291
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1031              		.loc 1 276 5 view .LVU292
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1032              		.loc 1 276 5 view .LVU293
 1033 003c 0D4B     		ldr	r3, .L91+4
 1034 003e 9A69     		ldr	r2, [r3, #24]
 1035 0040 42F08072 		orr	r2, r2, #16777216
 1036 0044 9A61     		str	r2, [r3, #24]
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1037              		.loc 1 276 5 view .LVU294
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1038              		.loc 1 276 5 view .LVU295
 1039 0046 5A69     		ldr	r2, [r3, #20]
 1040 0048 42F04072 		orr	r2, r2, #50331648
 1041 004c 5A61     		str	r2, [r3, #20]
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1042              		.loc 1 276 5 view .LVU296
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 53


 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 1043              		.loc 1 278 5 view .LVU297
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 1044              		.loc 1 278 8 is_stmt 0 view .LVU298
 1045 004e 012C     		cmp	r4, #1
 1046 0050 04D0     		beq	.L90
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1047              		.loc 1 289 7 is_stmt 1 view .LVU299
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1048              		.loc 1 292 7 view .LVU300
 1049 0052 3146     		mov	r1, r6
 1050 0054 2846     		mov	r0, r5
 1051              	.LVL65:
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1052              		.loc 1 292 7 is_stmt 0 view .LVU301
 1053 0056 FFF7FEFF 		bl	FLASH_Program_Fast
 1054              	.LVL66:
 1055 005a E9E7     		b	.L85
 1056              	.LVL67:
 1057              	.L90:
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1058              		.loc 1 281 7 is_stmt 1 view .LVU302
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1059              		.loc 1 284 7 view .LVU303
 1060 005c 3246     		mov	r2, r6
 1061 005e 3B46     		mov	r3, r7
 1062 0060 2846     		mov	r0, r5
 1063              	.LVL68:
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1064              		.loc 1 284 7 is_stmt 0 view .LVU304
 1065 0062 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 1066              	.LVL69:
 1067 0066 E3E7     		b	.L85
 1068              	.LVL70:
 1069              	.L88:
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1070              		.loc 1 256 3 view .LVU305
 1071 0068 4FF00208 		mov	r8, #2
 1072 006c E0E7     		b	.L85
 1073              	.L92:
 1074 006e 00BF     		.align	2
 1075              	.L91:
 1076 0070 00000000 		.word	.LANCHOR0
 1077 0074 00400058 		.word	1476411392
 1078              		.cfi_endproc
 1079              	.LFE969:
 1081              		.global	pFlash
 1082              		.section	.bss.pFlash,"aw",%nobits
 1083              		.align	2
 1084              		.set	.LANCHOR0,. + 0
 1087              	pFlash:
 1088 0000 00000000 		.space	24
 1088      00000000 
 1088      00000000 
 1088      00000000 
 1088      00000000 
 1089              		.text
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 54


 1090              	.Letext0:
 1091              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1092              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1093              		.file 5 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 1094              		.file 6 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 1095              		.file 7 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_flash.h"
 1096              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 1097              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_flash_ex.h"
 1098              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
ARM GAS  C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 stm32wlxx_hal_flash.c
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:18     .text.FLASH_Program_DoubleWord:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:23     .text.FLASH_Program_DoubleWord:00000000 FLASH_Program_DoubleWord
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:72     .text.FLASH_Program_DoubleWord:00000018 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:77     .text.FLASH_Program_Fast:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:82     .text.FLASH_Program_Fast:00000000 FLASH_Program_Fast
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:186    .text.FLASH_Program_Fast:00000034 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:191    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:197    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:212    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:218    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:233    .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:239    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:424    .text.HAL_FLASH_IRQHandler:000000b8 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:431    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:437    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:483    .text.HAL_FLASH_Unlock:00000028 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:489    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:495    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:529    .text.HAL_FLASH_Lock:00000018 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:534    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:540    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:585    .text.HAL_FLASH_OB_Unlock:0000002c $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:591    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:597    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:630    .text.HAL_FLASH_OB_Lock:0000001c $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:635    .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:641    .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:660    .text.HAL_FLASH_OB_Launch:00000010 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:665    .text.HAL_FLASH_GetError:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:671    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:686    .text.HAL_FLASH_GetError:00000008 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:691    .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:697    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:822    .text.FLASH_WaitForLastOperation:00000064 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:828    .text.HAL_FLASH_Program:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:834    .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:945    .text.HAL_FLASH_Program:0000005c $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:951    .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:957    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:1076   .text.HAL_FLASH_Program_IT:00000070 $d
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:1087   .bss.pFlash:00000000 pFlash
C:\Users\NATHAN~1\AppData\Local\Temp\ccJ2zFfh.s:1083   .bss.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_PageErase
HAL_GetTick
